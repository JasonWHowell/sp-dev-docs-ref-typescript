### YamlMime:TSType
name: ThemeProvider
uid: '@microsoft/sp-component-base!ThemeProvider:class'
package: '@microsoft/sp-component-base!'
fullName: ThemeProvider
summary: >-
  The ThemeProvider class provides the capability to get different themes from
  the Framework. Themes can be provided in different contexts, e.g. Canvas
  sections may provide a variant of the global theme in some contexts.
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: '(constructor)(serviceScope, theme)'
    uid: '@microsoft/sp-component-base!ThemeProvider:constructor(1)'
    package: '@microsoft/sp-component-base!'
    fullName: '(constructor)(serviceScope, theme)'
    summary: Construct a new instance of the ThemeProvider class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'constructor(serviceScope: ServiceScope, theme?: ITheme);'
      parameters:
        - id: serviceScope
          description: The current service scope.
          type: '<xref uid="@microsoft/sp-core-library!ServiceScope:class" />'
        - id: theme
          description: Theme to provide.
          type: '<xref uid="@microsoft/sp-component-base!ITheme:interface" />'
properties:
  - name: serviceKey
    uid: '@microsoft/sp-component-base!ThemeProvider.serviceKey:member'
    package: '@microsoft/sp-component-base!'
    fullName: serviceKey
    summary: The service key for ThemeProvider.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'static readonly serviceKey: ServiceKey<ThemeProvider>;'
      return:
        type: >-
          @microsoft/sp-component-base!ThemeProvider.<xref
          uid="serviceKey~0:complex" />
  - name: themeChangedEvent
    uid: '@microsoft/sp-component-base!ThemeProvider#themeChangedEvent:member'
    package: '@microsoft/sp-component-base!'
    fullName: themeChangedEvent
    summary: Raised when the theme changes with the new theme as an argument.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readonly themeChangedEvent: SPEvent<ThemeChangedEventArgs>;'
      return:
        type: >-
          <xref
          uid="@microsoft/sp-component-base!ThemeProvider#themeChangedEvent~0:complex"
          />
methods:
  - name: tryGetTheme()
    uid: '@microsoft/sp-component-base!ThemeProvider#tryGetTheme:member(1)'
    package: '@microsoft/sp-component-base!'
    fullName: tryGetTheme()
    summary: 'If set, get the current scoped theme.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tryGetTheme(): IReadonlyTheme | undefined;'
      return:
        type: >-
          <xref
          uid="@microsoft/sp-component-base!ThemeProvider#tryGetTheme~0:complex"
          />
        description: ''
