### YamlMime:UniversalReference
items:
  - uid: sp-component-base.BaseComponent
    summary: The base class for client-side components such as BaseClientSideWebPart or BaseExtension.
    remarks: >-
      The constructor for this class is marked as internal. Third-party code should not call the constructor directly or
      create subclasses that extend the BaseComponent class.
    name: BaseComponent
    fullName: sp-component-base.BaseComponent
    langs:
      - typeScript
    type: class
    implements:
      - ISPEventObserver
    package: sp-component-base
    children:
      - sp-component-base.BaseComponent.componentId
      - sp-component-base.BaseComponent.context
      - sp-component-base.BaseComponent.dispose
      - sp-component-base.BaseComponent.instanceId
      - sp-component-base.BaseComponent.isDisposed
      - sp-component-base.BaseComponent.manifest
      - sp-component-base.BaseComponent.onDispose
  - uid: sp-component-base.BaseComponent.componentId
    summary: Returns the component identifier as defined in the componentâ€™s associated manifest.
    remarks: >-
      Each client-side component has an associated manifest that is used by the sp-loader to load its scripts, and which
      may include additional metadata about the component. The manifest is uniquely identified using a text string
      containing a lower case GUID value.
    name: componentId
    fullName: sp-component-base.BaseComponent.componentId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly componentId: string;'
      return:
        type:
          - string
  - uid: sp-component-base.BaseComponent.context
    summary: Use the context object to access common services and state associated with the component.
    remarks: >-
      Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a
      read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside
      the constructor), but child classes should redeclare it as readonly.
    name: context
    fullName: sp-component-base.BaseComponent.context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected context: BaseComponentContext;'
      return:
        type:
          - sp-component-base.BaseComponentContext
  - uid: sp-component-base.BaseComponent.dispose
    summary: Disposes the component.
    remarks: >-
      Third-party code generally does not need to call this method; it's invoked automatically when the lifecycle ends
      for a web part or extension. To perform custom cleanup when your component is disposed, override the
      [BaseComponent.onDispose](xref:sp-component-base.BaseComponent.onDispose) method.
    name: dispose()
    fullName: sp-component-base.BaseComponent.dispose
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dispose(): void;'
      return:
        type:
          - void
        description: ''
  - uid: sp-component-base.BaseComponent.instanceId
    summary: A unique identifier for the instance of the component.
    remarks: >-
      A component implementation can be loaded multiple times on the page. For example, if the component is a charting
      web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely
      identifies each of these instances.
    name: instanceId
    fullName: sp-component-base.BaseComponent.instanceId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly instanceId: string;'
      return:
        type:
          - string
  - uid: sp-component-base.BaseComponent.isDisposed
    summary: Returns true if the component has been already disposed.
    name: isDisposed
    fullName: sp-component-base.BaseComponent.isDisposed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDisposed: boolean;'
      return:
        type:
          - boolean
  - uid: sp-component-base.BaseComponent.manifest
    summary: Provides access to the manifest for the client-side component.
    remarks: Child classes can override this with more specialized manifest types.
    name: manifest
    fullName: sp-component-base.BaseComponent.manifest
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly manifest: IClientSideComponentManifest;'
      return:
        type:
          - IClientSideComponentManifest
  - uid: sp-component-base.BaseComponent.onDispose
    summary: >-
      This event method is called at the end of the component's lifecycle. It provides an opportunity to release any
      associated resources, cancel any outstanding requests, etc.
    name: onDispose()
    fullName: sp-component-base.BaseComponent.onDispose
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onDispose(): void;'
      return:
        type:
          - void
        description: ''
