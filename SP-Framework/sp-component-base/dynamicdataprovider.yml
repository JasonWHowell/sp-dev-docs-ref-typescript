### YamlMime:UniversalReference
items:
  - uid: sp-component-base.DynamicDataProvider
    summary: >-
      The Dynamic Data Provider allows components to consume Dynamic Data. It allows components to request Dynamic Data
      sources and register/unregister to those.
    name: DynamicDataProvider
    fullName: sp-component-base.DynamicDataProvider
    langs:
      - typeScript
    type: class
    implements:
      - IDisposable
    package: sp-component-base
    children:
      - sp-component-base.DynamicDataProvider.dispose
      - sp-component-base.DynamicDataProvider.getAvailableSources
      - sp-component-base.DynamicDataProvider.isDisposed
      - sp-component-base.DynamicDataProvider.registerAvailableSourcesChanged
      - sp-component-base.DynamicDataProvider.registerPropertyChanged
      - sp-component-base.DynamicDataProvider.registerSourceChanged
      - sp-component-base.DynamicDataProvider.tryGetSource
      - sp-component-base.DynamicDataProvider.unregisterAvailableSourcesChanged
      - sp-component-base.DynamicDataProvider.unregisterPropertyChanged
      - sp-component-base.DynamicDataProvider.unregisterSourceChanged
  - uid: sp-component-base.DynamicDataProvider.dispose
    summary: Disposes the Dynamic Data Provider.
    name: dispose()
    fullName: sp-component-base.DynamicDataProvider.dispose
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dispose(): void;'
      return:
        type:
          - void
        description: ''
  - uid: sp-component-base.DynamicDataProvider.getAvailableSources
    summary: Returns a list with all available Dynamic Data Sources.
    name: getAvailableSources()
    fullName: sp-component-base.DynamicDataProvider.getAvailableSources
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAvailableSources(): ReadonlyArray<IDynamicDataSource>;'
      return:
        type:
          - ReadonlyArray<IDynamicDataSource>
        description: Read-only array with all available sources.
  - uid: sp-component-base.DynamicDataProvider.isDisposed
    summary: Returns true if the Dynamic Data Provider is disposed.
    name: isDisposed
    fullName: sp-component-base.DynamicDataProvider.isDisposed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDisposed: boolean;'
      return:
        type:
          - boolean
  - uid: sp-component-base.DynamicDataProvider.registerAvailableSourcesChanged
    summary: Registers a callback to an event that raises when the list of available Dynamic Data Sources is updated.
    name: registerAvailableSourcesChanged(callback)
    fullName: sp-component-base.DynamicDataProvider.registerAvailableSourcesChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'registerAvailableSourcesChanged(callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: Function to execute when the sources are updated.
          type:
            - () => void
  - uid: sp-component-base.DynamicDataProvider.registerPropertyChanged
    summary: Registers a callback for updates when a property is changed in a Dynamic Data source.
    name: 'registerPropertyChanged(sourceId, propertyId, callback)'
    fullName: sp-component-base.DynamicDataProvider.registerPropertyChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'registerPropertyChanged(sourceId: string, propertyId: string, callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceId
          description: Id of the Dynamic Data Source.
          type:
            - string
        - id: propertyId
          description: Id of the property of the source.
          type:
            - string
        - id: callback
          description: Function to execute when the source updates its data.
          type:
            - () => void
  - uid: sp-component-base.DynamicDataProvider.registerSourceChanged
    summary: >-
      Registers a callback for updates when a Dynamic Data source is changed. This happens when any property is updated
      within the source.
    name: 'registerSourceChanged(sourceId, callback)'
    fullName: sp-component-base.DynamicDataProvider.registerSourceChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'registerSourceChanged(sourceId: string, callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceId
          description: Id of the Dynamic Data Source.
          type:
            - string
        - id: callback
          description: Function to execute when the source updates its data.
          type:
            - () => void
  - uid: sp-component-base.DynamicDataProvider.tryGetSource
    summary: 'Returns a Dynamic Data Source, by its id. If the source is not present, it returns undefined.'
    name: tryGetSource(id)
    fullName: sp-component-base.DynamicDataProvider.tryGetSource
    langs:
      - typeScript
    type: method
    syntax:
      content: 'tryGetSource(id: string): IDynamicDataSource | undefined;'
      return:
        type:
          - IDynamicDataSource | undefined
        description: ''
      parameters:
        - id: id
          description: Id of the Dynamic Data Source.
          type:
            - string
  - uid: sp-component-base.DynamicDataProvider.unregisterAvailableSourcesChanged
    summary: Unregisters a callback to an event that raises when the list of available Dynamic Data Sources is updated.
    name: unregisterAvailableSourcesChanged(callback)
    fullName: sp-component-base.DynamicDataProvider.unregisterAvailableSourcesChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unregisterAvailableSourcesChanged(callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: Function to remove from the registration. Must be the same it was registered with.
          type:
            - () => void
  - uid: sp-component-base.DynamicDataProvider.unregisterPropertyChanged
    summary: Unregisters a callback for updates when a property is changed in a Dynamic Data source.
    name: 'unregisterPropertyChanged(sourceId, propertyId, callback)'
    fullName: sp-component-base.DynamicDataProvider.unregisterPropertyChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unregisterPropertyChanged(sourceId: string, propertyId: string, callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceId
          description: Id of the Dynamic Data Source.
          type:
            - string
        - id: propertyId
          description: Id of the property of the source.
          type:
            - string
        - id: callback
          description: Function to remove from the registration. Must be the same it was registered with.
          type:
            - () => void
  - uid: sp-component-base.DynamicDataProvider.unregisterSourceChanged
    summary: Unregisters a callback for updates when a Dynamic Data source is changed.
    name: 'unregisterSourceChanged(sourceId, callback)'
    fullName: sp-component-base.DynamicDataProvider.unregisterSourceChanged
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unregisterSourceChanged(sourceId: string, callback: () => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceId
          description: Id of the Dynamic Data Source.
          type:
            - string
        - id: callback
          description: Function to remove from the registration. Must be the same it was registered with.
          type:
            - () => void
