### YamlMime:UniversalReference
items:
  - uid: sp-application-base.BaseApplicationCustomizer
    summary: >-
      This is the base class that third parties should extend when implementing a client-side extension that runs when
      an application is first starting.
    remarks: >-
      In the component manifest, the "extensionType" should be set to "ApplicationCustomizer".


      Example usage scenarios for an application customizer might include: rendering custom UI elements inside a
      SharePoint content placeholder, tracking page load statistics, or automatically logging the user out after a
      certain time period.
    name: BaseApplicationCustomizer
    fullName: BaseApplicationCustomizer
    langs:
      - typeScript
    type: class
    extends:
      - 'BaseExtension<TProperties> '
    package: sp-application-base
    children:
      - sp-application-base.BaseApplicationCustomizer.context
      - sp-application-base.BaseApplicationCustomizer.dispose
      - sp-application-base.BaseApplicationCustomizer.onPlaceholdersChanged
  - uid: sp-application-base.BaseApplicationCustomizer.context
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected readonly context: ApplicationCustomizerContext;'
      return:
        type:
          - sp-application-base.ApplicationCustomizerContext
  - uid: sp-application-base.BaseApplicationCustomizer.dispose
    summary: Disposes the component.
    remarks: >-
      Third-party code generally does not need to call this method; it's invoked automatically when the lifecycle ends
      for a web part or extension. To perform custom cleanup when your component is disposed, override the  method.
    name: dispose()
    fullName: dispose()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dispose(): void;'
      return:
        type:
          - void
        description: ''
  - uid: sp-application-base.BaseApplicationCustomizer.onPlaceholdersChanged
    summary: >-
      This event method is called when the placeholders of the host application change, come into existence, or
      disappear.
    name: onPlaceholdersChanged(placeholderProvider)
    fullName: onPlaceholdersChanged(placeholderProvider)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protected onPlaceholdersChanged(placeholderProvider: PlaceholderProvider): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: placeholderProvider
          description: ''
          type:
            - sp-application-base.PlaceholderProvider
