### YamlMime:UniversalReference
items:
  - uid: web-apis.Response
    name: Response
    fullName: Response
    langs:
      - typeScript
    type: class
    package: web-apis
    children:
      - web-apis.Response.__constructor
      - web-apis.Response.clone
      - web-apis.Response.error
      - web-apis.Response.headers
      - web-apis.Response.ok
      - web-apis.Response.redirect
      - web-apis.Response.status
      - web-apis.Response.statusText
      - web-apis.Response.type
      - web-apis.Response.url
  - uid: web-apis.Response.__constructor
    summary: "[Home](./index.md) &gt; [sp-webpart-base](./sp-webpart-base.md) &gt; [BaseClientSideWebPart](./sp-webpart-base.baseclientsidewebpart.md)\r\n\r\n> This API is provided as a preview for developers and may change based on feedback that we receive.  Do not use this API in a production environment.\r\n\r\n# BaseClientSideWebPart.onPropertyPaneFieldChanged method\r\n\r\nThis API is invoked after updating the new value of the property in the property bag when the PropertyPane is being used in Reactive mode.\r\n\r\n**Signature:**\r\n```javascript\r\n@virtual protected onPropertyPaneFieldChanged(propertyPath: string, oldValue: any, newValue: any): void;\r\n```\r\n**Returns:** `void`\r\n\r\n## Parameters\r\n\r\n|  Parameter | Type | Description |\r\n|  --- | --- | --- |\r\n|  `propertyPath` | `string` | JSON path of the property in the property bag. In the case of custom field, if no target property is provided then a custom value is assigned, which will be in the form of '\\_\\_CustomField\\_&lt;key provided when the custom field is created&gt;'. |\r\n|  `oldValue` | `any` | Old value of the property. This value could be undefined/empty in the case of custom field. |\r\n|  `newValue` | `any` | New value of the property. This value could be undefined/empty in the case of custom field. |\r\n\r\n"
    name: __constructor
    fullName: __constructor
    langs:
      - typeScript
    type: constructor
  - uid: web-apis.Response.clone
    name: clone()
    fullName: clone
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clone(): Response;'
      return:
        type:
          - Response
        description: ''
  - uid: web-apis.Response.error
    name: error()
    fullName: error
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static error(): Response;'
      return:
        type:
          - Response
        description: ''
  - uid: web-apis.Response.headers
    name: headers
    fullName: headers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headers: Headers;'
      return:
        type:
          - Headers
  - uid: web-apis.Response.ok
    name: ok
    fullName: ok
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ok: boolean;'
      return:
        type:
          - boolean
  - uid: web-apis.Response.redirect
    name: redirect()
    fullName: redirect
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static redirect(url: string, status: number): Response;'
      return:
        type:
          - Response
        description: ''
  - uid: web-apis.Response.status
    name: status
    fullName: status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'status: number;'
      return:
        type:
          - number
  - uid: web-apis.Response.statusText
    name: statusText
    fullName: statusText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'statusText: string;'
      return:
        type:
          - string
  - uid: web-apis.Response.type
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: ResponseType;'
      return:
        type:
          - ResponseType
  - uid: web-apis.Response.url
    name: url
    fullName: url
    langs:
      - typeScript
    type: property
    syntax:
      content: 'url: string;'
      return:
        type:
          - string
