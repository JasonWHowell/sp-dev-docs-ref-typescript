### YamlMime:UniversalReference
items:
  - uid: sp-dialog.SecondaryDialogProvider
    summary: >-
      > [!NOTE]

      > _This API is provided as a preview for developers and may change based on feedback_

      > _that we receive. Do not use this API in a production environment._


      This class handles calls to show a secondary dialog. It's only available by calling this.secondaryManagerProvider
      inside a dialog.
    remarks: >-
      Secondary dialogs do not need to request permission from dialog manager, because the primary dialog already has
      permission. Therefore, the secondary dialog will be immediately shown. This causes the primary dialog to hide
      until the secondary dialog is closed. There can be only one secondary dialog at a time. Additional requests to
      show more secondary dialogs are rejected. see
      [BaseDialog.secondaryDialogProvider](xref:sp-dialog.BaseDialog.secondaryDialogProvider) for how to use this
    name: SecondaryDialogProvider
    fullName: sp-dialog.SecondaryDialogProvider
    langs:
      - typeScript
    type: class
    package: sp-dialog
    children:
      - sp-dialog.SecondaryDialogProvider.alert
      - sp-dialog.SecondaryDialogProvider.prompt
      - sp-dialog.SecondaryDialogProvider.show
  - uid: sp-dialog.SecondaryDialogProvider.alert
    summary: >-
      > [!NOTE]

      > _This API is provided as a preview for developers and may change based on feedback_

      > _that we receive. Do not use this API in a production environment._


      Similar to [Dialog.alert](xref:sp-dialog.Dialog.alert) . The only difference is that the dialog is immediately
      shown if there are no other secondary dialogs. Otherwise, the promise rejects.
    name: 'alert(message, options)'
    fullName: sp-dialog.SecondaryDialogProvider.alert
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public alert(message: string, options?: IAlertOptions): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
        - id: options
          description: 'Dialog showing optionssee [IDialogShowOptions](xref:sp-dialog.IDialogShowOptions)'
          type:
            - IAlertOptions
  - uid: sp-dialog.SecondaryDialogProvider.prompt
    summary: >-
      > [!NOTE]

      > _This API is provided as a preview for developers and may change based on feedback_

      > _that we receive. Do not use this API in a production environment._


      Similar to [Dialog.prompt](xref:sp-dialog.Dialog.prompt) . The only difference is that the dialog is immediately
      shown if there are no other secondary dialogs. Otherwise, the promise rejects.
    name: 'prompt(message, options)'
    fullName: sp-dialog.SecondaryDialogProvider.prompt
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public prompt(message: string, options?: IPromptOptions): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
        - id: options
          description: >-
            Dialog showing optionssee [IDialogShowOptions](xref:sp-dialog.IDialogShowOptions) .The confirmOpen option
            will be ignored.
          type:
            - IPromptOptions
  - uid: sp-dialog.SecondaryDialogProvider.show
    summary: >-
      > [!NOTE]

      > _This API is provided as a preview for developers and may change based on feedback_

      > _that we receive. Do not use this API in a production environment._


      Similar to [BaseDialog.show](xref:sp-dialog.BaseDialog.show) . The dialog to show is passed in as parameter and
      the dialog is immediately shown if there are no other secondary dialogs. Otherwise, the promise rejects.
    name: 'show(dialog, options)'
    fullName: sp-dialog.SecondaryDialogProvider.show
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public show(dialog: BaseDialog, options?: IDialogShowOptions): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: dialog
          description: ''
          type:
            - BaseDialog
        - id: options
          description: >-
            Dialog showing optionssee [IDialogShowOptions](xref:sp-dialog.IDialogShowOptions) .The confirmOpen option
            will be ignored.
          type:
            - IDialogShowOptions
