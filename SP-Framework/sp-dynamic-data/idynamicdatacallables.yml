### YamlMime:UniversalReference
items:
  - uid: sp-dynamic-data.IDynamicDataCallables
    summary: >-
      Interface for components to implement in order to be dynamic data sources. This can be implemented as an object
      with state, or a set of loose functions that returns the data.
    name: IDynamicDataCallables
    fullName: IDynamicDataCallables
    langs:
      - typeScript
    type: interface
    package: sp-dynamic-data
    children:
      - sp-dynamic-data.IDynamicDataCallables.allowedEvents
      - sp-dynamic-data.IDynamicDataCallables.getAnnotatedPropertyValue
      - sp-dynamic-data.IDynamicDataCallables.getPropertyDefinitions
      - sp-dynamic-data.IDynamicDataCallables.getPropertyValue
      - sp-dynamic-data.IDynamicDataCallables.sendEvent
  - uid: sp-dynamic-data.IDynamicDataCallables.allowedEvents
    summary: |-
      Returns list of allowed events on the dynamic data source.

      When this function returns a non-empty result, then source must define 'sendEvent' api.

      If this api is not defined or returns an empty array, then no consumer will be able to talk to this source.
    isPreview: true
    name: allowedEvents()
    fullName: allowedEvents()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'allowedEvents?(): ReadonlyArray<IDynamicDataEventDefinition>;'
      return:
        type:
          - ReadonlyArray<IDynamicDataEventDefinition>
        description: ''
  - uid: sp-dynamic-data.IDynamicDataCallables.getAnnotatedPropertyValue
    summary: >-
      Given a property id, returns its annotated value. If the source doesn't supply the annotated value, then it falls
      back to whatever 'getPropertyValue' returns as the sample value and metadata would be undefined.
    name: getAnnotatedPropertyValue(propertyId)
    fullName: getAnnotatedPropertyValue(propertyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAnnotatedPropertyValue?(propertyId: string): IDynamicDataAnnotatedPropertyValue | undefined;'
      return:
        type:
          - IDynamicDataAnnotatedPropertyValue | undefined
        description: ''
      parameters:
        - id: propertyId
          description: One of the property ids exposed from the dynamic data source.
          type:
            - string
  - uid: sp-dynamic-data.IDynamicDataCallables.getPropertyDefinitions
    summary: Returns all the property definitions that the DataSource will provide.
    name: getPropertyDefinitions()
    fullName: getPropertyDefinitions()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPropertyDefinitions(): ReadonlyArray<IDynamicDataPropertyDefinition>;'
      return:
        type:
          - ReadonlyArray<IDynamicDataPropertyDefinition>
        description: ''
  - uid: sp-dynamic-data.IDynamicDataCallables.getPropertyValue
    summary: 'Given a property id, returns the value of the property.'
    remarks: 'It is assumed that when this function returns an array, it is homogeneous.'
    name: getPropertyValue(propertyId)
    fullName: getPropertyValue(propertyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPropertyValue(propertyId: string): any;'
      return:
        type:
          - any
        description: ''
      parameters:
        - id: propertyId
          description: ''
          type:
            - string
  - uid: sp-dynamic-data.IDynamicDataCallables.sendEvent
    summary: >-
      If defined, enables the consumer to send data to the associated dynamic data source. Then source can act
      accordingly.


      Invoking this api throws an error when the passed in 'eventName' is not one of the allowed events on the source.
    isPreview: true
    name: 'sendEvent(eventName, data)'
    fullName: 'sendEvent(eventName, data)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sendEvent?(eventName: string, data: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventName
          description: A case-sensitive string representing the name of the event.
          type:
            - string
        - id: data
          description: Data to be sent to the dynamic data source.
          type:
            - any
