### YamlMime:UniversalReference
items:
  - uid: sp-core-library.UrlQueryParameterCollection
    summary: >
      > [!NOTE]

      > **_This API has been deprecated._**

      > 

      > *Use the URLSearchParams polyfill instead.*


      Class for storing and retrieving query parameters. The URL can be server-relative and it will parse empty/null
      strings. The query parameters must start with ? to indicate the first query parameter and use &amp; for all
      subsequent parameters. The class also supports fragments. Edge cases behavior: Empty value
      (www.example.com/?test=) stores key and empty value No equals in queryParam (www.example.com/?test) stores key and
      undefined value Empty queryParam (www.example.com/?&debug=on) stores undefined key and value Query param with only
      equals (www.example.com/?=&debug=on stores empty string key and value
    name: UrlQueryParameterCollection
    fullName: sp-core-library.UrlQueryParameterCollection
    langs:
      - typeScript
    type: class
    package: sp-core-library
    children:
      - sp-core-library.UrlQueryParameterCollection.constructor
      - sp-core-library.UrlQueryParameterCollection.getValue
      - sp-core-library.UrlQueryParameterCollection.getValues
  - uid: sp-core-library.UrlQueryParameterCollection.constructor
    summary: >
      Constructs a new instance of the [UrlQueryParameterCollection](xref:sp-core-library.UrlQueryParameterCollection)
      class
    name: constructor()
    fullName: sp-core-library.UrlQueryParameterCollection.constructor
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url: string);'
  - uid: sp-core-library.UrlQueryParameterCollection.getValue
    summary: >
      Returns the value of the first matching query parameter or undefined if the key doesn't exist. Examples:
      this.\_queryParameterList = \[ {key: TEST, value: done}, {key: DEBUG, value: false}, {key: TEST, value: notdone}\]
      getValue('TEST') ---&gt; 'done' getValue('debug') ---> 'false' getValue('lost') ---> undefined
    name: getValue(param)
    fullName: sp-core-library.UrlQueryParameterCollection.getValue
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public getValue(param: string): string | undefined;'
      return:
        type:
          - string | undefined
        description: ''
      parameters:
        - id: param
          description: |
            the case insensitive key for the desired query parameter value.
          type:
            - string
  - uid: sp-core-library.UrlQueryParameterCollection.getValues
    summary: >
      Returns the values of all of the matching query parameters or undefined if the key doesn't exist. Examples:
      this.\_queryParameterList = \[ {key: TEST, value: done}, {key: DEBUG, value: false}, {key: TEST, value: notdone}\]
      getValues('TEST') ---&gt; \['done', 'notdone'\] getValues('debug') ---> \['false'\] getValues('lost') --->
      undefined
    name: getValues(param)
    fullName: sp-core-library.UrlQueryParameterCollection.getValues
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public getValues(param: string): (string | undefined)[] | undefined;'
      return:
        type:
          - '(string | undefined)[] | undefined'
        description: ''
      parameters:
        - id: param
          description: |
            the case insensitive key for the desired query parameter value.
          type:
            - string
