### YamlMime:UniversalReference
items:
  - uid: '@microsoft/sp-core-library!Text:class'
    summary: Operations for working with strings that contain text.
    remarks: 'The utilities provided by this class are intended to be simple, small, and very broadly applicable.'
    name: Text
    fullName: Text
    langs:
      - typeScript
    type: class
    package: '@microsoft/sp-core-library!'
    children:
      - '@microsoft/sp-core-library!Text.format:member(1)'
      - '@microsoft/sp-core-library!Text.replaceAll:member(1)'
  - uid: '@microsoft/sp-core-library!Text.format:member(1)'
    summary: Format a string by substituting parameters.
    remarks: >-
      This function replaces template parameters such as `"{0}"` or `"{1}"` with the corresponding argument. If the
      value is null or undefined, it will be replaced by the word `"null"` or `"undefined"`<!-- -->. The format string s
      must not be null or undefined.


      Usage example:


      `Text.format("hello {0}!", "world")` will return `"hello world!"`
    name: 'format(s, values)'
    fullName: 'format(s, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static format(s: string, ...values: any[]): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: s
          description: ''
          type:
            - string
        - id: values
          description: ''
          type:
            - 'any[]'
  - uid: '@microsoft/sp-core-library!Text.replaceAll:member(1)'
    summary: 'Returns the input string, with all instances of `searchValue` replaced by `replaceValue`<!-- -->.'
    remarks: 'Note that JavaScript''s `string.replace()` only replaces the first match, unless a global RegExp is provided.'
    name: 'replaceAll(input, searchValue, replaceValue)'
    fullName: 'replaceAll(input, searchValue, replaceValue)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static replaceAll(input: string, searchValue: string, replaceValue: string): string;'
      return:
        type:
          - string
        description: ''
      parameters:
        - id: input
          description: The string to be modified
          type:
            - string
        - id: searchValue
          description: The value to search for
          type:
            - string
        - id: replaceValue
          description: The replacement text
          type:
            - string
