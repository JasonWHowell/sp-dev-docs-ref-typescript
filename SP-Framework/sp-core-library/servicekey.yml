### YamlMime:UniversalReference
items:
  - uid: sp-core-library.ServiceKey
    summary: >
      The ServiceKey is a lookup key that is used when calling ServiceScope.consume() to fetch a dependency. The key
      also defines a default implementation of the dependency, which will be autocreated by the root scope if the
      dependency is not found. Providing a default implementation ensures that new dependencies can be safely introduced
      without inadvertently breaking components that are loaded by an older host (that does not provide the new
      dependency).
    name: ServiceKey
    fullName: sp-core-library.ServiceKey
    langs:
      - typeScript
    type: class
    package: sp-core-library
    children:
      - sp-core-library.ServiceKey.create
      - sp-core-library.ServiceKey.createCustom
      - sp-core-library.ServiceKey.defaultCreator
      - sp-core-library.ServiceKey.id
      - sp-core-library.ServiceKey.name
  - uid: sp-core-library.ServiceKey.create
    summary: >
      Constructs a new ServiceKey whose default implementation will be a new instance of a TypeScript class that accepts
      the standard constructor parameter. If you want to specify custom constructor parameters, use createCustom()
      instead.
    name: 'create(name, serviceClass)'
    fullName: sp-core-library.ServiceKey.create
    langs:
      - typeScript
    type: method
    syntax:
      content: "public static create < TKey >(name: string,\r\n    serviceClass: { new (serviceScope: ServiceScope); }): ServiceKey<TKey>;"
      return:
        type:
          - ServiceKey<TKey>
        description: |
          - the newly created ServiceKey
      parameters:
        - id: name
          description: |
            A name such as "MyApplication.IMyService" which should be unique within your application.
          type:
            - string
        - id: serviceClass
          description: |
            the TypeScript class that implements the service.
          type:
            - '{ new (serviceScope: ServiceScope); }'
  - uid: sp-core-library.ServiceKey.createCustom
    summary: |
      Constructs a new ServiceKey whose default implementation will be obtained by invoking the specified callback.
    name: 'createCustom(name, defaultCreator)'
    fullName: sp-core-library.ServiceKey.createCustom
    langs:
      - typeScript
    type: method
    syntax:
      content: 'public static createCustom < TKey >(name: string, defaultCreator: ServiceCreator<TKey>): ServiceKey<TKey>;'
      return:
        type:
          - ServiceKey<TKey>
        description: |
          - the newly created ServiceKey
      parameters:
        - id: name
          description: |
            A name such as "MyApplication.IMyService" which should be unique within your application.
          type:
            - string
        - id: defaultCreator
          description: |
            A callback that returns an object that implements the T interface
          type:
            - ServiceCreator<TKey>
  - uid: sp-core-library.ServiceKey.defaultCreator
    name: defaultCreator
    fullName: sp-core-library.ServiceKey.defaultCreator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'defaultCreator: ServiceCreator<T>;'
      return:
        type:
          - ServiceCreator<T>
  - uid: sp-core-library.ServiceKey.id
    name: id
    fullName: sp-core-library.ServiceKey.id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
  - uid: sp-core-library.ServiceKey.name
    name: name
    fullName: sp-core-library.ServiceKey.name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
