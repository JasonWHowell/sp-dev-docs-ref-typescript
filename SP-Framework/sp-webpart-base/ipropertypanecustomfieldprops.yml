### YamlMime:UniversalReference
items:
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps
    summary: PropertyPane CustomPropertyField props.
    name: IPropertyPaneCustomFieldProps
    fullName: sp-webpart-base.IPropertyPaneCustomFieldProps
    langs:
      - typeScript
    type: interface
    package: sp-webpart-base
    children:
      - sp-webpart-base.IPropertyPaneCustomFieldProps.context
      - sp-webpart-base.IPropertyPaneCustomFieldProps.key
      - sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose
      - sp-webpart-base.IPropertyPaneCustomFieldProps.onRender
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.context
    summary: >-
      Instance specific context. This context is passed back to the web part in the onRender and onDispose APIs. The web
      part can use this context to manage state information.
    name: context
    fullName: sp-webpart-base.IPropertyPaneCustomFieldProps.context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context?: any;'
      return:
        type:
          - any
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.key
    summary: |-
      An UNIQUE key indicates the identity of this contorl. 

       The PropertyPane uses ReactJS to render its components. ReactJS uses keys to identify a component and if it should be re-rendered or not. This is a performance feature in ReactJS. Please read the following link to understand how to pick the value of the key. see  https://facebook.github.io/react/docs/lists-and-keys.html\#keys
    name: key
    fullName: sp-webpart-base.IPropertyPaneCustomFieldProps.key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key: string;'
      return:
        type:
          - string
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose
    summary: This API is called when the component is unmounted from the host element.
    name: onDispose
    fullName: sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose
    langs:
      - typeScript
    type: property
    syntax:
      content: 'onDispose?: (domElement: HTMLElement, context?: any) => void;'
      return:
        type:
          - '(domElement: HTMLElement, context?: any) => void'
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.onRender
    summary: This API will be called once the custom field is mounted on the host element.
    name: onRender
    fullName: sp-webpart-base.IPropertyPaneCustomFieldProps.onRender
    langs:
      - typeScript
    type: property
    syntax:
      content: "onRender: (\r\n    domElement: HTMLElement,\r\n    context?: any,\r\n    changeCallback?: (targetProperty?: string, newValue?: any) => void) => void;"
      return:
        type:
          - "(\r\n    domElement: HTMLElement,\r\n    context?: any,\r\n    changeCallback?: (targetProperty?: string, newValue?: any) => void) => void"
