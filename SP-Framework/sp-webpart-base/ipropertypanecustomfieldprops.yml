### YamlMime:UniversalReference
items:
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps
    summary: |
      PropertyPane CustomPropertyField props.
    name: IPropertyPaneCustomFieldProps
    fullName: IPropertyPaneCustomFieldProps
    langs:
      - typeScript
    type: interface
    children:
      - sp-webpart-base.IPropertyPaneCustomFieldProps.context
      - sp-webpart-base.IPropertyPaneCustomFieldProps.key
      - sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose
      - sp-webpart-base.IPropertyPaneCustomFieldProps.onRender
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.context
    summary: >
      Instance specific context. This context is passed back to the web part in the onRender and onDispose APIs. The web
      part can use this context to manage state information.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.key
    summary: >
      An UNIQUE key indicates the identity of this contorl. The PropertyPane uses ReactJS to render its components.
      ReactJS uses keys to identify a component and if it should be re-rendered or not. This is a performance feature in
      ReactJS. Please read the following link to understand how to pick the value of the key.see
      https://facebook.github.io/react/docs/lists-and-keys.html\#keys
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.onDispose
    summary: |
      This API is called when the component is unmounted from the host element.
    name: onDispose
    fullName: onDispose
    langs:
      - typeScript
    type: property
  - uid: sp-webpart-base.IPropertyPaneCustomFieldProps.onRender
    summary: |
      This API will be called once the custom field is mounted on the host element.
    name: onRender
    fullName: onRender
    langs:
      - typeScript
    type: property
