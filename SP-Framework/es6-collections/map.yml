### YamlMime:UniversalReference
items:
  - uid: es6-collections.Map
    name: Map
    fullName: Map
    langs:
      - typeScript
    type: interface
    package: es6-collections
    children:
      - es6-collections.Map.clear
      - es6-collections.Map.delete
      - es6-collections.Map.entries
      - es6-collections.Map.forEach
      - es6-collections.Map.get
      - es6-collections.Map.has
      - es6-collections.Map.keys
      - es6-collections.Map.set
      - es6-collections.Map.size
      - es6-collections.Map.values
  - uid: es6-collections.Map.clear
    name: clear()
    fullName: clear
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: es6-collections.Map.delete
    name: delete()
    fullName: delete
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(key: K): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: es6-collections.Map.entries
    name: entries()
    fullName: entries
    langs:
      - typeScript
    type: method
    syntax:
      content: 'entries(): Iterator<[K, V]>;'
      return:
        type:
          - 'Iterator<[K, V]>'
        description: ''
  - uid: es6-collections.Map.forEach
    name: forEach()
    fullName: forEach
    langs:
      - typeScript
    type: method
    syntax:
      content: 'forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;'
      return:
        type:
          - void
        description: ''
  - uid: es6-collections.Map.get
    name: get()
    fullName: get
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(key: K): V;'
      return:
        type:
          - V
        description: ''
  - uid: es6-collections.Map.has
    name: has()
    fullName: has
    langs:
      - typeScript
    type: method
    syntax:
      content: 'has(key: K): boolean;'
      return:
        type:
          - boolean
        description: ''
  - uid: es6-collections.Map.keys
    name: keys()
    fullName: keys
    langs:
      - typeScript
    type: method
    syntax:
      content: 'keys(): Iterator<K>;'
      return:
        type:
          - Iterator<K>
        description: ''
  - uid: es6-collections.Map.set
    name: set()
    fullName: set
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(key: K, value?: V): Map<K, V>;'
      return:
        type:
          - 'Map<K, V>'
        description: ''
  - uid: es6-collections.Map.size
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
  - uid: es6-collections.Map.values
    name: values()
    fullName: values
    langs:
      - typeScript
    type: method
    syntax:
      content: 'values(): Iterator<V>;'
      return:
        type:
          - Iterator<V>
        description: ''
