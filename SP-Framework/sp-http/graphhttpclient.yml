### YamlMime:TSType
name: GraphHttpClient
uid: sp-http.GraphHttpClient
package: sp-http
fullName: GraphHttpClient
summary: >-
  GraphHttpClient is used to perform REST calls against Microsoft Graph. It adds
  default headers and collects telemetry that helps the service to monitor the
  performance of an application. <xref uid="https://developer"
  />.microsoft.com/en-us/graph/
remarks: >-
  This class is marked as `@sealed`. Subclasses should not extend it.


  For communicating with SharePoint, use the
  [SPHttpClient](xref:sp-http.SPHttpClient) class instead. For communicating
  with other internet services, use the [HttpClient](xref:sp-http.HttpClient)
  class instead.
isPreview: true
isDeprecated: true
customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
type: class
constructors:
  - name: constructor(serviceScope)
    uid: sp-http.GraphHttpClient.constructor
    package: sp-http
    fullName: constructor
    summary: >-
      Constructs a new instance of the [GraphHttpClient](<xref
      uid="xref:sp-http" />.GraphHttpClient) class
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: 'constructor(serviceScope: ServiceScope);'
      parameters:
        - id: serviceScope
          description: ''
          type: ServiceScope
properties:
  - name: configurations
    uid: sp-http.GraphHttpClient.configurations
    package: sp-http
    fullName: configurations
    summary: >-
      The standard predefined GraphHttpClientConfiguration objects for use with
      the GraphHttpClient class.
    remarks: ''
    isPreview: true
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: 'static readonly configurations: IGraphHttpClientConfigurations;'
      return:
        type: IGraphHttpClientConfigurations
  - name: serviceKey
    uid: sp-http.GraphHttpClient.serviceKey
    package: sp-http
    fullName: serviceKey
    summary: The service key for GraphHttpClient.
    remarks: ''
    isPreview: true
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: 'static readonly serviceKey: ServiceKey<GraphHttpClient>;'
      return:
        type: ServiceKey&lt;GraphHttpClient&gt;
methods:
  - name: 'fetch(url, configuration, options)'
    uid: sp-http.GraphHttpClient.fetch
    package: sp-http
    fullName: fetch
    summary: Perform a REST service call.
    remarks: >-
      Generally, the parameters and semantics for HttpClient.fetch() are
      essentially the same as the WHATWG API standard that is documented here:
      https://fetch.spec.whatwg.org/


      The GraphHttpClient subclass adds some additional behaviors that are
      convenient when working with SharePoint ODATA API's (which can be avoided
      by using HttpClient instead): - Default "Accept" and "Content-Type"
      headers are added if not explicitly specified.
    isPreview: true
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: >-
        fetch(url: string, configuration: GraphHttpClientConfiguration, options:
        IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;
      parameters:
        - id: url
          description: >-
            The url string should be relative to the graph server. Good:
            'v1.0/me/events' Bad: '/v1.0/me/events',
            'https://graph.microsoft.com/v1.0/me/events'
          type: string
        - id: configuration
          description: >-
            determines the default behavior of GraphHttpClient; normally this
            should be the latest version number from
            GraphHttpClientConfigurations
          type: GraphHttpClientConfiguration
        - id: options
          description: additional options that affect the request
          type: IGraphHttpClientOptions
      return:
        type: Promise&lt;GraphHttpClientResponse&gt;
        description: a promise that will return the result
  - name: 'get(url, configuration, options)'
    uid: sp-http.GraphHttpClient.get
    package: sp-http
    fullName: get
    summary: 'Calls fetch(), but sets the method to "GET".'
    remarks: ''
    isPreview: true
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: >-
        get(url: string, configuration: GraphHttpClientConfiguration, options?:
        IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;
      parameters:
        - id: url
          description: the URL to fetch
          type: string
        - id: configuration
          description: >-
            determines the default behavior of GraphHttpClient; normally this
            should be the latest version number from
            GraphHttpClientConfigurations
          type: GraphHttpClientConfiguration
        - id: options
          description: additional options that affect the request
          type: IGraphHttpClientOptions
      return:
        type: Promise&lt;GraphHttpClientResponse&gt;
        description: a promise that will return the result
  - name: 'post(url, configuration, options)'
    uid: sp-http.GraphHttpClient.post
    package: sp-http
    fullName: post
    summary: 'Calls fetch(), but sets the method to "POST".'
    remarks: ''
    isPreview: true
    isDeprecated: true
    customDeprecatedMessage: The GraphHttpClient class has been superseded by the MSGraphClient class.
    syntax:
      content: >-
        post(url: string, configuration: GraphHttpClientConfiguration, options:
        IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;
      parameters:
        - id: url
          description: the URL to fetch
          type: string
        - id: configuration
          description: >-
            determines the default behavior of GraphHttpClient; normally this
            should be the latest version number from
            GraphHttpClientConfigurations
          type: GraphHttpClientConfiguration
        - id: options
          description: additional options that affect the request
          type: IGraphHttpClientOptions
      return:
        type: Promise&lt;GraphHttpClientResponse&gt;
        description: a promise that will return the result
