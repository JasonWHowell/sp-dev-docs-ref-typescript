### YamlMime:UniversalReference
items:
  - uid: sp-http.SPHttpClientConfiguration
    summary: 'Configuration for [SPHttpClient](xref:sp-http.SPHttpClient)<!-- -->.'
    remarks: >-
      The SPHttpClientConfiguration object provides a set of switches for enabling/disabling various features of the
      SPHttpClient class. Normally these switches are set (e.g. when calling SPHttpClient.fetch()) by providing one of
      the predefined defaults from SPHttpClientConfigurations, however switches can also be changed via the
      SPHttpClientConfiguration.overrideWith() method.
    name: SPHttpClientConfiguration
    fullName: SPHttpClientConfiguration
    langs:
      - typeScript
    type: class
    extends:
      - sp-http.SPHttpClientCommonConfiguration
    implements:
      - sp-http.ISPHttpClientConfiguration
    package: sp-http
    children:
      - sp-http.SPHttpClientConfiguration.(constructor)
      - sp-http.SPHttpClientConfiguration.defaultODataVersion
      - sp-http.SPHttpClientConfiguration.defaultSameOriginCredentials
      - sp-http.SPHttpClientConfiguration.flags
      - sp-http.SPHttpClientConfiguration.initializeFlags
      - sp-http.SPHttpClientConfiguration.overrideWith
      - sp-http.SPHttpClientConfiguration.requestDigest
  - uid: sp-http.SPHttpClientConfiguration.(constructor)
    summary: >-
      Constructs a new instance of SPHttpClientConfiguration with the specified flags. The default values will be used
      for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags.
    name: '(constructor)(flags, overrideFlags)'
    fullName: '(constructor)(flags, overrideFlags)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(flags: ISPHttpClientConfiguration, overrideFlags?: ISPHttpClientConfiguration);'
      parameters:
        - id: flags
          description: ''
          type:
            - sp-http.ISPHttpClientConfiguration
        - id: overrideFlags
          description: ''
          type:
            - sp-http.ISPHttpClientConfiguration
  - uid: sp-http.SPHttpClientConfiguration.defaultODataVersion
    summary: Automatically configure the "OData-Version" header.
    remarks: >-
      When this switch is specified (i.e. not undefined): If the "OData-Version" header was not explicitly added for the
      request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion.


      NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases.
      The recommended version is 4.0.
    name: defaultODataVersion
    fullName: defaultODataVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly defaultODataVersion: ODataVersion;'
      return:
        type:
          - sp-http.ODataVersion
  - uid: sp-http.SPHttpClientConfiguration.defaultSameOriginCredentials
    summary: Automatically configure the RequestInit.credentials.
    remarks: >-
      When this switch is true:


      If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be
      "same-origin". Without this switch, different web browsers may apply different defaults.


      For more information, see the spec: https://fetch.spec.whatwg.org/\#cors-protocol-and-credentials
    name: defaultSameOriginCredentials
    fullName: defaultSameOriginCredentials
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly defaultSameOriginCredentials: boolean;'
      return:
        type:
          - boolean
  - uid: sp-http.SPHttpClientConfiguration.flags
    name: flags
    fullName: flags
    langs:
      - typeScript
    type: property
    syntax:
      content: 'protected flags: ISPHttpClientConfiguration;'
      return:
        type:
          - sp-http.ISPHttpClientConfiguration
  - uid: sp-http.SPHttpClientConfiguration.initializeFlags
    name: initializeFlags()
    fullName: initializeFlags()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        /** @override */
        protected initializeFlags(): void;
      return:
        type:
          - void
        description: ''
  - uid: sp-http.SPHttpClientConfiguration.overrideWith
    name: overrideWith(sourceFlags)
    fullName: overrideWith(sourceFlags)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        /** @override */
        overrideWith(sourceFlags: ISPHttpClientConfiguration): SPHttpClientConfiguration;
      return:
        type:
          - sp-http.SPHttpClientConfiguration
        description: ''
      parameters:
        - id: sourceFlags
          description: ''
          type:
            - sp-http.ISPHttpClientConfiguration
  - uid: sp-http.SPHttpClientConfiguration.requestDigest
    summary: Automatically provide an "X-RequestDigest" header for authentication.
    remarks: >-
      When this switch is true:


      If the "X-RequestDigest" header was not explicitly added for the request, then SPHttpClient will add it if the
      request is a write operation (i.e. an HTTP method other than "GET", "HEAD", or "OPTIONS"). The request digest is
      managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed.
    name: requestDigest
    fullName: requestDigest
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly requestDigest: boolean;'
      return:
        type:
          - boolean
