### YamlMime:UniversalReference
items:
  - uid: sp-http.SPHttpClientCommonConfiguration
    summary: |
      Common base class for SPHttpClientConfiguration and SPHttpClientBatchConfiguration.
    name: SPHttpClientCommonConfiguration
    fullName: sp-http.SPHttpClientCommonConfiguration
    langs:
      - typeScript
    type: class
    remarks: |+
      **Extends:** `HttpClientConfiguration`

      **Implements:** `ISPHttpClientCommonConfiguration`

    package: sp-http
    children:
      - sp-http.SPHttpClientCommonConfiguration.constructor
      - sp-http.SPHttpClientCommonConfiguration.flags
      - sp-http.SPHttpClientCommonConfiguration.initializeFlags
      - sp-http.SPHttpClientCommonConfiguration.jsonRequest
      - sp-http.SPHttpClientCommonConfiguration.jsonResponse
      - sp-http.SPHttpClientCommonConfiguration.overrideWith
  - uid: sp-http.SPHttpClientCommonConfiguration.constructor
    summary: >
      Constructs a new instance of SPHttpClientCommonConfiguration with the specified flags. The default values will be
      used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags.
    name: constructor()
    fullName: sp-http.SPHttpClientCommonConfiguration.constructor
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(flags: ISPHttpClientCommonConfiguration, overrideFlags?: ISPHttpClientCommonConfiguration);'
  - uid: sp-http.SPHttpClientCommonConfiguration.flags
    name: flags
    fullName: sp-http.SPHttpClientCommonConfiguration.flags
    langs:
      - typeScript
    type: property
    syntax:
      content: 'flags: ISPHttpClientCommonConfiguration;'
      return:
        type:
          - ISPHttpClientCommonConfiguration
  - uid: sp-http.SPHttpClientCommonConfiguration.initializeFlags
    name: initializeFlags()
    fullName: sp-http.SPHttpClientCommonConfiguration.initializeFlags
    langs:
      - typeScript
    type: method
    syntax:
      content: '@override protected initializeFlags(): void;'
      return:
        type:
          - void
        description: ''
  - uid: sp-http.SPHttpClientCommonConfiguration.jsonRequest
    summary: >
      When this switch is true: If the 'Content-Type' header was not explicitly added for the request, then SPHttpClient
      will add it if the request is a write operation (i.e. an HTTP method other than 'GET', 'HEAD', or 'OPTIONS'). For
      OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'. For OData 4.0, the value is
      'application/json;charset=utf-8'.
    name: jsonRequest
    fullName: sp-http.SPHttpClientCommonConfiguration.jsonRequest
    langs:
      - typeScript
    type: property
    syntax:
      content: 'jsonRequest: boolean;'
      return:
        type:
          - boolean
  - uid: sp-http.SPHttpClientCommonConfiguration.jsonResponse
    summary: >
      When this switch is true: If the 'Accept' header was not explicitly added for the request, then SPHttpClient will
      add it. For OData 3.0, the value is 'application/json'. For OData 4.0, the value is
      'application/json;odata.metadata=minimal'.
    name: jsonResponse
    fullName: sp-http.SPHttpClientCommonConfiguration.jsonResponse
    langs:
      - typeScript
    type: property
    syntax:
      content: 'jsonResponse: boolean;'
      return:
        type:
          - boolean
  - uid: sp-http.SPHttpClientCommonConfiguration.overrideWith
    name: overrideWith()
    fullName: sp-http.SPHttpClientCommonConfiguration.overrideWith
    langs:
      - typeScript
    type: method
    syntax:
      content: '@override public overrideWith(sourceFlags: ISPHttpClientCommonConfiguration): SPHttpClientCommonConfiguration;'
      return:
        type:
          - SPHttpClientCommonConfiguration
        description: ''
