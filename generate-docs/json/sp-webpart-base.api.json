{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.5.0",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@microsoft/sp-webpart-base!",
  "docComment": "/**\n * SharePoint Framework support for building web parts.\n *\n * @remarks\n *\n * This package defines the APIs used by developers to create a custom web part. A web part is a reusable visual object that a page author can add to their content, and customize using a property pane. Examples of web parts include an embedded video player, a map, a group calendar, a chart, etc.\n *\n * @packagedocumentation\n */\n",
  "name": "@microsoft/sp-webpart-base",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@microsoft/sp-webpart-base!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart:class",
          "docComment": "/**\n * This abstract class implements the the base functionality for a client-side web part. Every client-side web part needs to inherit from this class.\n *\n * @remarks\n *\n * Along with the base functionality, this class provides some APIs that can be used by the web part. These APIs fall in two catagories.\n *\n * The first category of APIs provide data and functionality. Example, the web part context (i.e. this.context). This API should be used to access contextual data relevant to this web part instance.\n *\n * The second category of APIs provide a base implementation for the web part lifecycle and can be overridden for an updated implementation. The render() API is the only API that is mandatory to be implemented/overridden by a web part. All other life cycle APIs have a base implementation and can be overridden based on the needs of the web part. Please refer to the documentation of the individual APIs to make the right decision.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default abstract class BaseClientSideWebPart<TProperties> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseWebPart",
              "canonicalReference": "@microsoft/sp-webpart-base!default:class"
            },
            {
              "kind": "Content",
              "text": "<TProperties> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProperties",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "BaseClientSideWebPart",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart:constructor(1)",
              "docComment": "/**\n * Constructor for the BaseClientSideWebPart class.\n *\n * @remarks\n *\n * It is highly recommended that the web part use the `onInit()` API to perform any web part specific initialization. Most of the web part features like this.context and `this.properties` are not available to be used before the the `onInit()` part of the web part loading lifecycle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#canOpenPopupOnRender:member",
              "docComment": "/**\n * This property indicates whether a web part can open a popup on initial render.\n *\n * @remarks\n *\n * In some environments the host re-renders the web parts frequently, and therefore opening popups during render will cause popups to open repeatedly, which is a poor user experience. As an example, the classic SharePoint pages perform postbacks causing the page to re-render on all button clicks.\n *\n * If a web part needs to open a popup on render, it should use this API before opening the popup. If this API returns false, the web part should not open popup on initial render. Some web parts that open popups during render are the document embed web part that pops up the file picker on initial render, embedded video web part that pops up the PropertyPane on initial render.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly canOpenPopupOnRender: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canOpenPopupOnRender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#clearError:member(1)",
              "docComment": "/**\n * This API should be used to clear the error message from the web part display area.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected clearError(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clearError"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#context:member",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-component-base#BaseComponent.context}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly context: "
                },
                {
                  "kind": "Reference",
                  "text": "WebPartContext",
                  "canonicalReference": "@microsoft/sp-webpart-base!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#domElement:member",
              "docComment": "/**\n * This property is a pointer to the root DOM element of the web part. This is a DIV element and contains the whole DOM subtree of the web part.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "domElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#isRenderAsync:member",
              "docComment": "/**\n * Indicates whether the web part is rendering in Async mode.\n *\n * @remarks\n *\n * If the web part overrides this field to return true, then it needs to call renderCompleted API after the web part rendering is complete.\n *\n * The default value is false.\n *\n * @virtual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly isRenderAsync: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isRenderAsync",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#onDisplayModeChanged:member(1)",
              "docComment": "/**\n * This event method is called when the display mode of a web part is changed.\n *\n * @remarks\n *\n * The default implementation of this API calls the web part render method to re-render the web part with the new display mode. If a web part developer does not want a full re-render to happen on display mode change, they can override this API and perform specific updates to the web part DOM to switch its display mode.\n *\n * @param oldDisplayMode - The old display mode.\n *\n * @virtual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDisplayModeChanged(oldDisplayMode: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayMode",
                  "canonicalReference": "@microsoft/sp-core-library!DisplayMode:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "oldDisplayMode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "onDisplayModeChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#onDispose:member(1)",
              "docComment": "/**\n * This API should be used to refresh the contents of the PropertyPane.\n *\n * @remarks\n *\n * This API is called at the end of the web part lifecycle on a page. It should be used to dispose any local resources (i.e. DOM elements) that the web part is holding onto. This API is expected to be called in scenarios like page navigation i.e. the host is transitioning from one page to another and disposes the page that is being transitioned out.\n *\n * @virtual\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#render:member(1)",
              "docComment": "/**\n * This API is called to render the web part. There is no base implementation of this API and the web part is required to override this API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected abstract render(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "render"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#renderCompleted:member(1)",
              "docComment": "/**\n * This API should be called by web parts that perform Async rendering. Those web part are required to override the isRenderAsync API and return true. One such example is web parts that render content in an IFrame. The web part initiates the IFrame rendering in the `render()` API but the actual rendering is complete only after the iframe loading completes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected renderCompleted(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "renderCompleted"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#renderedFromPersistedData:member",
              "docComment": "/**\n * This property indicates whether the web part was rendered from the persisted data (serialized state from the last time that the web part was saved) or not.\n *\n * @remarks\n *\n * Example: When web part is added for the first time using toolbox then the value is false.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly renderedFromPersistedData: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "renderedFromPersistedData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#renderedOnce:member",
              "docComment": "/**\n * This property indicates whether the web part has been rendered once or not. After the first time rendering, the value of this property is always true until a full re-render of the web part happens.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly renderedOnce: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "renderedOnce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseClientSideWebPart#renderError:member(1)",
              "docComment": "/**\n * This API should be used to render an error message in the web part display area. Also logs the error message using the trace logger.\n *\n * @param error - An error object containing the error message to render.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected renderError(error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "renderError"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart:class",
          "docComment": "/**\n * This abstract class implements the UI-agnostic base functionality for a client-side web part. The purpose is to allow a common core between 2D and MR WebParts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default abstract class BaseWebPart<TProperties extends "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "BaseComponent",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneConsumer",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneConsumer:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProperties",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "BaseWebPart",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart:constructor(1)",
              "docComment": "/**\n * Constructor for the `BaseWebPart` class.\n *\n * @remarks\n *\n * It is highly recommended that the web part use the OnInit API to perform any web part specific initialization. Most of the web part features like this.context and this.properties are not available to be used before the the onInit part of the web part loading lifecycle.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#accessibleTitle:member",
              "docComment": "/**\n * This property points to the accessible title of web part made available to screen readers. The base implementation returns that default title in the manifest. Web parts that want to provide more descriptive title containing contextual information need to override this API.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly accessibleTitle: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibleTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#context:member",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-component-base#BaseComponent.context}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly context: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseWebPartContext",
                  "canonicalReference": "@microsoft/sp-webpart-base!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#dataVersion:member",
              "docComment": "/**\n * The value of this property is stored in the serialized data of the web part to allow developers to manage versioning of their web part. The default version is 1.0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly dataVersion: "
                },
                {
                  "kind": "Reference",
                  "text": "Version",
                  "canonicalReference": "@microsoft/sp-core-library!Version:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#description:member",
              "docComment": "/**\n * Description of the WebPart\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly description: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#disableReactivePropertyChanges:member",
              "docComment": "/**\n * This property is used to change the web part's property pane interaction from Reactive to NonReactive.\n *\n * @remarks\n *\n * The default behavior is Reactive.\n *\n * Reactive implies that changes made in the PropertyPane are transmitted to the web part instantly and the user can see instant updates. This helps the page creator get instant feedback and decide if they should keep the new configuration changes or not.\n *\n * NonReactive implies that the configuration changes are transmitted to the web part only after \"Apply\" PropertyPane button is clicked.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly disableReactivePropertyChanges: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disableReactivePropertyChanges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#displayMode:member",
              "docComment": "/**\n * This property is the current display mode of the web part.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly displayMode: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayMode",
                  "canonicalReference": "@microsoft/sp-core-library!DisplayMode:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#getPropertyPaneConfiguration:member(1)",
              "docComment": "/**\n * This API is used to ger the configuration to build the property pane for the web part. If the web part wants to use the PropertyPane for configuration, this API needs to be overridden and the web part needs to return the configuration for the PropertyPane.\n *\n * This API is not invoked until the 'loadPropertyPaneResources' promise is resolved.\n *\n * See IPropertyPane and other PropertyPane integration wiki documentation for more details.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected getPropertyPaneConfiguration(): "
                },
                {
                  "kind": "Reference",
                  "text": "IPropertyPaneConfiguration",
                  "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneConfiguration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPropertyPaneConfiguration"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onAfterDeserialize:member(1)",
              "docComment": "/**\n * This API is called after the web part is deserialized to an object, right before the property bag is populated.\n *\n * @remarks\n *\n * The default implementation is a no-op. A web part developer can override this API if the deserialized object does not fully reflect the initial state of the property bag. This gives the web part developer a chance to populate the property bag right after the data is deserialized to an object.\n *\n * An important scenario to use deserialize is upgrading. An upgraded web part may load the data that was serialized by an older version of the web part that supported a different schema of the property bag, resulting the deserialized object to be incosistent with the current schema of the property bag. The developer can use `onAfterDeserialize` to check the dataVersion and fix the property bag.\n *\n * @param deserializedObject - The object deserialized from the stored data. Note that the schema of this object is not necessarily consistent with the current property bag, because the serialization could have been done by an older version of the web part\n *\n * @param dataVersion - The data version of the stored data being deserialized. You can use this value to determine if the data was serialized by an older web part. Web parts can define their data version by overriding the dataVersion property.\n *\n * @returns The property bag of the web part\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onAfterDeserialize(deserializedObject: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", dataVersion: "
                },
                {
                  "kind": "Reference",
                  "text": "Version",
                  "canonicalReference": "@microsoft/sp-core-library!Version:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "TProperties"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "deserializedObject",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "dataVersion",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "onAfterDeserialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onAfterPropertyPaneChangesApplied:member(1)",
              "docComment": "/**\n * This API is invoked after the changes made on the PropertyPane are applied when the PropertyPane is used in Non-Reactive mode. This API is not invoked when the PropertyPane is used in Reactive mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onAfterPropertyPaneChangesApplied(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onAfterPropertyPaneChangesApplied"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onBeforeSerialize:member(1)",
              "docComment": "/**\n * This event method is called before the web part is serialized.\n *\n * @remarks\n *\n * The default implementation is a no-op. The serialization process serializes the web part property bag i.e. this.properties. This API gives the web part a chance to update it's property bag before the serialization happens. Some web part's may keep their state other objects or even in the DOM. If a web part needs to persist some of that state, it needs to override this API and update the web part property bag to the latest state. If a web part updates the property bag with invalid property values, those will get persisted. So that should be avoided. The web part property bag should always contain valid property values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onBeforeSerialize(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onBeforeSerialize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onDisplayModeChanged:member(1)",
              "docComment": "/**\n * This event method is called when the display mode of a web part is changed.\n *\n * @remarks\n *\n * The default implementation of this API calls the web part render method to re-render the web part with the new display mode. If a web part developer does not want a full re-render to happen on display mode change, they can override this API and perform specific updates to the web part DOM to switch its display mode.\n *\n * @param oldDisplayMode - The old display mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDisplayModeChanged(oldDisplayMode: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayMode",
                  "canonicalReference": "@microsoft/sp-core-library!DisplayMode:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "oldDisplayMode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "onDisplayModeChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onDispose:member(1)",
              "docComment": "/**\n * This API should be used to refresh the contents of the PropertyPane.\n *\n * @remarks\n *\n * This API is called at the end of the web part lifecycle on a page. It should be used to dispose any local resources (i.e. DOM elements) that the web part is holding onto. This API is expected to be called in scenarios like page navigation i.e. the host is transitioning from one page to another and disposes the page that is being transitioned out.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onInit:member(1)",
              "docComment": "/**\n * This event method is called when the web part is initialized.\n *\n * @remarks\n *\n * This API should be overridden to perform long running operations e.g. data fetching from a remote service before the initial rendering of the web part. The loading indicator is displayed during the lifetime of this method. This API is called only once during the lifecycle of a web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onInit(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onInit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onPropertyPaneConfigurationComplete:member(1)",
              "docComment": "/**\n * This API is invoked when the configuration is completed on the PropertyPane.\n *\n * @remarks\n *\n * This event method is invoked in the following cases:\n *\n * - When the CONFIGURATION_COMPLETE_TIMEOUT((currently the value is 5 secs) elapses after the last change.\n *\n * - When user clicks the \"X\" (close) button before the CONFIGURATION_COMPLETE_TIMEOUT elapses.\n *\n * - When user clicks the 'Apply' button before the CONFIGURATION_COMPLETE_TIMEOUT elapses.\n *\n * - When the user switches web parts then the current web part gets this event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onPropertyPaneConfigurationComplete(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onPropertyPaneConfigurationComplete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onPropertyPaneConfigurationStart:member(1)",
              "docComment": "/**\n * This event method is invoked when the configuration starts on the PropertyPane.\n *\n * @remarks\n *\n * This event method is invoked in the following cases:\n *\n * - When the PropertyPane is opened.\n *\n * - When the user switches web parts then the new web part gets this event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onPropertyPaneConfigurationStart(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onPropertyPaneConfigurationStart"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onPropertyPaneFieldChanged:member(1)",
              "docComment": "/**\n * This API is invoked after updating the new value of the property in the property bag when the PropertyPane is being used in Reactive mode.\n *\n * @param propertyPath - JSON path of the property in the property bag. In the case of custom field, if no target property is provided then a custom value is assigned, which will be in the form of `__CustomField_<key provided when the custom field is created>`.\n *\n * @param oldValue - Old value of the property. This value could be undefined/empty in the case of custom field.\n *\n * @param newValue - New value of the property. This value could be undefined/empty in the case of custom field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onPropertyPaneFieldChanged(propertyPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", oldValue: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ", newValue: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propertyPath",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "oldValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "newValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "onPropertyPaneFieldChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#onPropertyPaneRendered:member(1)",
              "docComment": "/**\n * This API is invoked when the PropertyPane is rendered.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onPropertyPaneRendered(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onPropertyPaneRendered"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#previewImageUrl:member",
              "docComment": "/**\n * This property points to the preview image for the web part. The base implementation returns undefined. Web parts that want to provide a valid preview image url need to override this API. The preview image url can be used to create a preview of the web part or of the page on which the web part is present.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly previewImageUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previewImageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#properties:member",
              "docComment": "/**\n * This property is the pointer to the custom property bag of the web part.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly properties: "
                },
                {
                  "kind": "Content",
                  "text": "TProperties"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#propertiesMetadata:member",
              "docComment": "/**\n * This property defines metadata for the web part property bag. The metadata can help SharePoint understand the content of the properties better and perform relevant services on the data.\n *\n * @remarks\n *\n * See {@link IWebPartPropertiesMetadata} for more information about how to define metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly propertiesMetadata: "
                },
                {
                  "kind": "Reference",
                  "text": "IWebPartPropertiesMetadata",
                  "canonicalReference": "@microsoft/sp-webpart-base!~IWebPartPropertiesMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "propertiesMetadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPart#title:member",
              "docComment": "/**\n * Title of the WebPart\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPartContext:class",
          "docComment": "/**\n * Web part context object. This object contains the contextual services available to a web part. e.g. a contextual instance to the http client.\n *\n * This base is to be extended by UI-specific WebPart's base.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BaseWebPartContext` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class BaseWebPartContext extends "
            },
            {
              "kind": "Reference",
              "text": "BaseComponentContext",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseWebPartContext",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPartContext#formFactor:member",
              "docComment": "/**\n * Form factor of the web part.\n *\n * @remarks\n *\n * Web parts may behave differently based on its form factor. E.g. a web part rendering as full size may want to set up different margins that when rendering in a canvas.\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly formFactor: "
                },
                {
                  "kind": "Reference",
                  "text": "WebPartFormFactor",
                  "canonicalReference": "@microsoft/sp-webpart-base!WebPartFormFactor:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "formFactor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPartContext#manifest:member",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-component-base#BaseComponentContext.manifest}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideWebPartManifestInstance",
                  "canonicalReference": "@microsoft/sp-module-interfaces!IClientSideWebPartManifestInstance:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPartContext#propertyPane:member",
              "docComment": "/**\n * Accessor for common web part property pane operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly propertyPane: "
                },
                {
                  "kind": "Reference",
                  "text": "IPropertyPaneAccessor",
                  "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "propertyPane",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!BaseWebPartContext#webPartTag:member",
              "docComment": "/**\n * Web part tag to be used for logging and telemetry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly webPartTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "webPartTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/sp-webpart-base!DynamicDataSharedDepth:enum",
          "docComment": "/**\n * Enum for the possible values of shared depth of the dynamic data reference.\n *\n * @deprecated\n *\n * This is obsolete now. This enum has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum DynamicDataSharedDepth "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicDataSharedDepth",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!DynamicDataSharedDepth.None:member",
              "docComment": "/**\n * Indicates that nothing is shared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "None = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "None",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!DynamicDataSharedDepth.Property:member",
              "docComment": "/**\n * Indicates that both the dynamic data source and the property are shared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Property = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Property",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!DynamicDataSharedDepth.Source:member",
              "docComment": "/**\n * Indicates that the dynamic data source is shared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Source = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Source",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IClientSideWebPartStatusRenderer:interface",
          "docComment": "/**\n * Interface to be implemented by a component that should display the loading indicator and error messages for a web part.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default interface IClientSideWebPartStatusRenderer "
            }
          ],
          "releaseTag": "Public",
          "name": "IClientSideWebPartStatusRenderer",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IClientSideWebPartStatusRenderer#clearError:member(1)",
              "docComment": "/**\n * Clear the webpart error message.\n *\n * @param domElement - the web part container div.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearError(domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "domElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clearError"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IClientSideWebPartStatusRenderer#clearLoadingIndicator:member(1)",
              "docComment": "/**\n * Clear the loading indicator.\n *\n * @param domElement - the web part container div.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clearLoadingIndicator(domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "domElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "clearLoadingIndicator"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IClientSideWebPartStatusRenderer#displayLoadingIndicator:member(1)",
              "docComment": "/**\n * Display a loading spinner.\n *\n * @param domElement - the web part container div.\n *\n * @param loadingMessage - the message to be displayed when the loading spinner id displayed.\n *\n * @param timeout - timeout to render the loading indicator. Default is 1500ms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayLoadingIndicator(domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ", loadingMessage: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", timeout?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "domElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "loadingMessage",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "timeout",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "displayLoadingIndicator"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IClientSideWebPartStatusRenderer#renderError:member(1)",
              "docComment": "/**\n * Render the provided error message in the webpart container div.\n *\n * @param domElement - the web part container div.\n *\n * @param error - the error message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderError(domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "domElement",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  }
                }
              ],
              "name": "renderError"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IDynamicDataSharedPropertyConfiguration:interface",
          "docComment": "/**\n * Configuration related to a shared property.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDynamicDataSharedPropertyConfiguration extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IDynamicDataSharedPropertyConfiguration",
              "canonicalReference": "@microsoft/sp-property-pane!IDynamicDataSharedPropertyConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDynamicDataSharedPropertyConfiguration",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IDynamicDataSharedPropertyFilters:interface",
          "docComment": "/**\n * Property pane dynamic data property filters.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDynamicDataSharedPropertyFilters extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IDynamicDataSharedPropertyFilters",
              "canonicalReference": "@microsoft/sp-property-pane!IDynamicDataSharedPropertyFilters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDynamicDataSharedPropertyFilters",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IDynamicDataSharedSourceConfiguration:interface",
          "docComment": "/**\n * Configuration related to a shared source.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDynamicDataSharedSourceConfiguration extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IDynamicDataSharedSourceConfiguration",
              "canonicalReference": "@microsoft/sp-property-pane!IDynamicDataSharedSourceConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDynamicDataSharedSourceConfiguration",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IDynamicDataSharedSourceFilters:interface",
          "docComment": "/**\n * Property pane dynamic data source filters.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IDynamicDataSharedSourceFilters extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IDynamicDataSharedSourceFilters",
              "canonicalReference": "@microsoft/sp-property-pane!IDynamicDataSharedSourceFilters:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IDynamicDataSharedSourceFilters",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IMicrosoftTeams:interface",
          "docComment": "/**\n * Provides access to the Teams SDK and Teams context. Only provided when the web part is loaded in Teams.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IMicrosoftTeams "
            }
          ],
          "releaseTag": "Public",
          "name": "IMicrosoftTeams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IMicrosoftTeams#context:member",
              "docComment": "/**\n * {@inheritDoc @microsoft/teams-js#Context}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Content",
                  "text": "microsoftTeams."
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "@microsoft/teams-js!Context:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IMicrosoftTeams#teamsJs:member",
              "docComment": "/**\n * Microsoft Teams SDK.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teamsJs: "
                },
                {
                  "kind": "Content",
                  "text": "typeof microsoftTeams"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "teamsJs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IOffice:interface",
          "docComment": "/**\n * Provides access to the Office context. Only provided when the web part is loaded in Office.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IOffice "
            }
          ],
          "releaseTag": "Beta",
          "name": "IOffice",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IOffice#context:member",
              "docComment": "/**\n * Microsoft Office SDK.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "Office.Context",
                  "canonicalReference": "!Office.Context:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor:interface",
          "docComment": "/**\n * Web part context property pane accessor interface. Provides some most commonly used operations to access the property pane.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneAccessor "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneAccessor",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#close:member(1)",
              "docComment": "/**\n * This API should be used to close the PropertyPane to help configure the web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "close(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "close"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#isPropertyPaneOpen:member(1)",
              "docComment": "/**\n * Returns true if the PropertyPane is open.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPropertyPaneOpen(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isPropertyPaneOpen"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#isRenderedByWebPart:member(1)",
              "docComment": "/**\n * Indicates whether the PropertyPane was initially opened by the web part.\n *\n * @remarks\n *\n * For example, if the web part calls this.context.propertyPane.open() then the property would be true, whereas if the property pane was opened by the host, then the value will be false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isRenderedByWebPart(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "isRenderedByWebPart"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#open:member(1)",
              "docComment": "/**\n * This API should be used to open the PropertyPane to help configure the web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "open(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "open"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#openDetails:member(1)",
              "docComment": "/**\n * This API should be used to open the Details PropertyPane to help configure the items in the web part.\n *\n * @remarks\n *\n * This API is mainly used for configuring Details, which is different from configuring the web part itself.\n *\n * @param context - Add additional context for property pane\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openDetails(context?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "openDetails"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor#refresh:member(1)",
              "docComment": "/**\n * This API should be used to invoke the PropertyPane to help configure the web part.\n *\n * @remarks\n *\n * This operation only works when the PropertyPane is already open for the currently active web part. If the PropertyPane is opened for another web part, calling the refresh API will have no impact.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refresh(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "refresh"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneButtonProps:interface",
          "docComment": "/**\n * PropertyPane button props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneButtonProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneButtonProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneButtonProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCheckboxProps:interface",
          "docComment": "/**\n * PropertyPane CheckBox component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneCheckboxProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCheckboxProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneCheckboxProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneCheckboxProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneChoiceGroupOption:interface",
          "docComment": "/**\n * PropertyPane ChoiceGroup option props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneChoiceGroupOption extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneChoiceGroupOption",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneChoiceGroupOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneChoiceGroupOption",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneChoiceGroupOptionIconProps:interface",
          "docComment": "/**\n * PropertyPane ChoiceGroup icon props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneChoiceGroupOptionIconProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneChoiceGroupOptionIconProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneChoiceGroupOptionIconProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneChoiceGroupOptionIconProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneChoiceGroupProps:interface",
          "docComment": "/**\n * PropertyPane ChoiceGroup props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneChoiceGroupProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneChoiceGroupProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneChoiceGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneChoiceGroupProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneConditionalGroup:interface",
          "docComment": "/**\n * Property pane conditional group.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneConditionalGroup extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneConditionalGroup",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneConditionalGroup:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneConditionalGroup",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneConfiguration:interface",
          "docComment": "/**\n * Web part configuration settings\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneConfiguration extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneConfiguration",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneConfiguration:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneConfiguration",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCustomFieldProps:interface",
          "docComment": "/**\n * PropertyPane CustomPropertyField props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneCustomFieldProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCustomFieldProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneCustomFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneCustomFieldProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDropdownCalloutProps:interface",
          "docComment": "/**\n * PropertyPane dropdown callout properties.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDropdownCalloutProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDropdownCalloutProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDropdownCalloutProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDropdownCalloutProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDropdownOption:interface",
          "docComment": "/**\n * PropertyPane drop down options.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDropdownOption extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDropdownOption",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDropdownOption:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDropdownOption",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDropdownProps:interface",
          "docComment": "/**\n * PropertyPane drop down component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDropdownProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDropdownProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDropdownProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldFilters:interface",
          "docComment": "/**\n * Property pane dynamic field filters which is an intersection of both source and property filters.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDynamicFieldFilters extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldFilters",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDynamicFieldFilters:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDynamicFieldFilters",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldProps:interface",
          "docComment": "/**\n * PropertyPaneDynamicField props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDynamicFieldProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDynamicFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDynamicFieldProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldSetProps:interface",
          "docComment": "/**\n * PropertyPane DynamicFieldSet props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDynamicFieldSetProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldSetProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDynamicFieldSetProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneDynamicFieldSetProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicTextFieldProps:interface",
          "docComment": "/**\n * `PropertyPaneDynamicData` component props.\n *\n * @deprecated\n *\n * - This has been replaced by IPropertyPaneDynamicFieldProps\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneDynamicTextFieldProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicTextFieldProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneDynamicTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Beta",
          "name": "IPropertyPaneDynamicTextFieldProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface",
          "docComment": "/**\n * PropertyPane field.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneField<TProperties> extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<TProperties> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TProperties",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "IPropertyPaneField",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneGroup:interface",
          "docComment": "/**\n * PropertyPane group. Group is part of the PropertyPanePage.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneGroup extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneGroup",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneGroup:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneGroup",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLabelProps:interface",
          "docComment": "/**\n * PropertyPaneLabel component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneLabelProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLabelProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneLabelProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneLabelProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLinkProps:interface",
          "docComment": "/**\n * PropertyPaneLink component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneLinkProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLinkProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneLinkProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneLinkProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPanePage:interface",
          "docComment": "/**\n * PropertyPanePage interface.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPanePage extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPanePage",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPanePage:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPanePage",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPanePageHeader:interface",
          "docComment": "/**\n * PropertyPane header. This header remains same for all the pages.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPanePageHeader extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPanePageHeader",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPanePageHeader:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPanePageHeader",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneSliderProps:interface",
          "docComment": "/**\n * PropertyPaneSliderProps component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneSliderProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneSliderProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneSliderProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneSliderProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneTextFieldProps:interface",
          "docComment": "/**\n * PropertyPaneTextField component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneTextFieldProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneTextFieldProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneTextFieldProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneToggleProps:interface",
          "docComment": "/**\n * PropertyPaneToggle component props.\n *\n * @deprecated\n *\n * This is obsolete now. This interface has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPropertyPaneToggleProps extends "
            },
            {
              "kind": "Content",
              "text": "SPPropertyPane."
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneToggleProps",
              "canonicalReference": "@microsoft/sp-property-pane!IPropertyPaneToggleProps:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPropertyPaneToggleProps",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!ISDKs:interface",
          "docComment": "/**\n * Conditional set of SDKs provided by SPFx dependent on the environment.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISDKs "
            }
          ],
          "releaseTag": "Public",
          "name": "ISDKs",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISDKs#microsoftTeams:member",
              "docComment": "/**\n * Contextual information about the current Microsoft Teams tab. This object will only be defined if a component is being hosted in Microsoft Teams.\n *\n * @remarks\n *\n * For more information, please see: {@link https://docs.microsoft.com/en-us/javascript/api/@microsoft/teams-js/?view=msteams-client-js-latest}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "microsoftTeams?: "
                },
                {
                  "kind": "Reference",
                  "text": "IMicrosoftTeams",
                  "canonicalReference": "@microsoft/sp-webpart-base!IMicrosoftTeams:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "microsoftTeams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISDKs#office:member",
              "docComment": "/**\n * Contextual information about the current Office app. This object will only be defined if a component is being hosted in an Office app.\n *\n * @remarks\n *\n * For more information, please see: {@link https://docs.microsoft.com/en-us/office/dev/add-ins/develop/understanding-the-javascript-api-for-office}\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "office?: "
                },
                {
                  "kind": "Reference",
                  "text": "IOffice",
                  "canonicalReference": "@microsoft/sp-webpart-base!IOffice:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "office",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData:interface",
          "docComment": "/**\n * Contains collections of data that can be processed by server side services like search index and link fixup\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializedServerProcessedData "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializedServerProcessedData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData#htmlStrings:member",
              "docComment": "/**\n * A key-value map where keys are string identifiers and values are rich text with HTML format.\n *\n * @remarks\n *\n * SharePoint servers treat the values as HTML content and run services like safety checks, search index and link fixup on them.\n *\n * Example:\n * ```\n * {\n *   'myRichDescription': '<div>Some standard <b>HTML content</b><a href='http://somelink'>A Link</a></div>'\n *   'anotherRichText': <div class='aClass'><span style='color:red'>Some red text</div>\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "htmlStrings?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "htmlStrings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData#imageSources:member",
              "docComment": "/**\n * A key-value map where keys are string identifiers and values are image sources.\n *\n * @remarks\n *\n * SharePoint servers treat the values as image sources and run services like search index and link fixup on them.\n *\n * Example:\n * ```\n * {\n *   'myImage1': 'http://res.contoso.com/path/to/file'\n *   'myImage2': 'https://res.contoso.com/someName.jpg'\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageSources?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageSources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData#links:member",
              "docComment": "/**\n * A key-value map where keys are string identifiers and values are links.\n *\n * @remarks\n *\n * SharePoint servers treat the values as links and run services like link fixup on them.\n *\n * Example:\n * ```\n * {\n *   'myWebURL': 'http://contoso.com'\n *   'myFileLink': 'https://res.contoso.com/file.docx'\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "links?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "links",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData#searchablePlainTexts:member",
              "docComment": "/**\n * A key-value map where keys are string identifiers and values are strings that should be search indexed.\n *\n * @remarks\n *\n * The values are HTML-encoded before being sent to the server. The encoded values are visible to the search indexer, but are not treated as valid HTML. So, other services such as link fixup will not run on them.\n *\n * Example:\n * ```\n * {\n *  'justSomeText': 'This is some plain text',\n *  'anotherText': 'Can have <any> characters here: \"<>&\\''\n * }\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "searchablePlainTexts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "searchablePlainTexts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData:interface",
          "docComment": "/**\n * This structure represents the part of the serialized state of a web part which is controlled by the web part. It is extended by IWebPartData which contains additional data added by the framework to the serialized data.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISerializedWebPartData "
            }
          ],
          "releaseTag": "Public",
          "name": "ISerializedWebPartData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData#dataVersion:member",
              "docComment": "/**\n * Web part data version.\n *\n * @remarks\n *\n * Note that data version is different from the version field in the manifest. The manifest version is used to control the versioning of the web part code, while data version is used to control the versioning of the serialized data of the web part. Refer to dataVersion field of your web part for more information.\n *\n * Supported values: MAJOR.MINOR\n *\n * Example: `\"1.0\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataVersion: "
                },
                {
                  "kind": "Reference",
                  "text": "Version",
                  "canonicalReference": "@microsoft/sp-core-library!Version:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData#dynamicDataPaths:member",
              "docComment": "/**\n * Paths for the dynamic data. This is used to reconstruct the dynamic data objects when deserializing the web part.\n *\n * @remarks\n *\n * The key is the path within the web part properties, and the value is the dynamic data internal id.\n *\n * Example:\n * ```\n * {\n *   'pageContextUser':\n *     'PageContext:user',\n *   'anotherWebPartProperty':\n *     'WebPart.c3be45f2-7cd9-4e92-9c6c-a01d24dc04cf.3d6307e4-c8e1-4b2d-bef9-f1689c6eb7ea:aProperty'\n * }\n * ```\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicDataPaths?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "dynamicDataPaths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData#dynamicDataValues:member",
              "docComment": "/**\n * Static values for the dynamic data. This is used to reconstruct the dynamic data objects when deserializing the web part.\n *\n * @remarks\n *\n * The key is the path within the web part properties, and the value is the dynamic data static value.\n *\n * Example:\n * ```\n * {\n *   'aStringProperty': 'thisIsAString',\n *   'aBooleanProperty': true\n * }\n * ```\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicDataValues?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "dynamicDataValues",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData#properties:member",
              "docComment": "/**\n * Web part specific properties. The individual web part owns the definition of these properties.\n *\n * @remarks\n *\n * Used by the web part to manage its internal metadata and config data. The framework code never touches these properties.\n *\n * Supported values: any JSON stringifiable object hierarchy.\n *\n * Example: `{ 'value': 'text value' }`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!ISerializedWebPartData#serverProcessedContent:member",
              "docComment": "/**\n * The collections of data that can be processed by server side services like search index and link fixup.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverProcessedContent?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedServerProcessedData",
                  "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serverProcessedContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext:interface",
          "docComment": "/**\n * The base context interface for client-side web parts.\n *\n * @remarks\n *\n * A \"context\" object is a collection of well-known services and other objects that are likely to be needed by any business logic working with a component. Each component type has its own specialized extension of this interface, e.g. IWebPartContext for web parts, IExtensionContext for client-side extensions, etc.\n *\n * @deprecated\n *\n * - This interface will be removed in an upcoming release. Use the {@link WebPartContext} class instead.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface IWebPartContext "
            }
          ],
          "releaseTag": "Public",
          "name": "IWebPartContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#domElement:member",
              "docComment": "/**\n * Reference to the DOM element that hosts this client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "domElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#httpClient:member",
              "docComment": "/**\n * HttpClient instance scoped to this web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly httpClient: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpClient",
                  "canonicalReference": "@microsoft/sp-http!HttpClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "httpClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#instanceId:member",
              "docComment": "/**\n * Web part instance id. This is a globally unique value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly instanceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#manifest:member",
              "docComment": "/**\n * Manifest for the client-side web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideWebPartManifestInstance",
                  "canonicalReference": "@microsoft/sp-module-interfaces!IClientSideWebPartManifestInstance:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#pageContext:member",
              "docComment": "/**\n * SharePoint page context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pageContext: "
                },
                {
                  "kind": "Reference",
                  "text": "PageContext",
                  "canonicalReference": "@microsoft/sp-page-context!PageContext:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pageContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#propertyPane:member",
              "docComment": "/**\n * Accessor for common web part property pane operations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly propertyPane: "
                },
                {
                  "kind": "Reference",
                  "text": "IPropertyPaneAccessor",
                  "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneAccessor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "propertyPane",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#spHttpClient:member",
              "docComment": "/**\n * SPHttpClient instance scoped to this web part.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly spHttpClient: "
                },
                {
                  "kind": "Reference",
                  "text": "SPHttpClient",
                  "canonicalReference": "@microsoft/sp-http!SPHttpClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "spHttpClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#statusRenderer:member",
              "docComment": "/**\n * Web part status renderer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly statusRenderer: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideWebPartStatusRenderer",
                  "canonicalReference": "@microsoft/sp-webpart-base!default:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "statusRenderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartContext#webPartTag:member",
              "docComment": "/**\n * Web part tag to be used for logging and telemetry.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly webPartTag: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "webPartTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData:interface",
          "docComment": "/**\n * This structure represents the serialized state of a web part.\n *\n * @remarks\n *\n * When the `serialize()` API is called on a web part, the output should be this structure. The structure of the 'properties' field is owned by the web part and is specific to the web part. Each web part can decide the set of properties it wants to serialize.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface IWebPartData "
            }
          ],
          "releaseTag": "Public",
          "name": "IWebPartData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#dataVersion:member",
              "docComment": "/**\n * Web part data version\n *\n * @remarks\n *\n * Note that data version is different from the version field in the manifest. The manifest version is used to control the versioning of the web part code, while data version is used to control the versioning of the serialized data of the web part. Refer to dataVersion field of your web part for more information.\n *\n * Supported values: MAJOR.MINOR\n *\n * Example: `\"1.0\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataVersion: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#description:member",
              "docComment": "/**\n * Web part description\n *\n * @remarks\n *\n * Used to display the description of the web part.\n *\n * Supported values: string with the description.\n *\n * Example: `\"Text\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#dynamicDataPaths:member",
              "docComment": "/**\n * Paths for the dynamic data.\n *\n * @remarks\n *\n * This is used to reconstruct the dynamic data objects when deserializing the web part. The key is the path within the web part properties, and the value is the dynamic data internal id.\n *\n * Example:\n * ```\n * {\n *   'pageContextUser':\n *     'PageContext:user',\n *   'anotherWebPartProperty':\n *     'WebPart.c3be45f2-7cd9-4e92-9c6c-a01d24dc04cf.3d6307e4-c8e1-4b2d-bef9-f1689c6eb7ea:aProperty'\n * }\n * ```\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicDataPaths?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "dynamicDataPaths",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#dynamicDataValues:member",
              "docComment": "/**\n * Static values for the dynamic data.This is used to reconstruct the dynamic data objects when deserializing the web part.\n *\n * @remarks\n *\n * The key is the path within the web part properties, and the value is the dynamic data static value.\n *\n * Example:\n * ```\n * {\n *   'aStringProperty': 'thisIsAString',\n *   'aBooleanProperty': true\n * }\n * ```\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicDataValues?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [path: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Beta",
              "name": "dynamicDataValues",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#id:member",
              "docComment": "/**\n * Universally unique web part Type id.\n *\n * @remarks\n *\n * Example: `\"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#instanceId:member",
              "docComment": "/**\n * Universally unique instance id of the web part. A web part can have multiple instances on a page. This id is expected to be universally unique across time and page boundaries.\n *\n * @remarks\n *\n * supported values: a unique string. Could be GUID or other uniquely identifiable formats.\n *\n * example: `[\"dbef608d-3ad5-4f8f-b139-d916f2f0a294\"]`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "instanceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#properties:member",
              "docComment": "/**\n * Web part specific properties. The individual web part owns the definition of these properties.\n *\n * @remarks\n *\n * Used by the web part to manage its internal metadata and config data. The framework code never touches these properties.\n *\n * Supported values: any object hierarchy that can be serialized using `JSON.stringify()`.\n *\n * Example: `{ 'value': 'text value' }`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "properties?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "properties",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#serverProcessedContent:member",
              "docComment": "/**\n * The collections of data that can be processed by server side services like search index and link fixup\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serverProcessedContent?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISerializedServerProcessedData",
                  "canonicalReference": "@microsoft/sp-webpart-base!ISerializedServerProcessedData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serverProcessedContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartData#title:member",
              "docComment": "/**\n * Web part title\n *\n * @remarks\n *\n * Used to display the name of the web part in the toolbox, web part gallery and the page.\n *\n * Supported values: string less than 100 characters\n *\n * Example: `\"Text\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertiesMetadata:interface",
          "docComment": "/**\n * This structure is used to define metadata for web part properties as a map of string to `IWebPartPropertyMetadata`\n *\n * @remarks\n *\n * The key should be a JSON path to the property in web part properties. The JSON path supports the following operators:\n *\n * - Dot `.` for selecting object members, for example `person.name`\n *\n * - Brackets `[]` for selecting array items, for example `person.photoURLs[0]`\n *\n * - Bracketed asterisk `[*]` for array elements wildcard, for example `person.websites[*]`.\n *\n * You can make combinations of these operators, for example `person.websites[*].url`\n *\n * Important Note: Only one wildcard per path is supported.\n *\n * Example: Let's assume we have a web part with properties that have the following schema:\n * ```\n * {\n *   title: string;\n *   person: {\n *     name: string;\n *     bio: string;\n *     photoURLs: string[];\n *     websites: { title: string; url: string; }[]\n *   }\n * }\n * ```\n *\n * We can define the metadata for the desired properties as following:\n * ```\n * {\n *  'person.bio': { isRichContent: true },\n *  'person.photoURLs[*]': { isImageSource: true },\n *  'person.websites[*].url': { isLink: true }\n * }\n * ```\n *\n * This will make SharePoint servers aware of the content of your properties and run services such as search indexing, link fix-up, etc on the data. In case any of the values needs to update by these services, e.g link fix-up, the web part property bag is automatically updated.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface IWebPartPropertiesMetadata "
            }
          ],
          "releaseTag": "Public",
          "name": "IWebPartPropertiesMetadata",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertiesMetadata:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "IWebPartPropertyMetadata",
                  "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata:interface",
          "docComment": "/**\n * This is the structure used for map values in `IWebPartPropertiesMetadata`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IWebPartPropertyMetadata "
            }
          ],
          "releaseTag": "Public",
          "name": "IWebPartPropertyMetadata",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#dynamicPropertyType:member",
              "docComment": "/**\n * If specified, indicates that the property is a dynamic property and the type of the dynamic property.\n *\n * @remarks\n *\n * If a web part has properties that are dynamically configurable, then use this flag to declare the property as a dynamic property by specifying its type. When a property specifies its dynamic property type, then the framework ensures that its value can be accessed using 'tryGetValue' anytime in the life cycle of the web part. If a property is marked as DynamicProperty in the IWebPartProperties interface, but does not appear in the IWebPartPropertiesMetadata with a dynamicPropertyType, then the web part developer will need to manually create the DynamicProperty themselves and assign it to the property.\n *\n * A web part can configure a default value for the property by specifying it in the properties section of the web part's manifest. This value will be used when a dynamic property is constructed for the property.\n *\n * Note: Web parts should be able to type cast the resultant value from the `tryGetValue` to suit their needs.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dynamicPropertyType?: "
                },
                {
                  "kind": "Content",
                  "text": "'boolean' | 'number' | 'string' | 'array' | 'object'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicPropertyType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#isHtmlString:member",
              "docComment": "/**\n * Indicates whether the property should be serialized as HTML.\n *\n * @remarks\n *\n * This flag instructs framework to store the value as HTML, so that SharePoint can perform the following services on it:\n *\n * - normalizing HTML encodings\n *\n * - stripping unsafe HTML tags (i.e. for usage with Element.innerHTML)\n *\n * - search indexing\n *\n * - SharePoint link fix-up\n *\n * Only enable this flag for HTML content where these modifications are acceptable. If non-HTML content is provided, SharePoint framework might make modifications to convert it to HTML valid. For plain text content that simply needs to be exposed to the search index (without any rewriting), use the `isSearchablePlainText` flag instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHtmlString?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHtmlString",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#isImageSource:member",
              "docComment": "/**\n * Indicates if the property contains a link. This allows SharePoint server to treat the value as such and perform services like link fix-up, search indexing, loading from CDN, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isImageSource?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isImageSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#isLink:member",
              "docComment": "/**\n * Indicates if the property contains a link. This allows SharePoint server to treat the value as such and perform services like search indexing, link fix-up, loading from CDN, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLink?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#isSearchablePlainText:member",
              "docComment": "/**\n * Indicates if the property contains plain text that should be search-indexed by SharePoint.\n *\n * @remarks\n *\n * This flag instructs the framework to store the property in a representation that supports search indexing. The content will be treated as plain text; SharePoint will not modify the string in any way, and special HTML characters may be stored encoded and appear in search results. If your string contains HTML markup, use the isHtmlString setting instead.\n *\n * Security note: For security reasons, never assign a plain text string to `Element.innerHTML`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSearchablePlainText?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isSearchablePlainText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-webpart-base!IWebPartPropertyMetadata#shouldNotPersist:member",
              "docComment": "/**\n * Indicates if the framework should persist the property on the server.\n *\n * @remarks\n *\n * Use this for properties that are only important in run-time, and do not need to persist on the server. This can reduce the size of the serialized data of the web part and optimize the web part load time. The property value will be removed from the serialized data sent to the server, but this has no effect on the run-time property bag. The property value will still be available in the `onBeforeSerialize()` method, and the value will not be cleared from the run-time property bag. The initial render of your web part should not depend on the value of the property. Setting a default value for the property can be done in `onInit()` method.\n *\n * Note that if the property path refers to a property that has a complex object as the value, the whole object will be removed from the persisted data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shouldNotPersist?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shouldNotPersist",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButton:function(1)",
          "docComment": "/**\n * Helper method to create a Button on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the Button is associated to.\n *\n * @param properties - Strongly typed Button properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneButton(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneButtonProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneButtonProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneButton"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType:enum",
          "docComment": "/**\n * Enum for all the supported button types.\n *\n * @deprecated\n *\n * This is obsolete now. This enum has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PropertyPaneButtonType "
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyPaneButtonType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Command:member",
              "docComment": "/**\n * Optional actions.\n *\n * @remarks\n *\n * Typically used in a command bar at the top of a view, panel and inside an inline command bar. Examples: Command bar at the top of OneDrive, Outlook, SharePoint. Inline command bar on the top of SharePoint web parts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Command = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "releaseTag": "Public",
              "name": "Command",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Compound:member",
              "docComment": "/**\n * Always used as a set with both Standard and Primary compound buttons.\n *\n * @remarks\n *\n * Typically used in a confirmation dialog. Examples: A confirmation dialog when a user discards a form or task with a possible significant time investment such as an email or a complex form\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Compound = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "Compound",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Hero:member",
              "docComment": "/**\n * Hero button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Hero = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Hero",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Icon:member",
              "docComment": "/**\n * Same usage as Command button, when real estate does not allow for icons + labels or as secondary actions within the command bar.\n *\n * @remarks\n *\n * Typically used in Command bar in small and medium responsive web breakpoints. Also used on objects. Examples: OneDrive small and medium responsive web breakpoint Command Bars and view icons within the Command Bar. In SharePoint and OneDrive, Cards with social actions and images which allow users to access the image picker. In SharePoint, formatting experiences such as formatting a story within the Authoring experience. In Calendar, in the bottom of an event creation Callout when clicking inside an empty time range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Icon = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "Icon",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Normal:member",
              "docComment": "/**\n * Optional completion action.\n *\n * @remarks\n *\n * Typically used at the end of a form or task when paired with the Primary button OR as a standalone button to undo an action. Examples: \"Done\" button which closes a container but doesn't make a server call or an \"Undo\" button when a user is uploading a file in OneDrive.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Normal = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Normal",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneButtonType.Primary:member",
              "docComment": "/**\n * Preferred completion action when paired with a Standard button.\n *\n * @remarks\n *\n * Typically used at the end of a task or form. Examples: \"Create\", \"Save\", \"Send\" which makes a server call.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Primary = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Primary",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneCheckbox:function(1)",
          "docComment": "/**\n * Helper method to create a Checkbox on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the checkbox is associated to.\n *\n * @param properties - Strongly typed Checkbox properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneCheckbox(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCheckboxProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCheckboxProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCheckboxProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCheckboxProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneCheckbox"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneChoiceGroup:function(1)",
          "docComment": "/**\n * Helper method to create a Choice Group on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the choice group is associated to.\n *\n * @param properties - Strongly typed Choice Group properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneChoiceGroup(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneChoiceGroupProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneChoiceGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneChoiceGroupProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneChoiceGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneChoiceGroup"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneCustomField:function(1)",
          "docComment": "/**\n * Helper method to create a custom field on the PropertyPane.\n *\n * @remarks\n *\n * The purpose of the custom field is to help the web part developer to add a custom control to the PropertyPane. The PropertyPane supports a host of inbuilt field types. While this list meets the demands of most web parts, but there are exceptional cases when web parts have special needs and need a special control. The custom field helps fill that gap.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - target property for this field. This parameter is being deprecated in future releases.\n *\n * @param properties - Strongly typed Custom field properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneCustomField(properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCustomFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCustomFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneCustomFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneCustomFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "PropertyPaneCustomField"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDropdown:function(1)",
          "docComment": "/**\n * Helper method to create a Dropdown on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the dropdown is associated to.\n *\n * @param properties - Strongly typed Dropdown properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneDropdown(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDropdownProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDropdownProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDropdownProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneDropdown"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDropdownOptionType:enum",
          "docComment": "/**\n * Specifies the type of option in a dropdown menu rendered by {@link PropertyPaneDropdown}.\n *\n * @deprecated\n *\n * This is obsolete now. This enum has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PropertyPaneDropdownOptionType "
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyPaneDropdownOptionType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDropdownOptionType.Divider:member",
              "docComment": "/**\n * Render a divider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Divider = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Divider",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDropdownOptionType.Header:member",
              "docComment": "/**\n * Render menu item as a header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Header = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "Header",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDropdownOptionType.Normal:member",
              "docComment": "/**\n * Render normal menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Normal = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "Normal",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDynamicField:function(1)",
          "docComment": "/**\n * Helper method to create a Dynamic Data widget on the PropertyPane for a dynamic field.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the Dynamic Data widget is associated to.\n *\n * @param options - Options to enable customized values for callback, filters etc., for the dynamic field.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneDynamicField(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneDynamicField"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDynamicFieldSet:function(1)",
          "docComment": "/**\n * Helper method to create a Dynamic Data widget on the Property Pane for a set of dynamic fields with a common data source.\n *\n * These fields can possibly share the same property based on the associated filters.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param properties - Contains entries and options, described as below: entries - A set of entries to be configured by the widget. Each entry includes the target property and, optionally, the label to show. options - Options enabling customized values for callback, filters etc., for the given set of dynamic fields.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneDynamicFieldSet(properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldSetProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldSetProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicFieldSetProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicFieldSetProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "PropertyPaneDynamicFieldSet"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneDynamicTextField:function(1)",
          "docComment": "/**\n * Helper method to create a Dynamic TextField on the PropertyPane.\n *\n * @deprecated\n *\n * This has been replaced by PropertyPaneDynamicField and moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the dynamic textfield is associated to.\n *\n * @param properties - Properties of the PropertyPaneDynamicTextField.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneDynamicTextField(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicTextFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneDynamicTextFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneDynamicTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Beta",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneDynamicTextField"
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType:enum",
          "docComment": "/**\n * Enum for all the supported PropertyPane field types.\n *\n * Names should be consistent with those in office-ui-fabric-react, be careful to get letter casing correct.\n *\n * @deprecated\n *\n * This is obsolete now. This enum has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum PropertyPaneFieldType "
            }
          ],
          "releaseTag": "Public",
          "name": "PropertyPaneFieldType",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Button:member",
              "docComment": "/**\n * Button field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Button = "
                },
                {
                  "kind": "Content",
                  "text": "11"
                }
              ],
              "releaseTag": "Public",
              "name": "Button",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.CheckBox:member",
              "docComment": "/**\n * Checkbox field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CheckBox = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "CheckBox",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.ChoiceGroup:member",
              "docComment": "/**\n * Choice Group field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ChoiceGroup = "
                },
                {
                  "kind": "Content",
                  "text": "10"
                }
              ],
              "releaseTag": "Public",
              "name": "ChoiceGroup",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Custom:member",
              "docComment": "/**\n * Custom field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Custom = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "Custom",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Dropdown:member",
              "docComment": "/**\n * Dropdown field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Dropdown = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "releaseTag": "Public",
              "name": "Dropdown",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.DynamicField:member",
              "docComment": "/**\n * Dynamic data field.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DynamicField = "
                },
                {
                  "kind": "Content",
                  "text": "14"
                }
              ],
              "releaseTag": "Public",
              "name": "DynamicField",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.DynamicFieldSet:member",
              "docComment": "/**\n * A set of dynamic fields.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DynamicFieldSet = "
                },
                {
                  "kind": "Content",
                  "text": "16"
                }
              ],
              "releaseTag": "Public",
              "name": "DynamicFieldSet",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.DynamicTextField:member",
              "docComment": "/**\n * Dynamic Text Field\n *\n * @deprecated\n *\n * - Please use DynamicField\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DynamicTextField = "
                },
                {
                  "kind": "Content",
                  "text": "15"
                }
              ],
              "releaseTag": "Beta",
              "name": "DynamicTextField",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Heading:member",
              "docComment": "/**\n * Heading field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Heading = "
                },
                {
                  "kind": "Content",
                  "text": "9"
                }
              ],
              "releaseTag": "Public",
              "name": "Heading",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.HorizontalRule:member",
              "docComment": "/**\n * Horizontal Rule field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HorizontalRule = "
                },
                {
                  "kind": "Content",
                  "text": "12"
                }
              ],
              "releaseTag": "Public",
              "name": "HorizontalRule",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Label:member",
              "docComment": "/**\n * Label field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Label = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "releaseTag": "Public",
              "name": "Label",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Link:member",
              "docComment": "/**\n * Link field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Link = "
                },
                {
                  "kind": "Content",
                  "text": "13"
                }
              ],
              "releaseTag": "Public",
              "name": "Link",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Slider:member",
              "docComment": "/**\n * Slider field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Slider = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "releaseTag": "Public",
              "name": "Slider",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.TextField:member",
              "docComment": "/**\n * TextField field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "TextField = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "TextField",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneFieldType.Toggle:member",
              "docComment": "/**\n * Toggle field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Toggle = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "releaseTag": "Public",
              "name": "Toggle",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneHorizontalRule:function(1)",
          "docComment": "/**\n * Helper method to create a Horizontal Rule on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param properties - Strongly typed Horizontal Rule properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneHorizontalRule(): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "PropertyPaneHorizontalRule"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneLabel:function(1)",
          "docComment": "/**\n * Helper method to create a Label on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the label is associated to.\n *\n * @param properties - Strongly typed Label properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneLabel(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLabelProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLabelProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLabelProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLabelProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneLabel"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneLink:function(1)",
          "docComment": "/**\n * Helper method to create a Link on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the Link is associated to.\n *\n * @param properties - Strongly typed Link properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneLink(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLinkProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLinkProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneLinkProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneLinkProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneLink"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneSlider:function(1)",
          "docComment": "/**\n * Helper method to create a Slider on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the slider is associated to.\n *\n * @param properties - Strongly typed Slider properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneSlider(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneSliderProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneSliderProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneSliderProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneSliderProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneSlider"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneTextField:function(1)",
          "docComment": "/**\n * Helper method to create a TextField on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the textfield is associated to.\n *\n * @param properties - Strongly typed TextField properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneTextField(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneTextFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneTextFieldProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneTextFieldProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneTextField"
        },
        {
          "kind": "Function",
          "canonicalReference": "@microsoft/sp-webpart-base!PropertyPaneToggle:function(1)",
          "docComment": "/**\n * Helper method to create a Toggle on the PropertyPane.\n *\n * @deprecated\n *\n * This is obsolete now. This function has been moved to `@microsoft/sp-property-pane`. Please consume it from there.\n *\n * @param targetProperty - Target property the toggle is associated to.\n *\n * @param properties - Strongly typed Toggle properties.\n *\n * @internalremarks\n *\n * We have left the original implementation here to avoid breaking the public API contract.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function PropertyPaneToggle(targetProperty: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", properties: "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneToggleProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneToggleProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneField",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneField:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IPropertyPaneToggleProps",
              "canonicalReference": "@microsoft/sp-webpart-base!IPropertyPaneToggleProps:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "targetProperty",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "parameterName": "properties",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "PropertyPaneToggle"
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-webpart-base!WebPartContext:class",
          "docComment": "/**\n * Web part context object. This object contains the contextual services available to a web part. e.g. a contextual instance to the http client.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `WebPartContext` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class WebPartContext extends "
            },
            {
              "kind": "Reference",
              "text": "BaseWebPartContext",
              "canonicalReference": "@microsoft/sp-webpart-base!default:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "WebPartContext",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartContext#domElement:member",
              "docComment": "/**\n * Reference to the DOM element that hosts this client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly domElement: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "domElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartContext#microsoftTeams:member",
              "docComment": "/**\n * Contextual information about the current Microsoft Teams tab. This object will only be defined if a component is being hosted in Microsoft Teams.\n *\n * @remarks\n *\n * For more information, please see: {@link https://docs.microsoft.com/en-us/javascript/api/@microsoft/teams-js/?view=msteams-client-js-latest}\n *\n * @deprecated\n *\n * - This function has been deprecated\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly microsoftTeams: "
                },
                {
                  "kind": "Content",
                  "text": "typeof microsoftTeams | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "microsoftTeams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartContext#sdks:member",
              "docComment": "/**\n * Conditional set of SDKs provided by SPFx dependent on the environment.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sdks: "
                },
                {
                  "kind": "Reference",
                  "text": "ISDKs",
                  "canonicalReference": "@microsoft/sp-webpart-base!ISDKs:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sdks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartContext#statusRenderer:member",
              "docComment": "/**\n * Web part status renderer.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly statusRenderer: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideWebPartStatusRenderer",
                  "canonicalReference": "@microsoft/sp-webpart-base!default:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "statusRenderer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@microsoft/sp-webpart-base!WebPartFormFactor:enum",
          "docComment": "/**\n * Form factor of the web part.\n *\n * @remarks\n *\n * This will change based on how the web part is used, not by the web part itself. In cases like web parts used in Teams tab or as App pages, it will have full size form factor. If a web part is render in a canvas, with other web parts, it will have a canvas web part form factor.\n *\n * @beta\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare const enum WebPartFormFactor "
            }
          ],
          "releaseTag": "Beta",
          "name": "WebPartFormFactor",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartFormFactor.FullSize:member",
              "docComment": "/**\n * Full size form factor. This means the web part is rendered in full size, taking all space available in the page.\n *\n * @remarks\n *\n * This is the case for Teams tabs or single web part App pages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "FullSize = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Beta",
              "name": "FullSize",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@microsoft/sp-webpart-base!WebPartFormFactor.Standard:member",
              "docComment": "/**\n * Standard form factor. This means the web part is rendered in a canvas, potentially with other web parts. In this case, the width is determined by the container, and web part self-adjust for height.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Standard = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Beta",
              "name": "Standard",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        }
      ]
    }
  ]
}
