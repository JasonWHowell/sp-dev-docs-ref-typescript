{
  "kind": "package",
  "name": "@microsoft/sp-listview-extensibility",
  "summary": [
    {
      "kind": "text",
      "text": "SharePoint Framework support for customizing the list view."
    }
  ],
  "remarks": [],
  "exports": {
    "BaseFieldCustomizer": {
      "kind": "class",
      "extends": "BaseExtension",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the base class that third parties should extend when implementing a client-side extension that customizes the appearance of fields in a SharePoint ListView."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "In the component manifest, the \"extensionType\" should be set to \"FieldCustomizer\"."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "context": {
          "kind": "property",
          "signature": "protected readonly context: FieldCustomizerContext;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "FieldCustomizerContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Use the context object to access common services and state associated with the component."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly."
            }
          ],
          "isBeta": false
        },
        "onDisposeCell": {
          "kind": "method",
          "signature": "@virtual public onDisposeCell(event: IFieldCustomizerCellEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "event": {
              "name": "event",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IFieldCustomizerCellEventParameters"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "onRenderCell": {
          "kind": "method",
          "signature": "@virtual public onRenderCell(event: IFieldCustomizerCellEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "event": {
              "name": "event",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IFieldCustomizerCellEventParameters"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "BaseListViewCommandSet": {
      "kind": "class",
      "extends": "BaseExtension",
      "implements": "",
      "typeParameters": [
        "TProperties"
      ],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This is the base class that third parties should extend when implementing a client-side extension that provides a command set for a SharePoint list view."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the BaseListViewCommandSet class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "In the component manifest, the \"extensionType\" should be set to \"ListViewCommandSet\"."
        }
      ],
      "isBeta": false,
      "members": {
        "context": {
          "kind": "property",
          "signature": "public readonly context: ListViewCommandSetContext;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ListViewCommandSetContext",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Use the context object to access common services and state associated with the component."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly."
            }
          ],
          "isBeta": false
        },
        "onExecute": {
          "kind": "method",
          "signature": "@virtual public onExecute(event: IListViewCommandSetExecuteEventParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "event": {
              "name": "event",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IListViewCommandSetExecuteEventParameters"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This event occurs when the command is invoked, e.g. because the user clicked on the toolbar button or menu item."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "onListViewUpdated": {
          "kind": "method",
          "signature": "@virtual public onListViewUpdated(event: IListViewCommandSetListViewUpdatedParameters): void;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {
            "event": {
              "name": "event",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IListViewCommandSetListViewUpdatedParameters"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "This event occurs whenever the ListView state changes."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This event allows the implementor to tailor the appearance of the command. For example, to hide the command, assign its property visible = false. To customize the title, modify the command property title."
            }
          ],
          "isBeta": false
        },
        "tryGetCommand": {
          "kind": "method",
          "signature": "public tryGetCommand(id: string): Command;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Command",
            "description": []
          },
          "parameters": {
            "id": {
              "name": "id",
              "description": [
                {
                  "kind": "text",
                  "text": "Id of the command"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns the command with the given id. Returns undefined if there is not command with the given id."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ColumnAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Provides access to a ListView column, which is the visual presentation of a field."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the ColumnAccessor class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "A SharePoint \"field\" (SPField) defines the data storage for a property of a list item. (If the list item represents a document, then the field is sometimes called a \"property\".)"
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "A \"column\" is the visual presentation of a field, when displayed by the ListView."
        }
      ],
      "isBeta": false,
      "members": {
        "field": {
          "kind": "property",
          "signature": "public readonly field: SPField;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPField",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The server-side definition of the field. This property is read-only."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "visible": {
          "kind": "property",
          "signature": "public readonly visible: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Whether to show this column in the list view. This property is read-only."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "Command": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Represents a command belonging to a command set."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The BaseListViewCommandSet extension type exposes generalized commands that may be displayed as tool bar buttons, context menu items, etc. These commands are initially defined in the extension’s manifest file. At runtime, the corresponding Command object can be obtained by calling "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "BaseListViewCommandSet.tryGetCommand"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-listview-extensibility",
            "exportName": "BaseListViewCommandSet",
            "memberName": "tryGetCommand"
          }
        },
        {
          "kind": "text",
          "text": ". The command’s appearance can be customized by assigning its properties, for example to hide a command that is not contextually relevant, or to pluralize the title based on the number of selected items."
        }
      ],
      "isBeta": false,
      "members": {
        "ariaLabel": {
          "kind": "property",
          "signature": "public ariaLabel: string | undefined;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | undefined",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Custom accessibility text for the browser's \"aria-label\" attribute. If omitted, the title property will be used by default. Example: \"Show information. Press ENTER to select.\""
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "iconImageUrl": {
          "kind": "property",
          "signature": "public iconImageUrl: string | undefined;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string | undefined",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An optional URL for an image to be displayed next to the command. The requirements for this image are defined by the type of extension; some extension types may not display the image at all."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "This must be a absolute URL."
            }
          ],
          "isBeta": false
        },
        "id": {
          "kind": "property",
          "signature": "public id: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Id of the command."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "title": {
          "kind": "property",
          "signature": "public title: string;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "A short label to be displayed by the associated button, menu item, etc."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Example: \"Show information\""
            },
            {
              "kind": "paragraph"
            },
            {
              "kind": "text",
              "text": "Altering the title property is intended to allow minor changes to the title, e.g. “Submit these 3 items” or toggling between “Schedule” and “Unschedule”. Developers are discouraged from assigning a title that radically alters the meaning of the command, because administrators should be able to examine the extension manifest to understand which commands are being implemented by a given extension."
            }
          ],
          "isBeta": false
        },
        "visible": {
          "kind": "property",
          "signature": "public visible: boolean;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "True if the command is visible."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "FieldCustomizerContext": {
      "kind": "class",
      "extends": "ExtensionContext",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This object provides contextual information for BaseFieldCustomizer."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the FieldCustomizerContext class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "members": {
        "field": {
          "kind": "property",
          "signature": "public readonly field: SPField;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "SPField",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides access to the SharePoint field that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "tryGetListView": {
          "kind": "method",
          "signature": "public tryGetListView(): ListViewAccessor | undefined;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "ListViewAccessor | undefined",
            "description": [
              {
                "kind": "text",
                "text": "the SharePoint list view, or undefined if there is none."
              }
            ]
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "If the field customizer is bounded to the SharePoint list view, this provides access to the list view specific functionality; otherwise the value is undefined."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "Although the SharePoint list view is the main usage scenario, field customizers can be used by other user interface surfaces. For example, in the future SharePoint may support field customizers on a display/edit form."
            }
          ],
          "isBeta": false
        }
      }
    },
    "IFieldCustomizerCellEventParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Event parameters for BaseFieldCustomizer.onRenderCell()"
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "domElement": {
          "kind": "property",
          "signature": "readonly domElement: HTMLDivElement;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "HTMLDivElement",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The HTML \"div\" element that the extension will take ownership of. This ownership will end when onDisposeCell() is called."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "fieldValue": {
          "kind": "property",
          "signature": "readonly fieldValue: any;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "any",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The value of the field being rendered."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "listItem": {
          "kind": "property",
          "signature": "readonly listItem: ListItemAccessor;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ListItemAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The list item being edited."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "userData": {
          "kind": "property",
          "signature": "userData: any;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "any",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "An implementation defined storage property."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "For example, suppose that resources need to be allocated during rendering (e.g. a renderer object, an HTTP request to be canceled, a cache slot, etc). The onRenderCell() implementation could store a key or handle in this property, and then onDisposeCell() can use this key to find the resource to be freed."
            }
          ],
          "isBeta": false
        }
      }
    },
    "IListViewCommandSetExecuteEventParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Parameters for "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "BaseListViewCommandSet.onExecute"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-listview-extensibility",
            "exportName": "BaseListViewCommandSet",
            "memberName": "onExecute"
          }
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "itemId": {
          "kind": "property",
          "signature": "readonly itemId: string;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The unique identifier for the command. This is specified as ICommandDefinition.commandId in the component manifest."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "selectedRows": {
          "kind": "property",
          "signature": "readonly selectedRows: ReadonlyArray<RowAccessor>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ReadonlyArray<RowAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The currently selected ListView rows, at the time when the event occurred."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IListViewCommandSetListViewUpdatedParameters": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Parameters for "
        },
        {
          "kind": "api-link",
          "elements": [
            {
              "kind": "text",
              "text": "BaseListViewCommandSet.onListViewUpdated"
            }
          ],
          "target": {
            "scopeName": "@microsoft",
            "packageName": "sp-listview-extensibility",
            "exportName": "BaseListViewCommandSet",
            "memberName": "onListViewUpdated"
          }
        },
        {
          "kind": "text",
          "text": ""
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "selectedRows": {
          "kind": "property",
          "signature": "readonly selectedRows: ReadonlyArray<RowAccessor>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ReadonlyArray<RowAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The currently selected ListView rows, at the time when the event occurred."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ListItemAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "When a field customizer extension is rendering a field, the ListItemAccessor provides access to the associated SharePoint list item."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the ListItemAccessor class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "ListItemAccessor allows a field customizer extension to determine which fields are available in the editor and retrieve the current values for those fields. In the future, it may also support validation and editing operations."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "When the editor is the SharePoint list view, the ListViewAccessor uses the RowAccessor subclass instead of the ListItemAccessor base class. This allows additional functionality to be exposed, for example determining whether the associated table row is selected or not."
        }
      ],
      "isBeta": false,
      "members": {
        "fields": {
          "kind": "property",
          "signature": "public readonly fields: ReadonlyArray<SPField>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ReadonlyArray<SPField>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The SharePoint fields that are currently available in the editor for this list item."
            }
          ],
          "remarks": [
            {
              "kind": "text",
              "text": "The set of available fields depends on the editing context. For example, if a list view column is hidden, the corresponding field definition may not be loaded. Field customizers should not assume that a given field will be available, even if it is defined in the content type."
            }
          ],
          "isBeta": false
        },
        "getValue": {
          "kind": "method",
          "signature": "public abstract getValue(field: SPField): any;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "any",
            "description": []
          },
          "parameters": {
            "field": {
              "name": "field",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "SPField"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Retrieves the current data value for the specified field. The value will be a primitive JavaScript object such as a string, number, etc."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "getValueByName": {
          "kind": "method",
          "signature": "public abstract getValueByName(internalName: string): any;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "any",
            "description": []
          },
          "parameters": {
            "internalName": {
              "name": "internalName",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Retrieves the current data value for the field with the specified internal name. The value will be a primitive JavaScript object such as a string, number, etc."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ListViewAccessor": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Provides access to a SharePoint ListView control."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the ListViewAccessor class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "members": {
        "columns": {
          "kind": "property",
          "signature": "public readonly columns: ReadonlyArray<ColumnAccessor>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ReadonlyArray<ColumnAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The columns in associated with this view, including hidden columns."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "selectedRowsChangedEvent": {
          "kind": "property",
          "signature": "public readonly selectedRowsChangedEvent: Event<SelectedRowsChangedEventArgs>;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "Event<SelectedRowsChangedEventArgs>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Event that gets raised every time the selected items in the list view change."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "tryGetColumnByName": {
          "kind": "method",
          "signature": "public abstract tryGetColumnByName(internalName: string): ColumnAccessor | undefined;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "ColumnAccessor | undefined",
            "description": []
          },
          "parameters": {
            "internalName": {
              "name": "internalName",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Returns the list view column corresponding to the field with the specified internal name, or undefined if none is found."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ListViewCommandSetContext": {
      "kind": "class",
      "extends": "ExtensionContext",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "This object provides contextual information for BaseListViewCommandSet."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the ListViewCommandSetContext class."
        },
        {
          "kind": "paragraph"
        }
      ],
      "isBeta": false,
      "members": {
        "listView": {
          "kind": "property",
          "signature": "public readonly listView: ListViewAccessor;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ListViewAccessor",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Provides access to the ListView control that the customizer will operate on."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "manifest": {
          "kind": "property",
          "signature": "public readonly manifest: ICommandSetExtensionManifest;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ICommandSetExtensionManifest",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "Manifest for the client side component."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "RowAccessor": {
      "kind": "class",
      "extends": "ListItemAccessor",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Provides access to a ListView row, which is the visual presentation of a SharePoint list item."
        }
      ],
      "remarks": [
        {
          "kind": "text",
          "text": "The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the RowAccessor class."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "A SharePoint \"list item\" (SPListItem) is a data storage record in the content management system; it stores an array of values for the associated fields."
        },
        {
          "kind": "paragraph"
        },
        {
          "kind": "text",
          "text": "A \"row\" is the visual presentation of a list item, when displayed by the ListView; it stores an array of cell values for the associated columns."
        }
      ],
      "isBeta": false,
      "members": {}
    },
    "SelectedRowsChangedEventArgs": {
      "kind": "class",
      "extends": "EventArgs",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "text",
          "text": "Arguments for the selected rows changed event."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "selectedRows": {
          "kind": "property",
          "signature": "public selectedRows: ReadonlyArray<RowAccessor>;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ReadonlyArray<RowAccessor>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "text",
              "text": "The list of rows that were selected in the list view at the time when the event was fired."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    }
  }
}
