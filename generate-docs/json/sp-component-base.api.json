{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.5.0",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@microsoft/sp-component-base!",
  "docComment": "/**\n * SharePoint Framework support for building client-side components\n *\n * @remarks\n *\n * This package supports development of client-side components (e.g. web parts, client-side extensions, and applications) built using the SharePoint Framework. It defines the base classes and interfaces for functionality that is common across all client-side component types.\n *\n * @packagedocumentation\n */\n",
  "name": "@microsoft/sp-component-base",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@microsoft/sp-component-base!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!BaseComponent:class",
          "docComment": "/**\n * The base class for client-side components such as BaseClientSideWebPart or BaseExtension.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BaseComponent` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default abstract class BaseComponent implements "
            },
            {
              "kind": "Reference",
              "text": "ISPEventObserver",
              "canonicalReference": "@microsoft/sp-core-library!ISPEventObserver:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseComponent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#componentId:member",
              "docComment": "/**\n * Returns the component identifier as defined in the component’s associated manifest.\n *\n * @remarks\n *\n * Each client-side component has an associated manifest that is used by the sp-loader to load its scripts, and which may include additional metadata about the component. The manifest is uniquely identified using a text string containing a lower case GUID value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly componentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#context:member",
              "docComment": "/**\n * Use the context object to access common services and state associated with the component.\n *\n * @remarks\n *\n * Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected context: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseComponentContext",
                  "canonicalReference": "@microsoft/sp-component-base!~BaseComponentContext:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#dispose:member(1)",
              "docComment": "/**\n * Disposes the component.\n *\n * @remarks\n *\n * Third-party code generally does not need to call this method; it's invoked automatically when the lifecycle ends for a web part or extension. To perform custom cleanup when your component is disposed, override the {@link BaseComponent.onDispose} method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#instanceId:member",
              "docComment": "/**\n * A unique identifier for the instance of the component.\n *\n * @remarks\n *\n * A component implementation can be loaded multiple times on the page. For example, if the component is a charting web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely identifies each of these instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly instanceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#isDisposed:member",
              "docComment": "/**\n * Returns true if the component has been already disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDisposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#manifest:member",
              "docComment": "/**\n * Provides access to the manifest for the client-side component.\n *\n * @remarks\n *\n * Child classes can override this with more specialized manifest types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideComponentManifest",
                  "canonicalReference": "@microsoft/sp-module-interfaces!IClientSideComponentManifest:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponent#onDispose:member(1)",
              "docComment": "/**\n * This event method is called at the end of the component's lifecycle. It provides an opportunity to release any associated resources, cancel any outstanding requests, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected onDispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onDispose"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext:class",
          "docComment": "/**\n * The base class for context objects for client-side components.\n *\n * @remarks\n *\n * A \"context\" object is a collection of well-known services and other objects that are likely to be needed by business logic that interacts with a associated component. Each component type has its own specialized subclass of BaseComponentContext, e.g. WebPartContext for web parts, ExtensionContext for client-side extensions, and so on.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BaseComponentContext` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class BaseComponentContext implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@microsoft/sp-core-library!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseComponentContext",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#aadHttpClientFactory:member",
              "docComment": "/**\n * The instance of AadHttpClientFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly aadHttpClientFactory: "
                },
                {
                  "kind": "Reference",
                  "text": "AadHttpClientFactory",
                  "canonicalReference": "@microsoft/sp-http!AadHttpClientFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "aadHttpClientFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#aadTokenProviderFactory:member",
              "docComment": "/**\n * The instance of AadTokenProviderFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly aadTokenProviderFactory: "
                },
                {
                  "kind": "Reference",
                  "text": "AadTokenProviderFactory",
                  "canonicalReference": "@microsoft/sp-http!AadTokenProviderFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "aadTokenProviderFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#dispose:member(1)",
              "docComment": "/**\n * Disposes the base component context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#dynamicDataProvider:member",
              "docComment": "/**\n * Returns the Dynamic Data Provider associated with the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly dynamicDataProvider: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataProvider",
                  "canonicalReference": "@microsoft/sp-component-base!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicDataProvider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#dynamicDataSourceManager:member",
              "docComment": "/**\n * Returns the Dynamic Data Source Manager associated with the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly dynamicDataSourceManager: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataSourceManager",
                  "canonicalReference": "@microsoft/sp-component-base!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicDataSourceManager",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#httpClient:member",
              "docComment": "/**\n * The instance of HttpClient created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly httpClient: "
                },
                {
                  "kind": "Reference",
                  "text": "HttpClient",
                  "canonicalReference": "@microsoft/sp-http!HttpClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "httpClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#instanceId:member",
              "docComment": "/**\n * A unique identifier for the instance of the component.\n *\n * @remarks\n *\n * A component implementation can be loaded multiple times on the page. For example, if the component is a charting web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely identifies each of these instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly instanceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#isDisposed:member",
              "docComment": "/**\n * Returns true if the context is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDisposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#manifest:member",
              "docComment": "/**\n * Manifest for the client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly manifest: "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideComponentManifest",
                  "canonicalReference": "@microsoft/sp-module-interfaces!IClientSideComponentManifest:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#msGraphClientFactory:member",
              "docComment": "/**\n * The instance of MSGraphClientFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly msGraphClientFactory: "
                },
                {
                  "kind": "Reference",
                  "text": "MSGraphClientFactory",
                  "canonicalReference": "@microsoft/sp-http!MSGraphClientFactory:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "msGraphClientFactory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#pageContext:member",
              "docComment": "/**\n * The page context provides standard definitions for common SharePoint objects that need to be shared between the client-side application, web parts, and other components.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly pageContext: "
                },
                {
                  "kind": "Reference",
                  "text": "PageContext",
                  "canonicalReference": "@microsoft/sp-page-context!PageContext:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pageContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#serviceScope:member",
              "docComment": "/**\n * The associated {@link @microsoft/sp-core-library#ServiceScope} for this component.\n *\n * @remarks\n *\n * A child service scope is created for each client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly serviceScope: "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceScope",
                  "canonicalReference": "@microsoft/sp-core-library!ServiceScope:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serviceScope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!BaseComponentContext#spHttpClient:member",
              "docComment": "/**\n * The instance of SpHttpClient created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly spHttpClient: "
                },
                {
                  "kind": "Reference",
                  "text": "SPHttpClient",
                  "canonicalReference": "@microsoft/sp-http!SPHttpClient:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "spHttpClient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider:class",
          "docComment": "/**\n * The Dynamic Data Provider allows components to consume Dynamic Data. It allows components to request Dynamic Data sources and register/unregister to those.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class DynamicDataProvider implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@microsoft/sp-core-library!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicDataProvider",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#dispose:member(1)",
              "docComment": "/**\n * Disposes the Dynamic Data Provider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#getAvailableSources:member(1)",
              "docComment": "/**\n * Returns a list with all available Dynamic Data Sources.\n *\n * @returns Read-only array with all available sources.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAvailableSources(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray",
                  "canonicalReference": "!ReadonlyArray:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource",
                  "canonicalReference": "@microsoft/sp-dynamic-data!IDynamicDataSource:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getAvailableSources"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#isDisposed:member",
              "docComment": "/**\n * Returns true if the Dynamic Data Provider is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDisposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#registerAvailableSourcesChanged:member(1)",
              "docComment": "/**\n * Registers a callback to an event that raises when the list of available Dynamic Data Sources is updated.\n *\n * @param callback - Function to execute when the sources are updated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerAvailableSourcesChanged(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "registerAvailableSourcesChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#registerPropertyChanged:member(1)",
              "docComment": "/**\n * Registers a callback for updates when a property is changed in a Dynamic Data source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param propertyId - Id of the property of the source.\n *\n * @param callback - Function to execute when the source updates its data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerPropertyChanged(sourceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", propertyId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "registerPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#registerSourceChanged:member(1)",
              "docComment": "/**\n * Registers a callback for updates when a Dynamic Data source is changed. This happens when any property is updated within the source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param callback - Function to execute when the source updates its data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerSourceChanged(sourceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "registerSourceChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#tryGetSource:member(1)",
              "docComment": "/**\n * Returns a Dynamic Data Source, by its id. If the source is not present, it returns undefined.\n *\n * @param id - Id of the Dynamic Data Source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryGetSource(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource",
                  "canonicalReference": "@microsoft/sp-dynamic-data!IDynamicDataSource:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "tryGetSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#unregisterAvailableSourcesChanged:member(1)",
              "docComment": "/**\n * Unregisters a callback to an event that raises when the list of available Dynamic Data Sources is updated.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregisterAvailableSourcesChanged(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "unregisterAvailableSourcesChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#unregisterPropertyChanged:member(1)",
              "docComment": "/**\n * Unregisters a callback for updates when a property is changed in a Dynamic Data source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param propertyId - Id of the property of the source.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregisterPropertyChanged(sourceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", propertyId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "unregisterPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataProvider#unregisterSourceChanged:member(1)",
              "docComment": "/**\n * Unregisters a callback for updates when a Dynamic Data source is changed.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregisterSourceChanged(sourceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "unregisterSourceChanged"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager:class",
          "docComment": "/**\n * The Dynamic Data Source Manager is responsible for: - Constructing the dynamic data source - Allowing initialization of the dynamic data source by a component - Allowing data source to update its metadata and notify when data has been updated.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class DynamicDataSourceManager implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@microsoft/sp-core-library!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicDataSourceManager",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#dispose:member(1)",
              "docComment": "/**\n * Disposes the resources held by the Dynamic Data source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#initializeSource:member(1)",
              "docComment": "/**\n * Initializes the Dynamic Data Source for the component.\n *\n * @param callableFunctions - Set of methods that are exposed through the Dynamic Data Source\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initializeSource(callableFunctions: "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataCallables",
                  "canonicalReference": "@microsoft/sp-dynamic-data!IDynamicDataCallables:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callableFunctions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "initializeSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#isDisposed:member",
              "docComment": "/**\n * Returns true if the DynamicDataSourceManager is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDisposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#notifyPropertyChanged:member(1)",
              "docComment": "/**\n * Notifies that this source has updated a specific property.\n *\n * When invoked, it enables to broadcast the notification to all the consumers who have registered to this notification from this source.\n *\n * @param propertyId - Id of the updated property in the source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notifyPropertyChanged(propertyId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "notifyPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#notifySourceChanged:member(1)",
              "docComment": "/**\n * Notifies that this source has updated its properties.\n *\n * When invoked, it enables to broadcast the notification to all the consumers who have registered to this notification from this source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notifySourceChanged(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "notifySourceChanged"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#sourceId:member",
              "docComment": "/**\n * Returns the Id of the current DataSource. If the component did not initialize as a dynamic data source, then it returns an empty string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sourceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sourceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicDataSourceManager#updateMetadata:member(1)",
              "docComment": "/**\n * Updates the metadata of the Dynamic Data Source. It allows to update fields like title or description. Auto-generated fields like alias, componentId or instanceId cannot be updated.\n *\n * @param metadata - Partial of the metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateMetadata(metadata: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSourceMetadata",
                  "canonicalReference": "@microsoft/sp-dynamic-data!IDynamicDataSourceMetadata:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "metadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                }
              ],
              "name": "updateMetadata"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!DynamicProperty:class",
          "docComment": "/**\n * Serializable object that simplifies usage of a DynamicProperty.\n *\n * @remarks\n *\n * This is built for usage in web part properties, and modified through the property pane. Can be initialized with a default callback. Web parts initialize with the render method so if the 3rd party developer does nothing, a change in the DynamicProperty will re-render the web part automatically.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class DynamicProperty<TValue> implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable",
              "canonicalReference": "@microsoft/sp-core-library!IDisposable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TValue",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DynamicProperty",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty:constructor(1)",
              "docComment": "/**\n * Create a new DynamicProperty object.\n *\n * @param provider - DynamicDataProvider.\n *\n * @param callback - Optional. Default callback to be registered for updates in the DynamicDataSource.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(provider: "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataProvider",
                  "canonicalReference": "@microsoft/sp-component-base!default:class"
                },
                {
                  "kind": "Content",
                  "text": ", callback?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "provider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#dispose:member(1)",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-core-library#IDisposable.dispose}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#hasDefaultCallback:member(1)",
              "docComment": "/**\n * Returns true if the object has a default callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasDefaultCallback(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "hasDefaultCallback"
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#isDisposed:member",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-core-library#IDisposable.isDisposed}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDisposed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#reference:member",
              "docComment": "/**\n * DynamicDataReference string that the DynamicProperty object points to. The reference is of the form `<source>:<property>:<path>`.\n *\n * @remarks\n *\n * If the DynamicProperty is set up with static data, this returns undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly reference: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "reference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#register:member(1)",
              "docComment": "/**\n * Registers a callback function for updates on the associated DynamicDataSource.\n *\n * @param callback - Callback function to register.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "register(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#removeDefaultCallback:member(1)",
              "docComment": "/**\n * Removes the registration for the default callback.\n *\n * @remarks\n *\n * This can be useful for advanced users who only want their custom callbacks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removeDefaultCallback(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "removeDefaultCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#setReference:member(1)",
              "docComment": "/**\n * Sets the value of the DynamicProperty to be a reference to a DynamicDynamicSource and property. The reference is of the form `<source>:<property>:<path>`.\n *\n * @param reference - Id of the DynamicDataSource and property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setReference(reference: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "reference",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#setValue:member(1)",
              "docComment": "/**\n * Sets a static value in the DynamicProperty.\n *\n * @param value - Value for the DynamicProperty.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setValue(value: "
                },
                {
                  "kind": "Content",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "setValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#tryGetSource:member(1)",
              "docComment": "/**\n * Returns the DynamicDataSource that the DynamicProperty object refers to. Returns undefined if the source doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryGetSource(): "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource",
                  "canonicalReference": "@microsoft/sp-dynamic-data!IDynamicDataSource:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "tryGetSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#tryGetValue:member(1)",
              "docComment": "/**\n * Returns the value of the object.\n *\n * @remarks\n *\n * If the value is an array, then the first element of the array is returned; otherwise, the value itself is returned.\n *\n * NOTE: This api will never return an array. To retrieve an array value, use the {@link DynamicProperty.tryGetValues} API.\n *\n * @returns the value associated with the dynamic property or undefined if the source or the data doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryGetValue(): "
                },
                {
                  "kind": "Content",
                  "text": "TValue | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "tryGetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#tryGetValues:member(1)",
              "docComment": "/**\n * Returns the value of the object.\n *\n * @remarks\n *\n * If the value is NOT an array, then an array is returned with the value being the single entry; otherwise, the value itself is returned. If the property is undefined or cannot be found, an empty array will be returned.\n *\n * NOTE: This api will always return an array and it assumes that the array is homogeneous. To retrieve a non-array value, use the {@link DynamicProperty.tryGetValue} API.\n *\n * @returns the value associated with the dynamic property or an empty array if the source or the data doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryGetValues(): "
                },
                {
                  "kind": "Content",
                  "text": "TValue[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "tryGetValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!DynamicProperty#unregister:member(1)",
              "docComment": "/**\n * Unregisters a callback function for updates on the associated DynamicDataSource. The callback function must be the same it was registered with.\n *\n * @param callback - Callback function to unregister.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unregister(callback: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "unregister"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!IFontStyles:interface",
          "docComment": "/**\n * Font styles for different sizes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IFontStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IFontStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#large:member",
              "docComment": "/**\n * Large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "large: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "large",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#medium:member",
              "docComment": "/**\n * Medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "medium: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "medium",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#mediumPlus:member",
              "docComment": "/**\n * Larger than medium but smaller than large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mediumPlus: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediumPlus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#mega:member",
              "docComment": "/**\n * Mega sized font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mega: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mega",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#small:member",
              "docComment": "/**\n * Small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "small: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "small",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#smallPlus:member",
              "docComment": "/**\n * Larger than small but smaller than medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallPlus: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallPlus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#superLarge:member",
              "docComment": "/**\n * Super large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "superLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "superLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#tiny:member",
              "docComment": "/**\n * Tiny font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tiny: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tiny",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#xLarge:member",
              "docComment": "/**\n * Extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#xSmall:member",
              "docComment": "/**\n * Extra small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xSmall: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xSmall",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IFontStyles#xxLarge:member",
              "docComment": "/**\n * Extra extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xxLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xxLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!IPalette:interface",
          "docComment": "/**\n * Color palette.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPalette "
            }
          ],
          "releaseTag": "Public",
          "name": "IPalette",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#accent:member",
              "docComment": "/**\n * Color code for the accent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#black:member",
              "docComment": "/**\n * Color code for the strongest color, which is black in the default theme. This is a very light color in inverted themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "black: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "black",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#blackTranslucent40:member",
              "docComment": "/**\n * Color code for blackTranslucent40.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blackTranslucent40: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blackTranslucent40",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#blue:member",
              "docComment": "/**\n * Color code for blue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blue: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#blueDark:member",
              "docComment": "/**\n * Color code for blueDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blueDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#blueLight:member",
              "docComment": "/**\n * Color code for blueLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blueLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#blueMid:member",
              "docComment": "/**\n * Color code for blueMid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blueMid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueMid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#green:member",
              "docComment": "/**\n * Color code for green.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "green: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "green",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#greenDark:member",
              "docComment": "/**\n * Color code for greenDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greenDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "greenDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#greenLight:member",
              "docComment": "/**\n * Color code for greenLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "greenLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "greenLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#magenta:member",
              "docComment": "/**\n * Color code for magenta.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "magenta: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magenta",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#magentaDark:member",
              "docComment": "/**\n * Color code for magentaDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "magentaDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magentaDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#magentaLight:member",
              "docComment": "/**\n * Color code for magentaLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "magentaLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magentaLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralDark:member",
              "docComment": "/**\n * Color code for neutralDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralLight:member",
              "docComment": "/**\n * Color code for neutralLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralLighter:member",
              "docComment": "/**\n * Color code for neutralLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralLighter: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLighter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralLighterAlt:member",
              "docComment": "/**\n * Color code for neutralLighterAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralLighterAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLighterAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralPrimary:member",
              "docComment": "/**\n * Color code for neutralPrimary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralPrimary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralPrimary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralPrimaryAlt:member",
              "docComment": "/**\n * Color code for neutralPrimaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralPrimaryAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralPrimaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralQuaternary:member",
              "docComment": "/**\n * Color code for neutralQuaternary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralQuaternary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralQuaternary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralQuaternaryAlt:member",
              "docComment": "/**\n * Color code for neutralQuaternaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralQuaternaryAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralQuaternaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralSecondary:member",
              "docComment": "/**\n * Color code for neutralSecondary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralSecondary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralSecondary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralSecondaryAlt:member",
              "docComment": "/**\n * Color code for neutralSecondaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralSecondaryAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralSecondaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralTertiary:member",
              "docComment": "/**\n * Color code for neutralTertiary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralTertiary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralTertiary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#neutralTertiaryAlt:member",
              "docComment": "/**\n * Color code for neutralTertiaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neutralTertiaryAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralTertiaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#orange:member",
              "docComment": "/**\n * Color code for orange.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orange: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#orangeLight:member",
              "docComment": "/**\n * Color code for orangeLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orangeLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orangeLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#orangeLighter:member",
              "docComment": "/**\n * Color code for orangeLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orangeLighter: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orangeLighter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#purple:member",
              "docComment": "/**\n * Color code for purple.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purple: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purple",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#purpleDark:member",
              "docComment": "/**\n * Color code for purpleDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpleDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purpleDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#purpleLight:member",
              "docComment": "/**\n * Color code for purpleLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "purpleLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purpleLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#red:member",
              "docComment": "/**\n * Color code for red.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "red: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "red",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#redDark:member",
              "docComment": "/**\n * Color code for redDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "redDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#teal:member",
              "docComment": "/**\n * Color code for teal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "teal: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "teal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#tealDark:member",
              "docComment": "/**\n * Color code for tealDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tealDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tealDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#tealLight:member",
              "docComment": "/**\n * Color code for tealLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tealLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tealLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeDark:member",
              "docComment": "/**\n * Color code for themeDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeDark: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDark",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeDarkAlt:member",
              "docComment": "/**\n * Color code for themeDarkAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeDarkAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDarkAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeDarker:member",
              "docComment": "/**\n * Color code for themeDarker.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeDarker: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDarker",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeLight:member",
              "docComment": "/**\n * Color code for themeLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeLighter:member",
              "docComment": "/**\n * Color code for themeLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeLighter: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLighter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeLighterAlt:member",
              "docComment": "/**\n * Color code for themeLighterAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeLighterAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLighterAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themePrimary:member",
              "docComment": "/**\n * Color code for themePrimary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themePrimary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themePrimary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeSecondary:member",
              "docComment": "/**\n * Color code for themeSecondary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeSecondary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeSecondary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#themeTertiary:member",
              "docComment": "/**\n * Color code for themeTertiary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "themeTertiary: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeTertiary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#white:member",
              "docComment": "/**\n * Color code for the softest color, which is white in the default theme. This is a very dark color in dark themes. This is the page background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "white: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "white",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#whiteTranslucent40:member",
              "docComment": "/**\n * Color code for whiteTranslucent40\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "whiteTranslucent40: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "whiteTranslucent40",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#yellow:member",
              "docComment": "/**\n * Color code for yellow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "yellow: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "yellow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IPalette#yellowLight:member",
              "docComment": "/**\n * Color code for yellowLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "yellowLight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "yellowLight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface",
          "docComment": "/**\n * IStyleObject extends a raw style objects, but allows selectors to be defined under the selectors node.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IRawStyle extends "
            },
            {
              "kind": "Reference",
              "text": "IRawStyleBase",
              "canonicalReference": "@microsoft/sp-component-base!IRawStyleBase:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IRawStyle",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IRawStyle#displayName:member",
              "docComment": "/**\n * Display name for the style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IRawStyle#selectors:member",
              "docComment": "/**\n * Custom selectors for the style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectors?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles:interface",
          "docComment": "/**\n * Font styles for different sizes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IReadonlyFontStyles "
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyFontStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#large:member",
              "docComment": "/**\n * Large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "large: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "large",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#medium:member",
              "docComment": "/**\n * Medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "medium: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "medium",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#mediumPlus:member",
              "docComment": "/**\n * Larger than medium but smaller than large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mediumPlus: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediumPlus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#mega:member",
              "docComment": "/**\n * Mega sized font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mega: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mega",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#small:member",
              "docComment": "/**\n * Small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "small: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "small",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#smallPlus:member",
              "docComment": "/**\n * Larger than small but smaller than medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallPlus: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallPlus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#superLarge:member",
              "docComment": "/**\n * Super large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "superLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "superLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#tiny:member",
              "docComment": "/**\n * Tiny font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tiny: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tiny",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#xLarge:member",
              "docComment": "/**\n * Extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#xSmall:member",
              "docComment": "/**\n * Extra small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xSmall: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xSmall",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles#xxLarge:member",
              "docComment": "/**\n * Extra extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xxLarge: "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xxLarge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@microsoft/sp-component-base!IReadonlyRawStyle:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IReadonlyRawStyle = "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IRawStyle",
              "canonicalReference": "@microsoft/sp-component-base!IRawStyle:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyRawStyle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!IReadonlyTheme:interface",
          "docComment": "/**\n * Immutable ITheme.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IReadonlyTheme extends "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ITheme",
              "canonicalReference": "@microsoft/sp-component-base!ITheme:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyTheme",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyTheme#fonts:member",
              "docComment": "/**\n * Font styles for different sizes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly fonts: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyFontStyles",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyFontStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyTheme#palette:member",
              "docComment": "/**\n * Color palette.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly palette: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPalette",
                  "canonicalReference": "@microsoft/sp-component-base!IPalette:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "palette",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!IReadonlyTheme#semanticColors:member",
              "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly semanticColors: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISemanticColors",
                  "canonicalReference": "@microsoft/sp-component-base!ISemanticColors:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "semanticColors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!ISemanticColors:interface",
          "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n *\n * Note: text colors are defined in ISemanticTextColors.ts.\n *\n * ## Naming Convention\n *\n * The name of a semantic slot can quickly tell you how it’s meant to be used. It generally follows this format:\n *\n * [category name][element name][checked state][hovered/pressed/disabled state] [category name] – The “family” that this slot belongs to. [element name] – The name of the thing being targeted, such as the background or border. [checked state] – Whether the thing is checked. We assume things are unchecked by default, so no need to specify the unchecked state. (We used “checked” to refer to anything that is on, selected, toggled, highlighted, emphasized, etc.) [hovered/pressed/disabled state] – One of these states, if applicable. Each of these states are mutually exclusive. Pressed styles overwrite hovered styles, and disabled elements cannot be hovered or pressed.\n *\n * ## Base Slots\n *\n * A basic set of slots that provide many default body styles, such as text, subtext, disabled colors, and so on. If a category doesn't provide the slot you're looking for, use one from this category. For example, the placeholder text on a text input field has no corresponding slot in its category, so you'd use the bodySubtextColor from this category.\n *\n * ## Invariants\n *\n * When color has meaning, we do not want to change the color much theme to theme. For example, we will always want errors to be some shade of red, but we will need to tweak the exact shade so it's legible depending on whether it's an inverted theme or not. Invariant colors should almost never be changed by the theme, the defaults should suffice.\n *\n * ## Input Controls\n *\n * This category contains input components commonly used to denote state, including radio buttons, check boxes, toggle switches, sliders, progress bars, and more.\n *\n * ## Buttons\n *\n * Buttons! And all the flavors thereof.\n *\n * ## Menus\n *\n * Any kind of popup menus uses this category.\n *\n * ## Lists\n *\n * Lists differ from menus in that they are designed to show infinite amounts of items, often scroll, and have a large and complex interaction surface. This category covers all kinds of lists, whether they're typical one-item-per-row lists (like DetailsList) or ones with a tiled layout.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISemanticColors extends "
            },
            {
              "kind": "Reference",
              "text": "ISemanticTextColors",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISemanticColors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#accentButtonBackground:member",
              "docComment": "/**\n * Background of an accent button (kicker)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentButtonBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentButtonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#blockingBackground:member",
              "docComment": "/**\n * Background for blocking issues, which is more severe than a warning, but not as bad as an error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockingBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blockingBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#bodyBackground:member",
              "docComment": "/**\n * The default color for backgrounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#bodyDivider:member",
              "docComment": "/**\n * Divider lines; e.g. lines that separate sections in a menu, an <HR> element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyDivider: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyDivider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#bodyFrameBackground:member",
              "docComment": "/**\n * The color for chrome adjacent to an area with bodyBackground. This can be used to provide visual separation of zones when using stronger colors, when using a divider line is not desired. In most themes, this should match the color of bodyBackground. See also: bodyFrameDivider\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyFrameBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyFrameBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#bodyFrameDivider:member",
              "docComment": "/**\n * Used as the border between a zone with bodyFrameBackground and a zone with bodyBackground. If bodyBackground and bodyFrameBackground are different, this should be the same color as bodyFrameBackground in order to visually disappear. See also: bodyFrameBackground\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyFrameDivider: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyFrameDivider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#bodyStandoutBackground:member",
              "docComment": "/**\n * The standout color for highlighted content backgrounds. For highlighted content when there is no emphasis, use the neutral variant instead. This should be a shade darker than bodyBackground in light themes, and a shade lighter in inverted themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyStandoutBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyStandoutBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackground:member",
              "docComment": "/**\n * Background of a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackgroundChecked:member",
              "docComment": "/**\n * Background of a checked standard button; e.g. bold/italicize/underline text button in toolbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackgroundChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackgroundCheckedHovered:member",
              "docComment": "/**\n * Background of a checked and hovered standard button; e.g. bold/italicize/underline text button in toolbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackgroundCheckedHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackgroundDisabled:member",
              "docComment": "/**\n * Background of a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackgroundDisabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackgroundHovered:member",
              "docComment": "/**\n * Background of a hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackgroundHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBackgroundPressed:member",
              "docComment": "/**\n * Background of a pressed standard button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBackgroundPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBorder:member",
              "docComment": "/**\n * Border of a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#buttonBorderDisabled:member",
              "docComment": "/**\n * Border of a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonBorderDisabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBorderDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#defaultStateBackground:member",
              "docComment": "/**\n * Background color for default/empty state graphical elements; eg default icons, empty section that needs user to fill in content, placeholder graphics, empty seats, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultStateBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultStateBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#disabledBackground:member",
              "docComment": "/**\n * The default color for backgrounds of disabled controls; e.g. disabled text field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#errorBackground:member",
              "docComment": "/**\n * The background for errors, if necessary, or highlighting the section of the page where the error is present.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#focusBorder:member",
              "docComment": "/**\n * The color of the outline around focused controls that don't already have a border; e.g. menu items\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputBackground:member",
              "docComment": "/**\n * The background color of an input, e.g. textbox background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputBackgroundChecked:member",
              "docComment": "/**\n * The background of a checked control; e.g. checked radio button's dot, checked toggle's background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputBackgroundChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputBackgroundCheckedHovered:member",
              "docComment": "/**\n * The background of a checked and hovered control; e.g. checked checkbox's background color on hover.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputBackgroundCheckedHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputBorder:member",
              "docComment": "/**\n * The border of a large input control in its resting, state; e.g. the box of dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputBorderHovered:member",
              "docComment": "/**\n * The border color of a large hovered input control, such as textbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputBorderHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBorderHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputFocusBorderAlt:member",
              "docComment": "/**\n * The alternate focus border color for elements that already have a border; e.g. text field borders on focus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputFocusBorderAlt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputFocusBorderAlt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#inputForegroundChecked:member",
              "docComment": "/**\n * The foreground of a checked control; e.g. checked checkbox's checkmark color, checked toggle's thumb color, radio button's background color around the dot.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputForegroundChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputForegroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listBackground:member",
              "docComment": "/**\n * The background color for the entire list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listHeaderBackgroundHovered:member",
              "docComment": "/**\n * The background color for a hovered list header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listHeaderBackgroundHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listHeaderBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listHeaderBackgroundPressed:member",
              "docComment": "/**\n * The background color for a pressed list header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listHeaderBackgroundPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listHeaderBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listItemBackgroundChecked:member",
              "docComment": "/**\n * The background color of a checked list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listItemBackgroundChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listItemBackgroundCheckedHovered:member",
              "docComment": "/**\n * The background color of a checked and hovered list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listItemBackgroundCheckedHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listItemBackgroundHovered:member",
              "docComment": "/**\n * The background color of a hovered list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listItemBackgroundHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#listText:member",
              "docComment": "/**\n * The default text color for list item titles and text in column fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuBackground:member",
              "docComment": "/**\n * The background of a menu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuDivider:member",
              "docComment": "/**\n * The divider between menu items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuDivider: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuDivider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuHeader:member",
              "docComment": "/**\n * The headers in menus that denote title of a section.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuHeader: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuIcon:member",
              "docComment": "/**\n * The default colors of icons in menus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuIcon: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuItemBackgroundChecked:member",
              "docComment": "/**\n * @deprecated\n *\n * (Checked menu items no longer get a background color.) The background of checked menu item; e.g. a menu item whose submenu is open, a selected dropdown item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemBackgroundChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuItemBackgroundHovered:member",
              "docComment": "/**\n * The background of a hovered menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemBackgroundHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuItemBackgroundPressed:member",
              "docComment": "/**\n * The background of a pressed menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemBackgroundPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuItemText:member",
              "docComment": "/**\n * The text color of a menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#menuItemTextHovered:member",
              "docComment": "/**\n * The text color of a hovered menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemTextHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#primaryButtonBackground:member",
              "docComment": "/**\n * Background of a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#primaryButtonBackgroundDisabled:member",
              "docComment": "/**\n * Background of a disabled primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonBackgroundDisabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#primaryButtonBackgroundHovered:member",
              "docComment": "/**\n * Background of a hovered primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonBackgroundHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#primaryButtonBackgroundPressed:member",
              "docComment": "/**\n * Background of a pressed primary button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonBackgroundPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#primaryButtonBorder:member",
              "docComment": "/**\n * Border of a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#smallInputBorder:member",
              "docComment": "/**\n * The border of a small input control in its resting unchecked state; e.g. the box of an unchecked checkbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallInputBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallInputBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#successBackground:member",
              "docComment": "/**\n * Background for success\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "successBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "successBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#variantBorder:member",
              "docComment": "/**\n * The color of the border that provides contrast between an element, such as a card, and an emphasized background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variantBorder: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "variantBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#variantBorderHovered:member",
              "docComment": "/**\n * Hover color of border that provides contrast between an element, such as a card, and an emphasized background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "variantBorderHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "variantBorderHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#warningBackground:member",
              "docComment": "/**\n * Background for warning messages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warningBackground: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticColors#warningHighlight:member",
              "docComment": "/**\n * Foreground color for warning highlights\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warningHighlight: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningHighlight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors:interface",
          "docComment": "/**\n * Collection of semantic text colors.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISemanticTextColors "
            }
          ],
          "releaseTag": "Public",
          "name": "ISemanticTextColors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#accentButtonText:member",
              "docComment": "/**\n * Color of text for accent button (kicker)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accentButtonText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentButtonText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#actionLink:member",
              "docComment": "/**\n * Neutral colored links and links for action buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actionLink: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionLink",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#actionLinkHovered:member",
              "docComment": "/**\n * Hover state for neutral colored links and links for action buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actionLinkHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionLinkHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#bodySubtext:member",
              "docComment": "/**\n * De-emphasized text; e.g. metadata, captions, placeholder text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodySubtext: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodySubtext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#bodyText:member",
              "docComment": "/**\n * The default color for text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#bodyTextChecked:member",
              "docComment": "/**\n * Checked text color, e.g. selected menu item text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyTextChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyTextChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonText:member",
              "docComment": "/**\n * Color of text in a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonTextChecked:member",
              "docComment": "/**\n * Color of text in a checked standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonTextChecked: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonTextCheckedHovered:member",
              "docComment": "/**\n * Color of text in a checked and hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonTextCheckedHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonTextDisabled:member",
              "docComment": "/**\n * Color of text in a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonTextDisabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonTextHovered:member",
              "docComment": "/**\n * Color of text in a hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonTextHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#buttonTextPressed:member",
              "docComment": "/**\n * Color of text in a pressed standard button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonTextPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#disabledBodySubtext:member",
              "docComment": "/**\n * Disabled de-emphasized text, for use on the default background (bodyBackground).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledBodySubtext: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBodySubtext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#disabledBodyText:member",
              "docComment": "/**\n * The default color for disabled text on the default background (bodyBackground).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledBodyText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBodyText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#disabledSubtext:member",
              "docComment": "/**\n * Disabled de-emphasized text, for use on disabledBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledSubtext: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledSubtext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#disabledText:member",
              "docComment": "/**\n * The default color for disabled text on top of disabledBackground; e.g. text in a disabled text field, disabled button text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#errorText:member",
              "docComment": "/**\n * The default color of error text, used on bodyBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#inputPlaceholderText:member",
              "docComment": "/**\n * The color of placeholder text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputPlaceholderText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputPlaceholderText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#inputText:member",
              "docComment": "/**\n * The color of input text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#inputTextHovered:member",
              "docComment": "/**\n * The color of input text on hover.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputTextHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#link:member",
              "docComment": "/**\n * The color of a link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#linkHovered:member",
              "docComment": "/**\n * The color of a hovered link. Also used when the link is active.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "linkHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#listText:member",
              "docComment": "/**\n * The default text color for list item titles and text in column fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#listTextColor:member",
              "docComment": "/**\n * @deprecated\n *\n * This slot was incorrectly named. Use listText instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listTextColor: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listTextColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#primaryButtonText:member",
              "docComment": "/**\n * Color of text in a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#primaryButtonTextDisabled:member",
              "docComment": "/**\n * Color of text in a disabled primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonTextDisabled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#primaryButtonTextHovered:member",
              "docComment": "/**\n * Color of text in a hovered primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonTextHovered: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#primaryButtonTextPressed:member",
              "docComment": "/**\n * Color of text in a pressed primary button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryButtonTextPressed: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextPressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ISemanticTextColors#warningText:member",
              "docComment": "/**\n * The color of text on errorBackground, warningBackground, blockingBackground, or successBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "warningText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@microsoft/sp-component-base!ITheme:interface",
          "docComment": "/**\n * Collection of theme values, which can be used to programatically style components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ITheme "
            }
          ],
          "releaseTag": "Public",
          "name": "ITheme",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ITheme#disableGlobalClassNames:member",
              "docComment": "/**\n * Disables global styles on Fabric components. This will prevent global overrides that might have been set by other Fabric users from applying to your components.\n *\n * @remarks\n *\n * This has a vary narrow use case and most likely should be avoided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disableGlobalClassNames: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disableGlobalClassNames",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ITheme#fonts:member",
              "docComment": "/**\n * Font styles for different sizes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fonts: "
                },
                {
                  "kind": "Reference",
                  "text": "IFontStyles",
                  "canonicalReference": "@microsoft/sp-component-base!IFontStyles:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ITheme#isInverted:member",
              "docComment": "/**\n * Indicates whether the theme is inverted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInverted: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isInverted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ITheme#palette:member",
              "docComment": "/**\n * Color palette.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "palette: "
                },
                {
                  "kind": "Reference",
                  "text": "IPalette",
                  "canonicalReference": "@microsoft/sp-component-base!IPalette:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "palette",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@microsoft/sp-component-base!ITheme#semanticColors:member",
              "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "semanticColors: "
                },
                {
                  "kind": "Reference",
                  "text": "ISemanticColors",
                  "canonicalReference": "@microsoft/sp-component-base!ISemanticColors:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "semanticColors",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!ThemeChangedEventArgs:class",
          "docComment": "/**\n * The object passed when the IThemeProvider.themeChangedEvent is raised.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ThemeChangedEventArgs extends "
            },
            {
              "kind": "Reference",
              "text": "SPEventArgs",
              "canonicalReference": "@microsoft/sp-core-library!SPEventArgs:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ThemeChangedEventArgs",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!ThemeChangedEventArgs#theme:member",
              "docComment": "/**\n * The new theme. If the value is undefined, then the theme was cleared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly theme: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@microsoft/sp-component-base!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@microsoft/sp-component-base!ThemeProvider:class",
          "docComment": "/**\n * The ThemeProvider class provides the capability to get different themes from the Framework. Themes can be provided in different contexts, e.g. Canvas sections may provide a variant of the global theme in some contexts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ThemeProvider "
            }
          ],
          "releaseTag": "Public",
          "name": "ThemeProvider",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@microsoft/sp-component-base!ThemeProvider:constructor(1)",
              "docComment": "/**\n * Construct a new instance of the ThemeProvider class.\n *\n * @param serviceScope - The current service scope.\n *\n * @param theme - Theme to provide.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(serviceScope: "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceScope",
                  "canonicalReference": "@microsoft/sp-core-library!ServiceScope:class"
                },
                {
                  "kind": "Content",
                  "text": ", theme?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme",
                  "canonicalReference": "@microsoft/sp-component-base!ITheme:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "serviceScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "theme",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!ThemeProvider.serviceKey:member",
              "docComment": "/**\n * The service key for ThemeProvider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly serviceKey: "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceKey",
                  "canonicalReference": "@microsoft/sp-core-library!ServiceKey:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ThemeProvider",
                  "canonicalReference": "@microsoft/sp-component-base!ThemeProvider:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serviceKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "@microsoft/sp-component-base!ThemeProvider#themeChangedEvent:member",
              "docComment": "/**\n * Raised when the theme changes with the new theme as an argument.\n *\n * @eventproperty\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly themeChangedEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "SPEvent",
                  "canonicalReference": "@microsoft/sp-core-library!SPEvent:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ThemeChangedEventArgs",
                  "canonicalReference": "@microsoft/sp-component-base!ThemeChangedEventArgs:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeChangedEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@microsoft/sp-component-base!ThemeProvider#tryGetTheme:member(1)",
              "docComment": "/**\n * If set, get the current scoped theme.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tryGetTheme(): "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyTheme",
                  "canonicalReference": "@microsoft/sp-component-base!IReadonlyTheme:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "tryGetTheme"
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
