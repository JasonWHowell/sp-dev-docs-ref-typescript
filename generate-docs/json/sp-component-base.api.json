{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.1.8",
    "schemaVersion": 1000
  },
  "kind": "Package",
  "canonicalReference": "@microsoft/sp-component-base",
  "docComment": "/**\n * SharePoint Framework support for building client-side components\n *\n * @remarks\n *\n * This package supports development of client-side components (e.g. web parts, client-side extensions, and applications) built using the SharePoint Framework. It defines the base classes and interfaces for functionality that is common across all client-side component types.\n *\n * @packagedocumentation\n */\n",
  "name": "@microsoft/sp-component-base",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "(BaseComponent:class)",
          "docComment": "/**\n * The base class for client-side components such as BaseClientSideWebPart or BaseExtension.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BaseComponent` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default abstract class "
            },
            {
              "kind": "Reference",
              "text": "BaseComponent"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "ISPEventObserver"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseComponent",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "(componentId:instance)",
              "docComment": "/**\n * Returns the component identifier as defined in the component’s associated manifest.\n *\n * @remarks\n *\n * Each client-side component has an associated manifest that is used by the sp-loader to load its scripts, and which may include additional metadata about the component. The manifest is uniquely identified using a text string containing a lower case GUID value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "componentId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "componentId",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(context:instance)",
              "docComment": "/**\n * Use the context object to access common services and state associated with the component.\n *\n * @remarks\n *\n * Child classes are expected to override this field by redeclaring it with a specialized type. It is meant to be a read-only property; the type cannot be declared as read-only in the base class (because it is initialized outside the constructor), but child classes should redeclare it as readonly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "context"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "BaseComponentContext"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(dispose:instance,0)",
              "docComment": "/**\n * Disposes the component.\n *\n * @remarks\n *\n * Third-party code generally does not need to call this method; it's invoked automatically when the lifecycle ends for a web part or extension. To perform custom cleanup when your component is disposed, override the {@link BaseComponent.onDispose} method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "(instanceId:instance)",
              "docComment": "/**\n * A unique identifier for the instance of the component.\n *\n * @remarks\n *\n * A component implementation can be loaded multiple times on the page. For example, if the component is a charting web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely identifies each of these instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "instanceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(isDisposed:instance)",
              "docComment": "/**\n * Returns true if the component has been already disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "isDisposed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(manifest:instance)",
              "docComment": "/**\n * Provides access to the manifest for the client-side component.\n *\n * @remarks\n *\n * Child classes can override this with more specialized manifest types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "manifest"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideComponentManifest"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(onDispose:instance,0)",
              "docComment": "/**\n * This event method is called at the end of the component's lifecycle. It provides an opportunity to release any associated resources, cancel any outstanding requests, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "onDispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "onDispose"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(BaseComponentContext:class)",
          "docComment": "/**\n * The base class for context objects for client-side components.\n *\n * @remarks\n *\n * A \"context\" object is a collection of well-known services and other objects that are likely to be needed by business logic that interacts with a associated component. Each component type has its own specialized subclass of BaseComponentContext, e.g. WebPartContext for web parts, ExtensionContext for client-side extensions, and so on.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `BaseComponentContext` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare abstract class "
            },
            {
              "kind": "Reference",
              "text": "BaseComponentContext"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseComponentContext",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "(aadHttpClientFactory:instance)",
              "docComment": "/**\n * The instance of AadHttpClientFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "aadHttpClientFactory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AadHttpClientFactory"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "aadHttpClientFactory",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(aadTokenProviderFactory:instance)",
              "docComment": "/**\n * The instance of AadTokenProviderFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "aadTokenProviderFactory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AadTokenProviderFactory"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "aadTokenProviderFactory",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(dispose:instance,0)",
              "docComment": "/**\n * Disposes the base component context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Property",
              "canonicalReference": "(dynamicDataProvider:instance)",
              "docComment": "/**\n * Returns the Dynamic Data Provider associated with the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "dynamicDataProvider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataProvider"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicDataProvider",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(dynamicDataSourceManager:instance)",
              "docComment": "/**\n * Returns the Dynamic Data Source Manager associated with the component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "dynamicDataSourceManager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataSourceManager"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dynamicDataSourceManager",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(httpClient:instance)",
              "docComment": "/**\n * The instance of HttpClient created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "httpClient"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "HttpClient"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "httpClient",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(instanceId:instance)",
              "docComment": "/**\n * A unique identifier for the instance of the component.\n *\n * @remarks\n *\n * A component implementation can be loaded multiple times on the page. For example, if the component is a charting web part, multiple instances of this web part could be added to the SharePoint canvas. The instanceId uniquely identifies each of these instances.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "instanceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "instanceId",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(isDisposed:instance)",
              "docComment": "/**\n * Returns true if the context is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "isDisposed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(manifest:instance)",
              "docComment": "/**\n * Manifest for the client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "manifest"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IClientSideComponentManifest"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "manifest",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(msGraphClientFactory:instance)",
              "docComment": "/**\n * The instance of MSGraphClientFactory created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "msGraphClientFactory"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "MSGraphClientFactory"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "msGraphClientFactory",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(pageContext:instance)",
              "docComment": "/**\n * The page context provides standard definitions for common SharePoint objects that need to be shared between the client-side application, web parts, and other components.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "pageContext"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "PageContext"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pageContext",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(serviceScope:instance)",
              "docComment": "/**\n * The associated {@link @microsoft/sp-core-library#ServiceScope} for this component.\n *\n * @remarks\n *\n * A child service scope is created for each client-side component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "serviceScope"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceScope"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serviceScope",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(spHttpClient:instance)",
              "docComment": "/**\n * The instance of SpHttpClient created for this instance of component\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "spHttpClient"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SPHttpClient"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "spHttpClient",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(DynamicDataProvider:class)",
          "docComment": "/**\n * The Dynamic Data Provider allows components to consume Dynamic Data. It allows components to request Dynamic Data sources and register/unregister to those.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class "
            },
            {
              "kind": "Reference",
              "text": "DynamicDataProvider"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicDataProvider",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "(dispose:instance,0)",
              "docComment": "/**\n * Disposes the Dynamic Data Provider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "(getAvailableSources:instance,0)",
              "docComment": "/**\n * Returns a list with all available Dynamic Data Sources.\n *\n * @returns Read-only array with all available sources.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getAvailableSources"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyArray"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "getAvailableSources"
            },
            {
              "kind": "Property",
              "canonicalReference": "(isDisposed:instance)",
              "docComment": "/**\n * Returns true if the Dynamic Data Provider is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "isDisposed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(registerAvailableSourcesChanged:instance,0)",
              "docComment": "/**\n * Registers a callback to an event that raises when the list of available Dynamic Data Sources is updated.\n *\n * @param callback - Function to execute when the sources are updated.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "registerAvailableSourcesChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "registerAvailableSourcesChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(registerPropertyChanged:instance,0)",
              "docComment": "/**\n * Registers a callback for updates when a property is changed in a Dynamic Data source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param propertyId - Id of the property of the source.\n *\n * @param callback - Function to execute when the source updates its data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "registerPropertyChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "sourceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "propertyId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  }
                }
              ],
              "name": "registerPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(registerSourceChanged:instance,0)",
              "docComment": "/**\n * Registers a callback for updates when a Dynamic Data source is changed. This happens when any property is updated within the source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param callback - Function to execute when the source updates its data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "registerSourceChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "sourceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "registerSourceChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(tryGetSource:instance,0)",
              "docComment": "/**\n * Returns a Dynamic Data Source, by its id. If the source is not present, it returns undefined.\n *\n * @param id - Id of the Dynamic Data Source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tryGetSource"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "tryGetSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "(unregisterAvailableSourcesChanged:instance,0)",
              "docComment": "/**\n * Unregisters a callback to an event that raises when the list of available Dynamic Data Sources is updated.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "unregisterAvailableSourcesChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "unregisterAvailableSourcesChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(unregisterPropertyChanged:instance,0)",
              "docComment": "/**\n * Unregisters a callback for updates when a property is changed in a Dynamic Data source.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param propertyId - Id of the property of the source.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "unregisterPropertyChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "sourceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "propertyId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  }
                }
              ],
              "name": "unregisterPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(unregisterSourceChanged:instance,0)",
              "docComment": "/**\n * Unregisters a callback for updates when a Dynamic Data source is changed.\n *\n * @param sourceId - Id of the Dynamic Data Source.\n *\n * @param callback - Function to remove from the registration. Must be the same it was registered with.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "unregisterSourceChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "sourceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "sourceId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "unregisterSourceChanged"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(DynamicDataSourceManager:class)",
          "docComment": "/**\n * The Dynamic Data Source Manager is responsible for: - Constructing the dynamic data source - Allowing initialization of the dynamic data source by a component - Allowing data source to update its metadata and notify when data has been updated.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class "
            },
            {
              "kind": "Reference",
              "text": "DynamicDataSourceManager"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicDataSourceManager",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "(dispose:instance,0)",
              "docComment": "/**\n * Disposes the resources held by the Dynamic Data source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "(initializeSource:instance,0)",
              "docComment": "/**\n * Initializes the Dynamic Data Source for the component.\n *\n * @param callableFunctions - Set of methods that are exposed through the Dynamic Data Source\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "initializeSource"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "callableFunctions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataCallables"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "callableFunctions",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "initializeSource"
            },
            {
              "kind": "Property",
              "canonicalReference": "(isDisposed:instance)",
              "docComment": "/**\n * Returns true if the DynamicDataSourceManager is disposed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "isDisposed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(notifyPropertyChanged:instance,0)",
              "docComment": "/**\n * Notifies that this source has updated a specific property.\n *\n * When invoked, it enables to broadcast the notification to all the consumers who have registered to this notification from this source.\n *\n * @param propertyId - Id of the updated property in the source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "notifyPropertyChanged"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "propertyId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "propertyId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "notifyPropertyChanged"
            },
            {
              "kind": "Method",
              "canonicalReference": "(notifySourceChanged:instance,0)",
              "docComment": "/**\n * Notifies that this source has updated its properties.\n *\n * When invoked, it enables to broadcast the notification to all the consumers who have registered to this notification from this source.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "notifySourceChanged"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "notifySourceChanged"
            },
            {
              "kind": "Property",
              "canonicalReference": "(sourceId:instance)",
              "docComment": "/**\n * Returns the Id of the current DataSource.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "sourceId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sourceId",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(updateMetadata:instance,0)",
              "docComment": "/**\n * Updates the metadata of the Dynamic Data Source. It allows to update fields like title or description. Auto-generated fields like alias, componentId or instanceId cannot be updated.\n *\n * @param metadata - Partial of the metadata.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateMetadata"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "metadata"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSourceMetadata"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "metadata",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  }
                }
              ],
              "name": "updateMetadata"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "(DynamicProperty:class)",
          "docComment": "/**\n * Serializable object that simplifies usage of a DynamicProperty.\n *\n * @remarks\n *\n * This is built for usage in web part properties, and modified through the property pane. Can be initialized with a default callback. Web parts initialize with the render method so if the 3rd party developer does nothing, a change in the DynamicProperty will re-render the web part automatically.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export default class "
            },
            {
              "kind": "Reference",
              "text": "DynamicProperty"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TValue"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "IDisposable"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DynamicProperty",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Create a new DynamicProperty object.\n *\n * @param provider - DynamicDataProvider.\n *\n * @param callback - Optional. Default callback to be registered for updates in the DynamicDataSource.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "provider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DynamicDataProvider"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "provider",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "(dispose:instance,0)",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-core-library#IDisposable.dispose}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispose"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "(hasDefaultCallback:instance,0)",
              "docComment": "/**\n * Returns true if the object has a default callback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hasDefaultCallback"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "hasDefaultCallback"
            },
            {
              "kind": "Property",
              "canonicalReference": "(isDisposed:instance)",
              "docComment": "/**\n * {@inheritDoc @microsoft/sp-core-library#IDisposable.isDisposed}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "isDisposed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isDisposed",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "(reference:instance)",
              "docComment": "/**\n * DynamicDataReference string that the DynamicProperty object points to. The reference is of the form `<source>:<property>:<path>`.\n *\n * @remarks\n *\n * If the DynamicProperty is set up with static data, this returns undefined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "reference"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "reference",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(register:instance,0)",
              "docComment": "/**\n * Registers a callback function for updates on the associated DynamicDataSource.\n *\n * @param callback - Callback function to register.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "register"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "register"
            },
            {
              "kind": "Method",
              "canonicalReference": "(removeDefaultCallback:instance,0)",
              "docComment": "/**\n * Removes the registration for the default callback.\n *\n * @remarks\n *\n * This can be useful for advanced users who only want their custom callbacks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "removeDefaultCallback"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "removeDefaultCallback"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setReference:instance,0)",
              "docComment": "/**\n * Sets the value of the DynamicProperty to be a reference to a DynamicDynamicSource and property. The reference is of the form `<source>:<property>:<path>`.\n *\n * @param reference - Id of the DynamicDataSource and property.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setReference"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "reference"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "reference",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setReference"
            },
            {
              "kind": "Method",
              "canonicalReference": "(setValue:instance,0)",
              "docComment": "/**\n * Sets a static value in the DynamicProperty.\n *\n * @param value - Value for the DynamicProperty.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "setValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "(tryGetSource:instance,0)",
              "docComment": "/**\n * Returns the DynamicDataSource that the DynamicProperty object refers to. Returns undefined if the source doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tryGetSource"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "IDynamicDataSource"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "tryGetSource"
            },
            {
              "kind": "Method",
              "canonicalReference": "(tryGetValue:instance,0)",
              "docComment": "/**\n * Returns the value of the object.\n *\n * @remarks\n *\n * If the value is an array, then the first element of the array is returned; otherwise, the value itself is returned.\n *\n * NOTE: This api will never return an array. To retrieve an array value, use the {@link DynamicProperty.tryGetValues} API.\n *\n * @returns the value associated with the dynamic property or undefined if the source or the data doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tryGetValue"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "tryGetValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "(tryGetValues:instance,0)",
              "docComment": "/**\n * Returns the value of the object.\n *\n * @remarks\n *\n * If the value is NOT an array, then an array is returned with the value being the single entry; otherwise, the value itself is returned. If the property is undefined or cannot be found, an empty array will be returned.\n *\n * NOTE: This api will always return an array and it assumes that the array is homogeneous. To retrieve a non-array value, use the {@link DynamicProperty.tryGetValue} API.\n *\n * @returns the value associated with the dynamic property or an empty array if the source or the data doesn't exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tryGetValues"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "TValue"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "tryGetValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "(unregister:instance,0)",
              "docComment": "/**\n * Unregisters a callback function for updates on the associated DynamicDataSource. The callback function must be the same it was registered with.\n *\n * @param callback - Callback function to unregister.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "unregister"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "callback"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "unregister"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(IFontStyles:interface)",
          "docComment": "/**\n * Font styles for different sizes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IFontStyles"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IFontStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "large",
              "docComment": "/**\n * Large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "large"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "large",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "medium",
              "docComment": "/**\n * Medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "medium"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "medium",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mediumPlus",
              "docComment": "/**\n * Larger than medium but smaller than large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "mediumPlus"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediumPlus",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mega",
              "docComment": "/**\n * Mega sized font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "mega"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mega",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "small",
              "docComment": "/**\n * Small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "small"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "small",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "smallPlus",
              "docComment": "/**\n * Larger than small but smaller than medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "smallPlus"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallPlus",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "superLarge",
              "docComment": "/**\n * Super large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "superLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "superLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "tiny",
              "docComment": "/**\n * Tiny font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tiny"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tiny",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xLarge",
              "docComment": "/**\n * Extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xSmall",
              "docComment": "/**\n * Extra small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xSmall"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xSmall",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xxLarge",
              "docComment": "/**\n * Extra extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xxLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xxLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(IPalette:interface)",
          "docComment": "/**\n * Color palette.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IPalette"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IPalette",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "accent",
              "docComment": "/**\n * Color code for the accent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "accent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accent",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "black",
              "docComment": "/**\n * Color code for the strongest color, which is black in the default theme. This is a very light color in inverted themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "black"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "black",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blackTranslucent40",
              "docComment": "/**\n * Color code for blackTranslucent40.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blackTranslucent40"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blackTranslucent40",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blue",
              "docComment": "/**\n * Color code for blue.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blue"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blue",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blueDark",
              "docComment": "/**\n * Color code for blueDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blueDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blueLight",
              "docComment": "/**\n * Color code for blueLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blueLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blueMid",
              "docComment": "/**\n * Color code for blueMid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blueMid"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blueMid",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "green",
              "docComment": "/**\n * Color code for green.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "green"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "green",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "greenDark",
              "docComment": "/**\n * Color code for greenDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "greenDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "greenDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "greenLight",
              "docComment": "/**\n * Color code for greenLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "greenLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "greenLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "magenta",
              "docComment": "/**\n * Color code for magenta.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "magenta"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magenta",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "magentaDark",
              "docComment": "/**\n * Color code for magentaDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "magentaDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magentaDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "magentaLight",
              "docComment": "/**\n * Color code for magentaLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "magentaLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "magentaLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralDark",
              "docComment": "/**\n * Color code for neutralDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralLight",
              "docComment": "/**\n * Color code for neutralLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralLighter",
              "docComment": "/**\n * Color code for neutralLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralLighter"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLighter",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralLighterAlt",
              "docComment": "/**\n * Color code for neutralLighterAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralLighterAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralLighterAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralPrimary",
              "docComment": "/**\n * Color code for neutralPrimary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralPrimary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralPrimary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralPrimaryAlt",
              "docComment": "/**\n * Color code for neutralPrimaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralPrimaryAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralPrimaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralQuaternary",
              "docComment": "/**\n * Color code for neutralQuaternary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralQuaternary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralQuaternary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralQuaternaryAlt",
              "docComment": "/**\n * Color code for neutralQuaternaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralQuaternaryAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralQuaternaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralSecondary",
              "docComment": "/**\n * Color code for neutralSecondary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralSecondary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralSecondary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralSecondaryAlt",
              "docComment": "/**\n * Color code for neutralSecondaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralSecondaryAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralSecondaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralTertiary",
              "docComment": "/**\n * Color code for neutralTertiary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralTertiary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralTertiary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "neutralTertiaryAlt",
              "docComment": "/**\n * Color code for neutralTertiaryAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "neutralTertiaryAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "neutralTertiaryAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "orange",
              "docComment": "/**\n * Color code for orange.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "orange"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orange",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "orangeLight",
              "docComment": "/**\n * Color code for orangeLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "orangeLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orangeLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "orangeLighter",
              "docComment": "/**\n * Color code for orangeLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "orangeLighter"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "orangeLighter",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "purple",
              "docComment": "/**\n * Color code for purple.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "purple"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purple",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "purpleDark",
              "docComment": "/**\n * Color code for purpleDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "purpleDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purpleDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "purpleLight",
              "docComment": "/**\n * Color code for purpleLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "purpleLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "purpleLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "red",
              "docComment": "/**\n * Color code for red.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "red"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "red",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "redDark",
              "docComment": "/**\n * Color code for redDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "redDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "redDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "teal",
              "docComment": "/**\n * Color code for teal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "teal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "teal",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "tealDark",
              "docComment": "/**\n * Color code for tealDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tealDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tealDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "tealLight",
              "docComment": "/**\n * Color code for tealLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tealLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tealLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeDark",
              "docComment": "/**\n * Color code for themeDark.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeDark"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDark",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeDarkAlt",
              "docComment": "/**\n * Color code for themeDarkAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeDarkAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDarkAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeDarker",
              "docComment": "/**\n * Color code for themeDarker.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeDarker"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeDarker",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeLight",
              "docComment": "/**\n * Color code for themeLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeLighter",
              "docComment": "/**\n * Color code for themeLighter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeLighter"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLighter",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeLighterAlt",
              "docComment": "/**\n * Color code for themeLighterAlt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeLighterAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeLighterAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themePrimary",
              "docComment": "/**\n * Color code for themePrimary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themePrimary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themePrimary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeSecondary",
              "docComment": "/**\n * Color code for themeSecondary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeSecondary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeSecondary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "themeTertiary",
              "docComment": "/**\n * Color code for themeTertiary.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "themeTertiary"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeTertiary",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "white",
              "docComment": "/**\n * Color code for the softest color, which is white in the default theme. This is a very dark color in dark themes. This is the page background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "white"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "white",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "whiteTranslucent40",
              "docComment": "/**\n * Color code for whiteTranslucent40\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "whiteTranslucent40"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "whiteTranslucent40",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "yellow",
              "docComment": "/**\n * Color code for yellow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "yellow"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "yellow",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "yellowLight",
              "docComment": "/**\n * Color code for yellowLight.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "yellowLight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "yellowLight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(IRawStyle:interface)",
          "docComment": "/**\n * IStyleObject extends a raw style objects, but allows selectors to be defined under the selectors node.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IRawStyle"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "IRawStyleBase"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IRawStyle",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "displayName",
              "docComment": "/**\n * Display name for the style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "displayName"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "selectors",
              "docComment": "/**\n * Custom selectors for the style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "selectors"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        ["
                },
                {
                  "kind": "Reference",
                  "text": "key"
                },
                {
                  "kind": "Content",
                  "text": ": string]: "
                },
                {
                  "kind": "Reference",
                  "text": "IStyle"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectors",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(IReadonlyFontStyles:interface)",
          "docComment": "/**\n * Font styles for different sizes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IReadonlyFontStyles"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyFontStyles",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "large",
              "docComment": "/**\n * Large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "large"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "large",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "medium",
              "docComment": "/**\n * Medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "medium"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "medium",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mediumPlus",
              "docComment": "/**\n * Larger than medium but smaller than large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "mediumPlus"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediumPlus",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mega",
              "docComment": "/**\n * Mega sized font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "mega"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mega",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "small",
              "docComment": "/**\n * Small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "small"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "small",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "smallPlus",
              "docComment": "/**\n * Larger than small but smaller than medium font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "smallPlus"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallPlus",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "superLarge",
              "docComment": "/**\n * Super large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "superLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "superLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "tiny",
              "docComment": "/**\n * Tiny font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tiny"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tiny",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xLarge",
              "docComment": "/**\n * Extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xSmall",
              "docComment": "/**\n * Extra small font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xSmall"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xSmall",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "xxLarge",
              "docComment": "/**\n * Extra extra large font style.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "xxLarge"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyRawStyle"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "xxLarge",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(IReadonlyTheme:interface)",
          "docComment": "/**\n * Immutable ITheme.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IReadonlyTheme"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Readonly"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ITheme"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyTheme",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "fonts",
              "docComment": "/**\n * Font styles for different sizes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "fonts"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyFontStyles"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "palette",
              "docComment": "/**\n * Color palette.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "palette"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IPalette"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "palette",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "semanticColors",
              "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "semanticColors"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISemanticColors"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "semanticColors",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ISemanticColors:interface)",
          "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n *\n * Note: text colors are defined in ISemanticTextColors.ts.\n *\n * ## Naming Convention\n *\n * The name of a semantic slot can quickly tell you how it’s meant to be used. It generally follows this format:\n *\n * [category name][element name][checked state][hovered/pressed/disabled state] [category name] – The “family” that this slot belongs to. [element name] – The name of the thing being targeted, such as the background or border. [checked state] – Whether the thing is checked. We assume things are unchecked by default, so no need to specify the unchecked state. (We used “checked” to refer to anything that is on, selected, toggled, highlighted, emphasized, etc.) [hovered/pressed/disabled state] – One of these states, if applicable. Each of these states are mutually exclusive. Pressed styles overwrite hovered styles, and disabled elements cannot be hovered or pressed.\n *\n * ## Base Slots\n *\n * A basic set of slots that provide many default body styles, such as text, subtext, disabled colors, and so on. If a category doesn't provide the slot you're looking for, use one from this category. For example, the placeholder text on a text input field has no corresponding slot in its category, so you'd use the bodySubtextColor from this category.\n *\n * ## Invariants\n *\n * When color has meaning, we do not want to change the color much theme to theme. For example, we will always want errors to be some shade of red, but we will need to tweak the exact shade so it's legible depending on whether it's an inverted theme or not. Invariant colors should almost never be changed by the theme, the defaults should suffice.\n *\n * ## Input Controls\n *\n * This category contains input components commonly used to denote state, including radio buttons, check boxes, toggle switches, sliders, progress bars, and more.\n *\n * ## Buttons\n *\n * Buttons! And all the flavors thereof.\n *\n * ## Menus\n *\n * Any kind of popup menus uses this category.\n *\n * ## Lists\n *\n * Lists differ from menus in that they are designed to show infinite amounts of items, often scroll, and have a large and complex interaction surface. This category covers all kinds of lists, whether they're typical one-item-per-row lists (like DetailsList) or ones with a tiled layout.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ISemanticColors"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ISemanticTextColors"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISemanticColors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "accentButtonBackground",
              "docComment": "/**\n * Background of an accent button (kicker)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "accentButtonBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentButtonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "blockingBackground",
              "docComment": "/**\n * Background for blocking issues, which is more severe than a warning, but not as bad as an error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "blockingBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "blockingBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyBackground",
              "docComment": "/**\n * The default color for backgrounds.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyDivider",
              "docComment": "/**\n * Divider lines; e.g. lines that separate sections in a menu, an <HR> element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyDivider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyDivider",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyFrameBackground",
              "docComment": "/**\n * The color for chrome adjacent to an area with bodyBackground. This can be used to provide visual separation of zones when using stronger colors, when using a divider line is not desired. In most themes, this should match the color of bodyBackground. See also: bodyFrameDivider\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyFrameBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyFrameBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyFrameDivider",
              "docComment": "/**\n * Used as the border between a zone with bodyFrameBackground and a zone with bodyBackground. If bodyBackground and bodyFrameBackground are different, this should be the same color as bodyFrameBackground in order to visually disappear. See also: bodyFrameBackground\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyFrameDivider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyFrameDivider",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyStandoutBackground",
              "docComment": "/**\n * The standout color for highlighted content backgrounds. For highlighted content when there is no emphasis, use the neutral variant instead. This should be a shade darker than bodyBackground in light themes, and a shade lighter in inverted themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyStandoutBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyStandoutBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackground",
              "docComment": "/**\n * Background of a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackgroundChecked",
              "docComment": "/**\n * Background of a checked standard button; e.g. bold/italicize/underline text button in toolbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackgroundChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackgroundCheckedHovered",
              "docComment": "/**\n * Background of a checked and hovered standard button; e.g. bold/italicize/underline text button in toolbar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackgroundCheckedHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackgroundDisabled",
              "docComment": "/**\n * Background of a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackgroundDisabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackgroundHovered",
              "docComment": "/**\n * Background of a hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackgroundHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBackgroundPressed",
              "docComment": "/**\n * Background of a pressed standard button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBackgroundPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBorder",
              "docComment": "/**\n * Border of a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonBorderDisabled",
              "docComment": "/**\n * Border of a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonBorderDisabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonBorderDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "defaultStateBackground",
              "docComment": "/**\n * Background color for default/empty state graphical elements; eg default icons, empty section that needs user to fill in content, placeholder graphics, empty seats, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultStateBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultStateBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "disabledBackground",
              "docComment": "/**\n * The default color for backgrounds of disabled controls; e.g. disabled text field.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "errorBackground",
              "docComment": "/**\n * The background for errors, if necessary, or highlighting the section of the page where the error is present.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "errorBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "focusBorder",
              "docComment": "/**\n * The color of the outline around focused controls that don't already have a border; e.g. menu items\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "focusBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "focusBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputBackground",
              "docComment": "/**\n * The background color of an input, e.g. textbox background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputBackgroundChecked",
              "docComment": "/**\n * The background of a checked control; e.g. checked radio button's dot, checked toggle's background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputBackgroundChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputBackgroundCheckedHovered",
              "docComment": "/**\n * The background of a checked and hovered control; e.g. checked checkbox's background color on hover.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputBackgroundCheckedHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputBorder",
              "docComment": "/**\n * The border of a large input control in its resting, state; e.g. the box of dropdown.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputBorderHovered",
              "docComment": "/**\n * The border color of a large hovered input control, such as textbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputBorderHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputBorderHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputFocusBorderAlt",
              "docComment": "/**\n * The alternate focus border color for elements that already have a border; e.g. text field borders on focus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputFocusBorderAlt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputFocusBorderAlt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputForegroundChecked",
              "docComment": "/**\n * The foreground of a checked control; e.g. checked checkbox's checkmark color, checked toggle's thumb color, radio button's background color around the dot.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputForegroundChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputForegroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listBackground",
              "docComment": "/**\n * The background color for the entire list.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listHeaderBackgroundHovered",
              "docComment": "/**\n * The background color for a hovered list header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listHeaderBackgroundHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listHeaderBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listHeaderBackgroundPressed",
              "docComment": "/**\n * The background color for a pressed list header.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listHeaderBackgroundPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listHeaderBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listItemBackgroundChecked",
              "docComment": "/**\n * The background color of a checked list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listItemBackgroundChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listItemBackgroundCheckedHovered",
              "docComment": "/**\n * The background color of a checked and hovered list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listItemBackgroundCheckedHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listItemBackgroundHovered",
              "docComment": "/**\n * The background color of a hovered list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listItemBackgroundHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItemBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listText",
              "docComment": "/**\n * The default text color for list item titles and text in column fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuBackground",
              "docComment": "/**\n * The background of a menu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuDivider",
              "docComment": "/**\n * The divider between menu items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuDivider"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuDivider",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuHeader",
              "docComment": "/**\n * The headers in menus that denote title of a section.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuHeader"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuHeader",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuIcon",
              "docComment": "/**\n * The default colors of icons in menus.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuIcon"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuIcon",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuItemBackgroundChecked",
              "docComment": "/**\n * @deprecated\n *\n * (Checked menu items no longer get a background color.) The background of checked menu item; e.g. a menu item whose submenu is open, a selected dropdown item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuItemBackgroundChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuItemBackgroundHovered",
              "docComment": "/**\n * The background of a hovered menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuItemBackgroundHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuItemBackgroundPressed",
              "docComment": "/**\n * The background of a pressed menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuItemBackgroundPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuItemText",
              "docComment": "/**\n * The text color of a menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuItemText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "menuItemTextHovered",
              "docComment": "/**\n * The text color of a hovered menu item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "menuItemTextHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "menuItemTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonBackground",
              "docComment": "/**\n * Background of a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonBackgroundDisabled",
              "docComment": "/**\n * Background of a disabled primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonBackgroundDisabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonBackgroundHovered",
              "docComment": "/**\n * Background of a hovered primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonBackgroundHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonBackgroundPressed",
              "docComment": "/**\n * Background of a pressed primary button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonBackgroundPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBackgroundPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonBorder",
              "docComment": "/**\n * Border of a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "smallInputBorder",
              "docComment": "/**\n * The border of a small input control in its resting unchecked state; e.g. the box of an unchecked checkbox.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "smallInputBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallInputBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "successBackground",
              "docComment": "/**\n * Background for success\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "successBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "successBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "variantBorder",
              "docComment": "/**\n * The color of the border that provides contrast between an element, such as a card, and an emphasized background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "variantBorder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "variantBorder",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "variantBorderHovered",
              "docComment": "/**\n * Hover color of border that provides contrast between an element, such as a card, and an emphasized background.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "variantBorderHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "variantBorderHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "warningBackground",
              "docComment": "/**\n * Background for warning messages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "warningBackground"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningBackground",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "warningHighlight",
              "docComment": "/**\n * Foreground color for warning highlights\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "warningHighlight"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningHighlight",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ISemanticTextColors:interface)",
          "docComment": "/**\n * Collection of semantic text colors.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ISemanticTextColors"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ISemanticTextColors",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "accentButtonText",
              "docComment": "/**\n * Color of text for accent button (kicker)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "accentButtonText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accentButtonText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "actionLink",
              "docComment": "/**\n * Neutral colored links and links for action buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "actionLink"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionLink",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "actionLinkHovered",
              "docComment": "/**\n * Hover state for neutral colored links and links for action buttons.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "actionLinkHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionLinkHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodySubtext",
              "docComment": "/**\n * De-emphasized text; e.g. metadata, captions, placeholder text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodySubtext"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodySubtext",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyText",
              "docComment": "/**\n * The default color for text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "bodyTextChecked",
              "docComment": "/**\n * Checked text color, e.g. selected menu item text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bodyTextChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "bodyTextChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonText",
              "docComment": "/**\n * Color of text in a standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonTextChecked",
              "docComment": "/**\n * Color of text in a checked standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonTextChecked"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextChecked",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonTextCheckedHovered",
              "docComment": "/**\n * Color of text in a checked and hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonTextCheckedHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextCheckedHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonTextDisabled",
              "docComment": "/**\n * Color of text in a disabled standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonTextDisabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonTextHovered",
              "docComment": "/**\n * Color of text in a hovered standard button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonTextHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "buttonTextPressed",
              "docComment": "/**\n * Color of text in a pressed standard button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonTextPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttonTextPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "disabledBodySubtext",
              "docComment": "/**\n * Disabled de-emphasized text, for use on the default background (bodyBackground).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledBodySubtext"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBodySubtext",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "disabledBodyText",
              "docComment": "/**\n * The default color for disabled text on the default background (bodyBackground).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledBodyText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledBodyText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "disabledSubtext",
              "docComment": "/**\n * Disabled de-emphasized text, for use on disabledBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledSubtext"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledSubtext",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "disabledText",
              "docComment": "/**\n * The default color for disabled text on top of disabledBackground; e.g. text in a disabled text field, disabled button text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disabledText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "errorText",
              "docComment": "/**\n * The default color of error text, used on bodyBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "errorText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputPlaceholderText",
              "docComment": "/**\n * The color of placeholder text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputPlaceholderText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputPlaceholderText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputText",
              "docComment": "/**\n * The color of input text.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "inputTextHovered",
              "docComment": "/**\n * The color of input text on hover.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "inputTextHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "link",
              "docComment": "/**\n * The color of a link.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "link"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "linkHovered",
              "docComment": "/**\n * The color of a hovered link. Also used when the link is active.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "linkHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "linkHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listText",
              "docComment": "/**\n * The default text color for list item titles and text in column fields.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "listTextColor",
              "docComment": "/**\n * @deprecated\n *\n * This slot was incorrectly named. Use listText instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "listTextColor"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listTextColor",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonText",
              "docComment": "/**\n * Color of text in a primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonTextDisabled",
              "docComment": "/**\n * Color of text in a disabled primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonTextDisabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextDisabled",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonTextHovered",
              "docComment": "/**\n * Color of text in a hovered primary button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonTextHovered"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextHovered",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "primaryButtonTextPressed",
              "docComment": "/**\n * Color of text in a pressed primary button; i.e. currently being clicked by mouse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "primaryButtonTextPressed"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryButtonTextPressed",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "warningText",
              "docComment": "/**\n * The color of text on errorBackground, warningBackground, blockingBackground, or successBackground.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "warningText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "warningText",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "(ITheme:interface)",
          "docComment": "/**\n * Collection of theme values, which can be used to programatically style components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ITheme"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ITheme",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "disableGlobalClassNames",
              "docComment": "/**\n * Disables global styles on Fabric components. This will prevent global overrides that might have been set by other Fabric users from applying to your components.\n *\n * @remarks\n *\n * This has a vary narrow use case and most likely should be avoided.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disableGlobalClassNames"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "disableGlobalClassNames",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "fonts",
              "docComment": "/**\n * Font styles for different sizes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fonts"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IFontStyles"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "fonts",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "isInverted",
              "docComment": "/**\n * Indicates whether the theme is inverted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "isInverted"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isInverted",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "palette",
              "docComment": "/**\n * Color palette.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "palette"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IPalette"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "palette",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "semanticColors",
              "docComment": "/**\n * The collection of all semantic slots for colors used in themes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "semanticColors"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ISemanticColors"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "semanticColors",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(ThemeChangedEventArgs:class)",
          "docComment": "/**\n * The object passed when the IThemeProvider.themeChangedEvent is raised.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ThemeChangedEventArgs"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SPEventArgs"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ThemeChangedEventArgs",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "(theme:instance)",
              "docComment": "/**\n * The new theme. If the value is undefined, then the theme was cleared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "theme"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "(ThemeProvider:class)",
          "docComment": "/**\n * The ThemeProvider class provides the capability to get different themes from the Framework. Themes can be provided in different contexts, e.g. Canvas sections may provide a variant of the global theme in some contexts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ThemeProvider"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ThemeProvider",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "(:constructor,0)",
              "docComment": "/**\n * Construct a new instance of the ThemeProvider class.\n *\n * @param serviceScope - The current service scope.\n *\n * @param theme - Theme to provide.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "serviceScope"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceScope"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "theme"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ITheme"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [
                {
                  "parameterName": "serviceScope",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "theme",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "(serviceKey:static)",
              "docComment": "/**\n * The service key for ThemeProvider.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static readonly "
                },
                {
                  "kind": "Reference",
                  "text": "serviceKey"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceKey"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ThemeProvider"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "serviceKey",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": true
            },
            {
              "kind": "Property",
              "canonicalReference": "(themeChangedEvent:instance)",
              "docComment": "/**\n * Raised when the theme changes with the new theme as an argument.\n *\n * @eventproperty\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "themeChangedEvent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SPEvent"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ThemeChangedEventArgs"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "themeChangedEvent",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "(tryGetTheme:instance,0)",
              "docComment": "/**\n * If set, get the current scoped theme.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "tryGetTheme"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "IReadonlyTheme"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 0,
              "parameters": [],
              "name": "tryGetTheme"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "IReadonlyRawStyle",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type "
            },
            {
              "kind": "Reference",
              "text": "IReadonlyRawStyle"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Readonly"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IRawStyle"
            },
            {
              "kind": "Content",
              "text": ">;"
            }
          ],
          "releaseTag": "Public",
          "name": "IReadonlyRawStyle"
        }
      ]
    }
  ]
}
