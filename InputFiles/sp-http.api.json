{
  "kind": "package",
  "name": "@microsoft/sp-http",
  "summary": [
    {
      "kind": "textDocElement",
      "value": "Base communication layer for the SharePoint Framework"
    }
  ],
  "remarks": [
    {
      "kind": "textDocElement",
      "value": "This package defines the base communication layer for the SharePoint Framework. For REST calls, it handles authentication, logging, diagnostics, and batching. It also simplifies requests by adding default headers that follow the recommended best practices."
    }
  ],
  "exports": {
    "GraphHttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "GraphHttpClient is used to perform REST calls against Microsoft Graph. It adds default headers and collects telemetry that helps the service to monitor the performance of an application. https://developer.microsoft.com/en-us/graph/"
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "For communicating with SharePoint, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "SPHttpClient",
          "memberName": "",
          "value": "SPHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class instead. For communicating with other internet services, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "HttpClient",
          "memberName": "",
          "value": "HttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class instead."
        }
      ],
      "isBeta": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "sp-http",
              "exportName": "GraphHttpClient",
              "value": "GraphHttpClient"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "configurations": {
          "kind": "property",
          "signature": "public static configurations: IGraphHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "IGraphHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The standard predefined GraphHttpClientConfiguration objects for use with the GraphHttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "fetch": {
          "kind": "method",
          "signature": "public fetch(url: string,\r\n    configuration: GraphHttpClientConfiguration,\r\n    options: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "The url string should be relative to the graph server. Good: 'v1.0/me/events' Bad: '/v1.0/me/events', 'https://graph.microsoft.com/v1.0/me/events'"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Perform a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "Generally, the parameters and semantics for HttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/ "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " The GraphHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): - Default \"Accept\" and \"Content-Type\" headers are added if not explicitly specified."
            }
          ],
          "isBeta": true
        },
        "get": {
          "kind": "method",
          "signature": "public get(url: string, configuration: GraphHttpClientConfiguration,\r\n    options?: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "post": {
          "kind": "method",
          "signature": "public post(url: string, configuration: GraphHttpClientConfiguration,\r\n    options: IGraphHttpClientOptions): Promise<GraphHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<GraphHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of GraphHttpClient; normally this should be the latest version number from GraphHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "GraphHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": true
        },
        "serviceKey": {
          "kind": "property",
          "signature": "public static serviceKey: ServiceKey<GraphHttpClient>;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ServiceKey<GraphHttpClient>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The service key for GraphHttpClient."
            }
          ],
          "remarks": [],
          "isBeta": true
        }
      }
    },
    "GraphHttpClientConfiguration": {
      "kind": "class",
      "extends": "HttpClientConfiguration",
      "implements": "IGraphHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Configuration for "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "GraphHttpClient",
          "memberName": "",
          "value": "GraphHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " ."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "The GraphHttpClientConfiguration object provides a set of switches for enabling/disabling various features of the GraphHttpClient class. Normally these switches are set (e.g. when calling GraphHttpClient.fetch()) by providing one of the predefined defaults from GraphHttpClientConfigurations, however switches can also be changed via the GraphHttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: IGraphHttpClientConfiguration, overrideFlags?: IGraphHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IGraphHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IGraphHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of GraphHttpClientCommonConfiguration with the specified flags."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ]
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: IGraphHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IGraphHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": true
        }
      }
    },
    "GraphHttpClientResponse": {
      "kind": "class",
      "extends": "HttpClientResponse",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "The Response subclass returned by methods such as GraphHttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This is a placeholder. In the future, additional GraphHttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": true,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "public constructor(response: Response);",
          "parameters": {
            "response": {
              "name": "response",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Response"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "sp-http",
              "exportName": "GraphHttpClientResponse",
              "value": "GraphHttpClientResponse"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "clone": {
          "kind": "method",
          "signature": "@override public clone(): GraphHttpClientResponse;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "GraphHttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": true
        }
      }
    },
    "HttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "HttpClient implements a basic set of features for performing REST operations against a generic service."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "For communicating with SharePoint, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "SPHttpClient",
          "memberName": "",
          "value": "SPHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class instead. For communicating with Microsoft Graph, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "GraphHttpClient",
          "memberName": "",
          "value": "GraphHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class."
        }
      ],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "sp-http",
              "exportName": "HttpClient",
              "value": "HttpClient"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "configurations": {
          "kind": "property",
          "signature": "public static configurations: IHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "IHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The standard predefined HttpClientConfiguration objects for use with the HttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "fetch": {
          "kind": "method",
          "signature": "public fetch(url: string, configuration: HttpClientConfiguration,\r\n    options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Performs a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "Although the SPHttpClient subclass adds additional enhancements, the parameters and semantics for HttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "isBeta": false
        },
        "get": {
          "kind": "method",
          "signature": "public get(url: string, configuration: HttpClientConfiguration,\r\n    options?: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "post": {
          "kind": "method",
          "signature": "public post(url: string, configuration: HttpClientConfiguration,\r\n    options: IHttpClientOptions): Promise<HttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<HttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of HttpClient; normally this should be the latest version number from HttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "HttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "public static serviceKey: ServiceKey<HttpClient>;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ServiceKey<HttpClient>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The service key for HttpClient."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "HttpClientConfiguration": {
      "kind": "class",
      "extends": "",
      "implements": "IHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Configuration for HttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "The HttpClientConfiguration object provides a set of switches for enabling/disabling various features of the HttpClient class. Normally these switches are set (e.g. when calling HttpClient.fetch()) by providing one of the predefined defaults from HttpClientConfigurations, however switches can also be changed via the HttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: IHttpClientConfiguration, overrideFlags?: IHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of HttpClientConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: IHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "IHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "@virtual protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Child classes should override this method to initialize the flags object."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "@virtual public overrideWith(sourceFlags: IHttpClientConfiguration): HttpClientConfiguration;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "HttpClientConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "IHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Child classes should override this method to construct the child class type, rather than the base class type."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "HttpClientResponse": {
      "kind": "class",
      "extends": "",
      "implements": "Response",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "The Response subclass returned by methods such as HttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This is a placeholder. In the future, additional HttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": false,
      "members": {
        "arrayBuffer": {
          "kind": "method",
          "signature": "public arrayBuffer(): Promise<ArrayBuffer>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<ArrayBuffer>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.arrayBuffer"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "blob": {
          "kind": "method",
          "signature": "public blob(): Promise<Blob>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<Blob>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.blob"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "bodyUsed": {
          "kind": "property",
          "signature": "public readonly bodyUsed: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.bodyUsed"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "clone": {
          "kind": "method",
          "signature": "@virtual public clone(): HttpClientResponse;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "HttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "formData": {
          "kind": "method",
          "signature": "public formData(): Promise<FormData>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<FormData>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.formData"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "headers": {
          "kind": "property",
          "signature": "public readonly headers: Headers;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "Headers",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.headers"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "json": {
          "kind": "method",
          "signature": "public json(): Promise<any>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<any>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.json"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "nativeResponse": {
          "kind": "property",
          "signature": "protected nativeResponse: Response;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "Response",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "ok": {
          "kind": "property",
          "signature": "public readonly ok: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.ok"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "status": {
          "kind": "property",
          "signature": "public readonly status: number;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "number",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.status"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "statusText": {
          "kind": "property",
          "signature": "public readonly statusText: string;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.statusText"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "text": {
          "kind": "method",
          "signature": "public text(): Promise<string>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<string>",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Body.text"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "type": {
          "kind": "property",
          "signature": "public readonly type: ResponseType;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ResponseType",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.type"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "url": {
          "kind": "property",
          "signature": "public readonly url: string;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "See documentation for whatwg-fetch:Response.url"
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IGraphHttpClientConfiguration": {
      "kind": "interface",
      "extends": "IHttpClientConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Flags interface for GraphHttpClientCommonConfiguration"
        }
      ],
      "remarks": [],
      "isBeta": true
    },
    "IGraphHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Standard configurations for GraphHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This interface provides standard predefined GraphHttpClientConfiguration objects for use with the GraphHttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": true,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "v1: GraphHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "GraphHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "This configuration turns off every feature switch for HttpClient. The fetch() behavior will be essentially identical to the WHATWG standard API that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "remarks": [],
          "isBeta": true
        }
      }
    },
    "IGraphHttpClientOptions": {
      "kind": "interface",
      "extends": "IHttpClientOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Options for HttpClient"
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This interface defines the options for the GraphHttpClient operations such as get(), post(), fetch(), etc. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "isBeta": true
    },
    "IHttpClientConfiguration": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Flags interface for HttpClientConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false
    },
    "IHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Standard configurations for HttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This interface provides standard predefined HttpClientConfiguration objects for use with the HttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "v1: HttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "HttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "This configuration turns off every feature switch for HttpClient. The fetch() behavior will be essentially identical to the WHATWG standard API that is documented here: https://fetch.spec.whatwg.org/"
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "IHttpClientOptions": {
      "kind": "interface",
      "extends": "RequestInit",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Options for HttpClient"
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This interface defines the options for the HttpClient operations such as get(), post(), fetch(), etc. It is based on the whatwg API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "isBeta": false
    },
    "ISPHttpClientCommonConfiguration": {
      "kind": "interface",
      "extends": "IHttpClientConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Flags interface for SPHttpClientCommonConfiguration"
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "jsonRequest": {
          "kind": "property",
          "signature": "jsonRequest?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"Content-Type\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"Content-Type\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 4.0, the value is 'application/json;charset=utf-8'."
            }
          ],
          "isBeta": false
        },
        "jsonResponse": {
          "kind": "property",
          "signature": "jsonResponse?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"Accept\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"Accept\" header was not explicitly added for the request, then SPHttpClient will add it. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 3.0, the value is 'application/json'. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 4.0, the value is 'application/json;odata.metadata=minimal'."
            }
          ],
          "isBeta": false
        }
      }
    },
    "ISPHttpClientConfiguration": {
      "kind": "interface",
      "extends": "ISPHttpClientCommonConfiguration",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Flags interface for SPHttpClientConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "defaultODataVersion": {
          "kind": "property",
          "signature": "defaultODataVersion?: ODataVersion;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is specified (i.e. not undefined): If the \"OData-Version\" header was not explicitly added for the request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases. The recommended version is 4.0."
            }
          ],
          "isBeta": false
        },
        "defaultSameOriginCredentials": {
          "kind": "property",
          "signature": "defaultSameOriginCredentials?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the RequestInit.credentials."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be \"same-origin\". Without this switch, different web browsers may apply different defaults. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For more information, see the spec: https://fetch.spec.whatwg.org/#cors-protocol-and-credentials"
            }
          ],
          "isBeta": false
        },
        "requestDigest": {
          "kind": "property",
          "signature": "requestDigest?: boolean;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically provide an \"X-RequestDigest\" header for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"X-RequestDigest\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). The request digest is managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed."
            }
          ],
          "isBeta": false
        }
      }
    },
    "ISPHttpClientConfigurations": {
      "kind": "interface",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Standard configurations for SPHttpClient."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This interface provides standard predefined SPHttpClientConfiguration objects for use with the SPHttpClient class. In general, clients should choose the latest available version number, which enables all the switches that are recommended for typical scenarios. (If new switches are introduced in the future, a new version number will be introduced, which ensures that existing code will continue to function the way it did at the time when it was tested.)"
        }
      ],
      "isBeta": false,
      "members": {
        "v1": {
          "kind": "property",
          "signature": "v1: SPHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "SPHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Version 1 enables these switches: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " consoleLogging = true; jsonRequest = true; jsonResponse = true; defaultSameOriginCredentials = true; defaultODataVersion = ODataVersion.v4; requestDigest = true"
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "ISPHttpClientOptions": {
      "kind": "interface",
      "extends": "IHttpClientOptions",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "This interface defines the options for the SPHttpClient operations such as get(), post(), fetch(), etc. It is based on the WHATWG API standard parameters that are documented here: https://fetch.spec.whatwg.org/"
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "webUrl": {
          "kind": "property",
          "signature": "webUrl?: string;",
          "isOptional": true,
          "isReadOnly": false,
          "isStatic": false,
          "type": "string",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Configure the SPWeb URL for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "For a write operation, SPHttpClient will automatically add the \"X-RequestDigest\" header, which may need to be fetched using a seperate request such as \"https://example.com/sites/sample/_api/contextinfo\". Typically the SPWeb URL (\"https://example.com/sites/sample\" in this example) can be guessed by looking for a reserved URL segment such as \"_api\" in the original REST query, however certain REST endpoints do not contain a reserved URL segment; in this case, the webUrl can be explicitly specified using this option."
            }
          ],
          "isBeta": false
        }
      }
    },
    "ODataVersion": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Represents supported version of the \"OData-Version\" header, which is part of the Open Data Protocol standard."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "toString": {
          "kind": "method",
          "signature": "public toString(): string;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "string",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Returns the \"OData-Version\" value, for example \"4.0\"."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "tryParseFromHeaders": {
          "kind": "method",
          "signature": "public static tryParseFromHeaders(headers: Headers): ODataVersion | undefined;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "ODataVersion | undefined",
            "description": []
          },
          "parameters": {
            "headers": {
              "name": "headers",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Headers"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Attempt to parse the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "If the \"OData-Version\" header is present, this returns the corresponding ODataVersion constant. An error is thrown if the version number is not supported. If the header is missing, then undefined is returned."
            }
          ],
          "isBeta": false
        },
        "v3": {
          "kind": "property",
          "signature": "public static v3: ODataVersion;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Represents version 3.0 for the \"OData-Version\" header"
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "v4": {
          "kind": "property",
          "signature": "public static v4: ODataVersion;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Represents version 4.0 for the \"OData-Version\" header"
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "SPHttpClient": {
      "kind": "class",
      "extends": "",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "SPHttpClient is used to perform REST calls against SharePoint. It adds default headers, manages the digest needed for writes, and collects telemetry that helps the service to monitor the performance of an application."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "For communicating with Microsoft Graph, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "GraphHttpClient",
          "memberName": "",
          "value": "GraphHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class instead. For communicating with other internet services, use the "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "HttpClient",
          "memberName": "",
          "value": "HttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " class."
        }
      ],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(serviceScope: ServiceScope);",
          "parameters": {
            "serviceScope": {
              "name": "serviceScope",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ServiceScope"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "sp-http",
              "exportName": "SPHttpClient",
              "value": "SPHttpClient"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "beginBatch": {
          "kind": "method",
          "signature": "public beginBatch(batchCreationOptions?: ISPHttpClientBatchCreationOptions): SPHttpClientBatch;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientBatch",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "batchCreationOptions": {
              "name": "batchCreationOptions",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientBatchCreationOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Begins an ODATA batch, which allows multiple REST queries to be bundled into a single web request."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "configurations": {
          "kind": "property",
          "signature": "public static configurations: ISPHttpClientConfigurations;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ISPHttpClientConfigurations",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The standard predefined SPHttpClientConfiguration objects for use with the SPHttpClient class."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "fetch": {
          "kind": "method",
          "signature": "public fetch(url: string, configuration: SPHttpClientConfiguration,\r\n    options: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Perform a REST service call."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "Generally, the parameters and semantics for SPHttpClient.fetch() are essentially the same as the WHATWG API standard that is documented here: https://fetch.spec.whatwg.org/ "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " The SPHttpClient subclass adds some additional behaviors that are convenient when working with SharePoint ODATA API's (which can be avoided by using HttpClient instead): "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " - Default \"Accept\" and \"Content-Type\" headers are added if not explicitly specified. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " - For write operations, an \"X-RequestDigest\" header is automatically added "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " - The request digest token is automatically fetched and stored in a cache, with support for preloading "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For a write operation, SPHttpClient will automatically add the \"X-RequestDigest\" header, which may need to be obtained by issuing a seperate request such as \"https://example.com/sites/sample/_api/contextinfo\". Typically the appropriate SPWeb URL can be guessed by looking for a reserved URL segment such as \"_api\" in the original URL passed to fetch(); if not, use ISPHttpClientOptions.webUrl to specify it explicitly."
            }
          ],
          "isBeta": false
        },
        "get": {
          "kind": "method",
          "signature": "public get(url: string, configuration: SPHttpClientConfiguration,\r\n    options?: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"GET\"."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "getWebUrlFromRequestUrl": {
          "kind": "method",
          "signature": "public static getWebUrlFromRequestUrl(requestUrl: string): string;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": true,
          "returnValue": {
            "type": "string",
            "description": [
              {
                "kind": "textDocElement",
                "value": "the inferred SPWeb URL"
              }
            ]
          },
          "parameters": {
            "requestUrl": {
              "name": "requestUrl",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "The URL for a SharePoint REST service"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Guess the base URL for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "This uses a heuristic to guess the SPWeb URL associated with the provided REST URL. This is necessary for operations such as the X-RequestDigest and ODATA batching, which require POSTing to a separate REST endpoint in order to complete a request. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For example, if the requestUrl is \"/sites/site/web/_api/service\", the returned URL would be \"/sites/site/web\". Or if the requestUrl is \"http://example.com/_layouts/service\", the returned URL would be \"http://example.com\"."
            }
          ],
          "isBeta": false
        },
        "post": {
          "kind": "method",
          "signature": "public post(url: string, configuration: SPHttpClientConfiguration,\r\n    options: ISPHttpClientOptions): Promise<SPHttpClientResponse>;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "Promise<SPHttpClientResponse>",
            "description": [
              {
                "kind": "textDocElement",
                "value": "a promise that will return the result"
              }
            ]
          },
          "parameters": {
            "url": {
              "name": "url",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "the URL to fetch"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "string"
            },
            "configuration": {
              "name": "configuration",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "determines the default behavior of SPHttpClient; normally this should be the latest version number from SPHttpClientConfigurations"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "SPHttpClientConfiguration"
            },
            "options": {
              "name": "options",
              "description": [
                {
                  "kind": "textDocElement",
                  "value": "additional options that affect the request"
                }
              ],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientOptions"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Calls fetch(), but sets the method to \"POST\"."
            }
          ],
          "remarks": [],
          "isBeta": false
        },
        "serviceKey": {
          "kind": "property",
          "signature": "public static serviceKey: ServiceKey<SPHttpClient>;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": true,
          "type": "ServiceKey<SPHttpClient>",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "The service key for SPHttpClient."
            }
          ],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "SPHttpClientCommonConfiguration": {
      "kind": "class",
      "extends": "HttpClientConfiguration",
      "implements": "ISPHttpClientCommonConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Common base class for SPHttpClientConfiguration and SPHttpClientBatchConfiguration."
        }
      ],
      "remarks": [],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: ISPHttpClientCommonConfiguration, overrideFlags?: ISPHttpClientCommonConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of SPHttpClientCommonConfiguration with the specified flags."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ]
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: ISPHttpClientCommonConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISPHttpClientCommonConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "@override protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "jsonRequest": {
          "kind": "property",
          "signature": "public readonly jsonRequest: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"Content-Type\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"Content-Type\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 3.0, the value is 'application/json;odata=verbose;charset=utf-8'. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 4.0, the value is 'application/json;charset=utf-8'."
            }
          ],
          "isBeta": false
        },
        "jsonResponse": {
          "kind": "property",
          "signature": "public readonly jsonResponse: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"Accept\" header for a JSON payload."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"Accept\" header was not explicitly added for the request, then SPHttpClient will add it. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 3.0, the value is 'application/json'. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For OData 4.0, the value is 'application/json;odata.metadata=minimal'."
            }
          ],
          "isBeta": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "@override public overrideWith(sourceFlags: ISPHttpClientCommonConfiguration): SPHttpClientCommonConfiguration;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientCommonConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientCommonConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    },
    "SPHttpClientConfiguration": {
      "kind": "class",
      "extends": "SPHttpClientCommonConfiguration",
      "implements": "ISPHttpClientConfiguration",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "Configuration for "
        },
        {
          "kind": "linkDocElement",
          "referenceType": "code",
          "scopeName": "@microsoft",
          "packageName": "sp-http",
          "exportName": "SPHttpClient",
          "memberName": "",
          "value": "SPHttpClient"
        },
        {
          "kind": "textDocElement",
          "value": " ."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "The SPHttpClientConfiguration object provides a set of switches for enabling/disabling various features of the SPHttpClient class. Normally these switches are set (e.g. when calling SPHttpClient.fetch()) by providing one of the predefined defaults from SPHttpClientConfigurations, however switches can also be changed via the SPHttpClientConfiguration.overrideWith() method."
        }
      ],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "constructor(flags: ISPHttpClientConfiguration, overrideFlags?: ISPHttpClientConfiguration);",
          "parameters": {
            "flags": {
              "name": "flags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            },
            "overrideFlags": {
              "name": "overrideFlags",
              "description": [],
              "isOptional": true,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of SPHttpClientConfiguration with the specified flags. The default values will be used for any flags that are missing or undefined. If overrideFlags is specified, it takes precedence over flags."
            }
          ],
          "remarks": []
        },
        "defaultODataVersion": {
          "kind": "property",
          "signature": "public readonly defaultODataVersion: ODataVersion;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "ODataVersion",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the \"OData-Version\" header."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is specified (i.e. not undefined): If the \"OData-Version\" header was not explicitly added for the request, then SPHttpClient will add the header to specify the version indicated by defaultODataVersion. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " NOTE: Without an 'OData-Version' header, the SharePoint server currently defaults to Version 3.0 in most cases. The recommended version is 4.0."
            }
          ],
          "isBeta": false
        },
        "defaultSameOriginCredentials": {
          "kind": "property",
          "signature": "public readonly defaultSameOriginCredentials: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically configure the RequestInit.credentials."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If RequestInit.credentials is not explicitly specified for the request, then SPHttpClient will assign it to be \"same-origin\". Without this switch, different web browsers may apply different defaults. "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " For more information, see the spec: https://fetch.spec.whatwg.org/#cors-protocol-and-credentials"
            }
          ],
          "isBeta": false
        },
        "flags": {
          "kind": "property",
          "signature": "protected flags: ISPHttpClientConfiguration;",
          "isOptional": false,
          "isReadOnly": false,
          "isStatic": false,
          "type": "ISPHttpClientConfiguration",
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "initializeFlags": {
          "kind": "method",
          "signature": "@override protected initializeFlags(): void;",
          "accessModifier": "protected",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "void",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "overrideWith": {
          "kind": "method",
          "signature": "@override public overrideWith(sourceFlags: ISPHttpClientConfiguration): SPHttpClientConfiguration;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientConfiguration",
            "description": []
          },
          "parameters": {
            "sourceFlags": {
              "name": "sourceFlags",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "ISPHttpClientConfiguration"
            }
          },
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        },
        "requestDigest": {
          "kind": "property",
          "signature": "public readonly requestDigest: boolean;",
          "isOptional": false,
          "isReadOnly": true,
          "isStatic": false,
          "type": "boolean",
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Automatically provide an \"X-RequestDigest\" header for authentication."
            }
          ],
          "remarks": [
            {
              "kind": "textDocElement",
              "value": "When this switch is true: "
            },
            {
              "kind": "paragraphDocElement"
            },
            {
              "kind": "textDocElement",
              "value": " If the \"X-RequestDigest\" header was not explicitly added for the request, then SPHttpClient will add it if the request is a write operation (i.e. an HTTP method other than \"GET\", \"HEAD\", or \"OPTIONS\"). The request digest is managed by the DigestCache service. In the case of a cache miss, an additional network request may be performed."
            }
          ],
          "isBeta": false
        }
      }
    },
    "SPHttpClientResponse": {
      "kind": "class",
      "extends": "HttpClientResponse",
      "implements": "",
      "typeParameters": [],
      "deprecatedMessage": [],
      "summary": [
        {
          "kind": "textDocElement",
          "value": "The Response subclass returned by methods such as SPHttpClient.fetch()."
        }
      ],
      "remarks": [
        {
          "kind": "textDocElement",
          "value": "This is a placeholder. In the future, additional SPHttpClient-specific functionality may be added to this class."
        }
      ],
      "isBeta": false,
      "members": {
        "__constructor": {
          "kind": "constructor",
          "signature": "public constructor(response: Response);",
          "parameters": {
            "response": {
              "name": "response",
              "description": [],
              "isOptional": false,
              "isSpread": false,
              "type": "Response"
            }
          },
          "deprecatedMessage": [],
          "summary": [
            {
              "kind": "textDocElement",
              "value": "Constructs a new instance of the "
            },
            {
              "kind": "linkDocElement",
              "referenceType": "code",
              "scopeName": "@microsoft",
              "packageName": "sp-http",
              "exportName": "SPHttpClientResponse",
              "value": "SPHttpClientResponse"
            },
            {
              "kind": "textDocElement",
              "value": " class"
            }
          ],
          "remarks": []
        },
        "clone": {
          "kind": "method",
          "signature": "@override public clone(): SPHttpClientResponse;",
          "accessModifier": "public",
          "isOptional": false,
          "isStatic": false,
          "returnValue": {
            "type": "SPHttpClientResponse",
            "description": []
          },
          "parameters": {},
          "deprecatedMessage": [],
          "summary": [],
          "remarks": [],
          "isBeta": false
        }
      }
    }
  }
}
